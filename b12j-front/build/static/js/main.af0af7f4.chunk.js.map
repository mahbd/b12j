{"version":3,"sources":["common/authService.jsx","configuration.js","store/api.js","apps/functions.js","store/basicReducerTemplate.js","store/data/contests.js","store/data/problems.js","store/data/users.js","store/data/submissions.js","store/data/tutorials.js","store/reducer.js","apps/navBar.jsx","apps/contest/contestList.jsx","apps/problem/problemList.jsx","apps/tutorial/tutorialList.jsx","apps/contest/contest.jsx","common/httpService.jsx","apps/contest/standing.jsx","apps/contest/contestRoute.jsx","apps/user/login.jsx","apps/user/userList.jsx","apps/user/profile.jsx","apps/user/userRoute.jsx","common/objectViewFuncs.jsx","common/fields/codeEditor.jsx","common/fields/problemCode.jsx","apps/problem/problem.jsx","common/fields/TextEditor.jsx","common/fields/input.jsx","apps/problem/problemForm.jsx","apps/problem/problemRoute.jsx","common/loadingAnimation.jsx","apps/submission/submissionList.jsx","apps/submission/submission.jsx","apps/submission/submissionRoute.jsx","store/webSocketReceive.jsx","apps/tutorial/tutorial.jsx","apps/tutorial/tutorialRoute.jsx","app.js","store/configureStore.js","index.js"],"names":["logout","redirectURL","localStorage","removeItem","window","location","getCurrentUser","jwt","getItem","jwtDecode","getJwt","apiEndpoint","document","domain","protocol","host","projectURLS","contests","submissions","standing","problems","tutorials","chat","cf","cfProblems","cfStatics","users","login","register","apiCallBegan","createAction","apiCallFailed","axios","defaults","headers","common","api","dispatch","next","action","a","type","payload","url","method","data","onSuccess","onError","onStart","onFailed","request","baseURL","response","message","extractDate","dateString","dateObj","Date","moment","format","basicReducers","name","state","list","push","id","dict","loading","results","i","length","receivedWithPagination","page","nextUrl","nextURL","offset","parse","Math","ceil","getPageNumberFromLink","count","fetched","parseInt","total","basicActions","slice","store","ws","requestedIdQueue","start","requested","failure","requestFailed","_load","received","_loadById","indexOf","toSend","send","JSON","stringify","add","edit","update","updated","getById","key","getState","actions","this","added","objList","createSlice","initialState","reducers","contestsReceived","contestActions","_loadContest","alert","getList","problemsReceived","console","log","contestId","contest","problemActions","_loadProblems","probId","info","loggedIn","loggedOut","userActions","loadUsers","firstName","fullName","currentUser","addUserToStore","submissionsReceived","submissionUpdated","updatedWithPagination","submissionActions","_loadSubmission","totalPages","tutorialsReceived","tutorialActions","_loadTutorials","dictKey","combineReducers","NavBar","user","useContext","SuperContext","userActs","className","to","ContestList","contestActs","useState","contestList","setContestList","useEffect","subscribe","map","title","hosts","userId","testers","start_time","end_time","ProblemList","match","params","problemActs","setProblems","unSubscribe","problem","by","TutorialList","tutorialActs","setTutorials","tutorial","Contest","setContest","reload","setReload","contestStart","now","toLocaleString","contestEnd","date","onComplete","interceptors","use","error","status","Promise","reject","get","post","put","delete","process","REACT_APP_API_URL","Standing","duringContest","setDuringContest","afterContest","setAfterContest","http","during","after","apiCall","renderStanding","objectList","position","item","floor","parseFloat","ContestRoute","path","component","Login","script","createElement","async","innerText","body","appendChild","removeChild","onClick","UserList","setUsers","first_name","last_name","Profile","userProbList","setUserProbList","userSubmissionList","setUserSubmissionList","userContest","setUserContest","testProblem","setTestProblem","userProblemData","userSubmissionData","userContestData","testProblemData","submission","verdict","UserRoute","formatHtml","text","__html","FormattedHtml","dangerouslySetInnerHTML","CodeEditor","Component","mode","theme","font","value","label","onChange","editorContainer","React","createRef","Fragment","htmlFor","onKeyUp","current","currentTarget","style","height","width","ref","display","ProblemCode","history","submissionActs","code","setCode","language","setLanguage","setTheme","setFont","handleChange","submit","httpService","disabled","Problem","problemId","setProblem","notice","inTerms","outTerms","test_cases","test","input","output","random","TextEditor","props","extract","content","getElementsByClassName","obj","innerHTML","script2","Input","placeholder","setState","autoComplete","defaultProps","ProblemForm","contest_id","corCode","conProbId","time_limit","examples","setText","ProblemRoute","LoadingAnimation","setUser","setSubmission","Modal","setAppElement","isLoading","isOpen","SubmissionList","submissionList","setSubmissionList","pages","pagination","pageList","toString","Submission","submissionId","verdictProcess","renderResult","details","result","SubmissionRoute","WebSocketReceive","addEventListener","e","target","Tutorial","tutorialId","setTutorial","TutorialRoute","createContext","App","generateData","then","Provider","configureStore","reducer","middleware","getDefaultMiddleware","ReconnectingWebSocket","wssURL","maxReconnectionDelay","minReconnectionDelay","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.af0af7f4.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode';\n\nexport function logout(redirectURL='/') {\n    localStorage.removeItem(\"token\");\n    window.location = redirectURL\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(\"token\");\n        return jwtDecode(jwt)\n    } catch {\n        return null;\n    }\n}\n\nexport function getJwt() {\n    return localStorage.getItem(\"token\")\n}\n","export const css = {\n    navBar: \" navbar-dark font-weight-bold bgDarkBlue \",\n    navSuccessButton: ' btn btn-outline-success ',\n    center: \" d-flex justify-content-center \",\n    alignRight: \" d-flex flex-row-reverse \",\n    hideOnPhone: \" d-none d-lg-block d-xl-block \",\n    username: \" nobr text-danger font-weight-bold \",\n};\n\nexport const minRefreshTime = 60;\nexport const jwtTokenKey = \"token\";\n\nconst apiURL = () => {\n    if (document.domain === \"localhost\") return \"http://127.0.0.1:8000/api\";\n    else return  document.location.protocol + \"//\" + document.location.host + \"/api\"\n}\n\nexport const apiEndpoint = apiURL();\n\nexport const wssURL = () => {\n    const protocol = document.location.protocol === \"https:\" ? \"wss://\" : \"ws://\";\n    if (document.domain === \"localhost\") return protocol + \"127.0.0.1:8000/ws\";\n    return  protocol + document.location.host + \"/ws\";\n}\n\nexport const projectURLS = {\n    contests: '/contests',\n    submissions: '/submissions',\n    standing: '/contests/standing',\n    problems: '/problems',\n    tutorials: '/tutorials',\n    chat: '/chat',\n    cf: '/cf',\n    cfProblems: 'cf/problems',\n    cfStatics: 'cf/statics',\n    users: '/users',\n    login: '/users/login',\n    register: '/users/register',\n    logout: '/users/logout',\n};\n\nexport const navBar = {\n    menuLeft: [\n        {\n            label: 'Home',\n            link: '/',\n        },\n        {\n            label: 'Bulletin',\n            link: '/bulletin',\n        }\n        ,\n        {\n            label: 'Chat',\n            link: projectURLS.chat,\n        },\n        {\n            label: 'Contests',\n            link: projectURLS.contests,\n            sub: [\n                {\n                    label: 'Contest List',\n                    link: projectURLS.contests,\n                },\n                {\n                    label: 'Submissions',\n                    link: projectURLS.submissions,\n                },\n                {\n                    label: 'Standing',\n                    link: projectURLS.standing,\n                },\n            ]\n        },\n        {\n            label: 'Tutorials',\n            link: projectURLS.tutorials,\n        },\n        {\n            label: 'Codeforces',\n            link: projectURLS.cf,\n            sub: [\n                {\n                    label: 'Problems',\n                    link: projectURLS.cfProblems\n                },\n                {\n                    label: 'Statics',\n                    link: projectURLS.cfStatics\n                }\n            ]\n        }\n    ],\n\n    menuRight: [\n        {\n            label: 'Login',\n            link: projectURLS.login,\n            // class: css.navSuccessButton,\n        },\n        {\n            label: 'Register',\n            link: projectURLS.register,\n            // class: css.navSuccessButton,\n        }\n    ]\n}","import axios from 'axios';\nimport {createAction} from \"@reduxjs/toolkit\";\nimport {getJwt} from \"../common/authService\";\nimport {apiEndpoint} from \"../configuration\";\n\nexport const apiCallBegan = createAction(\"api/callBegan\")\n// export const apiCallSuccess = createAction(\"api/callSuccess\")\nexport const apiCallFailed = createAction(\"api/callFailed\")\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\nconst api = ({dispatch}) => next => async action => {\n    if (action.type !== apiCallBegan.type) return next(action);\n    const {url, method, data, onSuccess, onError, onStart, onFailed} = action.payload;\n    if(onStart) {\n        dispatch({type: onStart})\n    }\n    next(action)\n    try {\n        const response = await axios.request({\n            baseURL: apiEndpoint,\n            url,\n            method,\n            data\n        });\n        if(onSuccess) {\n            dispatch({type: onSuccess, payload: response.data});\n        }\n    } catch (error) {\n        if(onFailed) dispatch({type: onFailed})\n        dispatch(apiCallFailed({payload:error.message}))\n        if(onError) dispatch({type: onError, payload: error.message})\n    }\n}\nexport default api;","import moment from \"moment\";\nimport {parse} from \"query-string\";\n\nexport const getPageNumberFromLink = (nextURL) => {\n    const parsed = parse(nextURL);\n    const offset = parsed.offset\n    const limit = 20\n    return Math.ceil(offset / limit)\n}\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}","import {apiCallBegan} from \"./api\";\nimport {projectURLS} from \"../configuration\";\nimport {getPageNumberFromLink} from \"../apps/functions\";\n\nexport const standardInitialState = () => {\n    return {\n        list: [],\n        dict: {},\n        fetched: [],\n        total: null,\n        loading: false,\n    }\n}\n\nexport const basicReducers = (name) => {\n    return {\n        [`${name}Added`]: (state, action) => {\n            state.list.push(action.payload.id);\n            state.dict[action.payload.id] = action.payload;\n            state.loading = false;\n        },\n\n        [`${name}Updated`]: (state, action) => {\n            if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n            else {\n                state.dict[action.payload.id] = action.payload;\n                state.list.push(action.payload)\n            }\n            state.loading = false;\n        },\n\n        [`${name}sReceived`]: (state, action) => {\n            const data = action.payload.results;\n            for (let i = 0; i < data.length; i++) {\n                state.dict[data[i].id] = data[i];\n                state.list.push(data[i].id)\n            }\n            state.loading = false;\n        },\n\n        [`${name}Requested`]: (state) => {\n            state.loading = true;\n        },\n\n        [`${name}RequestFailed`]: (state) => {\n            state.loading = false;\n        }\n    }\n};\n\nexport const receivedWithPagination = (state, action) => {\n    let page;\n    state.loading = false;\n    const nextUrl = action.payload.next;\n    if (!nextUrl) page = Math.ceil(action.payload.count / 20)\n    else page = getPageNumberFromLink(nextUrl);\n    state.fetched.push(parseInt(page));\n    state.list[page] = []\n    state.dict[page] = {}\n    state.total = Math.ceil(action.payload.count / 20);\n    const data = action.payload.results;\n    for (let i = 0; i < data.length; i++) {\n        state.dict[data[i].id] = data[i];\n        state.list[page].push(data[i].id)\n    }\n}\n\nexport const updatedWithPagination = (state, action) => {\n    if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n    else {\n        state.dict[action.payload.id] = action.payload;\n        if(!state.list[1]) state.list[1] = []\n        state.list[1] = [action.payload.id, ...state.list[1]]\n    }\n    state.loading = false;\n}\n\nexport class basicActions {\n    constructor(slice, store, ws, name) {\n        const actions = slice.actions;\n        this.ws = ws;\n        this.store = store;\n        this.name = name;\n        this.added = actions[`${name}Added`];\n        this.requestFailed = actions[`${name}RequestFailed`];\n        this.requested = actions[`${name}Requested`];\n        this.received = actions[`${name}sReceived`];\n        this.updated = actions[`${name}Updated`];\n    }\n\n    requestedIdQueue = [];\n\n    start = () => {\n        this.store.dispatch({\n            type: this.requested.type\n        })\n    }\n\n    failure = () => {\n        this.store.dispatch({\n            type: this.requestFailed.type\n        })\n    };\n\n    _load = (url = projectURLS[`${this.name}s`] + '/') => {\n        this.store.dispatch(apiCallBegan({\n            url: url,\n            onStart: this.requested.type,\n            onSuccess: this.received.type,\n            onFailed: this.requestFailed.type,\n        }));\n    };\n\n    _loadById = (id) => {\n        if (this.requestedIdQueue.indexOf(id) === -1) {\n            this.requestedIdQueue.push(id);\n            const toSend = {\"method\": \"GET\", \"target\": this.name, \"id\": id}\n            this.ws.send(JSON.stringify(toSend));\n            this.start();\n        }\n    };\n\n    add = (data) => {\n        const toSend = {\"method\": \"POST\", \"target\": this.name, \"data\": data};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    edit = (data) => {\n        const toSend = {\"method\": \"PUT\", \"target\": this.name, \"id\": data.id, \"data\": data};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    list(objList = []) {\n        if (!objList) return;\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        let data = []\n        for (let i = 0; i < objList.length; i++) {\n            data.push(dict[objList[i]]);\n        }\n        return data;\n    }\n\n    update = (data) => {\n        this.store.dispatch({type: this.updated.type, payload: data})\n    }\n\n    getById = (id, key = null) => {\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        if (key) {\n            if (dict[id]) return dict[id][key];\n            else if (id) this._loadById(id);\n        } else if (dict[id]) return dict[id]\n        if (id) this._loadById(id);\n        return null;\n    }\n}\n","import {basicActions, basicReducers, receivedWithPagination, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'contest';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        contestsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n    },\n});\n\nexport default slice.reducer;\n\nexport class contestActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadContest = (page=1) => {\n        const contests = this.store.getState().contests;\n        if (contests.fetched.indexOf(page) !== -1 || contests.loading) return;\n        if(page < 1 || (contests.total && page > contests.total)) {\n            alert(\"Wrong page\");\n        }\n\n        this._load(`/contests/?limit=20&offset=${(page - 1)*20}`)\n    };\n\n    getList = (page=1) => {\n        this._loadContest(page);\n        return this.list(this.store.getState().contests.list[page]);\n    }\n}","import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'problem';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        problemsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No Problems for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\nexport default slice.reducer;\n\nexport class problemActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadProblems = (contestId) => {\n        const problems = this.store.getState().problems;\n        if(problems.fetched.indexOf(contestId) !== -1 || problems.loading) return ;\n        this._load(`/problems/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadProblems(contestId);\n        let list = [];\n        const dict = this.store.getState().problems.dict;\n        for(let probId in dict) {\n            if(dict[probId].contest === contestId) {\n                list.push(dict[probId]);\n            }\n        }\n        return list;\n    }\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\nimport {getCurrentUser} from \"../../common/authService\";\nimport {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\n\nconst name = 'user'\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n        info: getCurrentUser(),\n    },\n    reducers: {\n        ...basicReducers(name),\n\n        loggedIn: (state, action) => {\n            state.info = action.payload;\n        },\n        loggedOut: state => {\n            state.info = null;\n        }\n    }\n});\n\nconst {loggedIn} = slice.actions;\nexport default slice.reducer;\n\nexport class userActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    };\n\n    loadUsers = () => {\n        this._load('/users/?limit=1000')\n    };\n\n    getList = () => this.list(this.store.getState().users.list);\n\n    firstName = (id) => {\n        return this.getById(id, 'first_name');\n    };\n\n    fullName = (id) => {\n        return this.getById(id, 'first_name') + ' ' + this.getById(id, 'last_name')\n    }\n\n    currentUser = () => {\n        return this.store.getState()[`${this.name}s`].info;\n    }\n\n    addUserToStore = () => {\n        this.store.dispatch({\n            type: loggedIn.type,\n            payload: getCurrentUser(),\n        })\n    };\n}\n","import {\n    basicActions,\n    basicReducers,\n    receivedWithPagination,\n    standardInitialState,\n    updatedWithPagination\n} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'submission';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n    },\n    reducers: {\n        ...basicReducers(name),\n        submissionsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n        submissionUpdated: (state, action) => {\n            updatedWithPagination(state, action);\n        }\n    }\n})\nexport default slice.reducer;\n\nexport class submissionActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadSubmission = (page = 1) => {\n        const submissions = this.store.getState().submissions;\n        if (submissions.fetched.indexOf(page) !== -1 || submissions.loading) return;\n        if (page < 1 || (submissions.total && page > submissions.total)) {\n            alert(\"Wrong page\");\n            return;\n        }\n        this._load(`/submissions/?limit=20&offset=${(page - 1) * 20}`)\n    };\n\n    getList = (page = 1) => {\n        this._loadSubmission(page);\n        return this.list(this.store.getState().submissions.list[page]);\n    }\n\n    totalPages = () => {\n        return this.store.getState()[this.name + 's'].total;\n    }\n}\n","import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'tutorial';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        tutorialsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No tutorials for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\n\nexport default slice.reducer;\n\nexport class tutorialActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadTutorials = (contestId) => {\n        const tutorials = this.store.getState().tutorials;\n        if(tutorials.fetched.indexOf(contestId) !== -1 || tutorials.loading) return ;\n        this._load(`/tutorials/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadTutorials(contestId);\n        let list = [];\n        const dict = this.store.getState().tutorials.dict;\n        for(let dictKey in dict) {\n            if(dict[dictKey].contest === contestId) {\n                list.push(dict[dictKey]);\n            }\n        }\n        return list;\n    }\n}\n","import {combineReducers} from \"redux\";\nimport contests from './data/contests';\nimport problems from './data/problems';\nimport users from './data/users';\nimport submissions from './data/submissions';\nimport tutorials from \"./data/tutorials\";\n\n\nexport default combineReducers({\n    contests: contests,\n    problems: problems,\n    submissions: submissions,\n    users: users,\n    tutorials: tutorials,\n});\n","import React, {useContext} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {SuperContext} from \"../app\";\n\nconst NavBar = () => {\n    const {userActs} = useContext(SuperContext);\n    const user = userActs.currentUser();\n    return (\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            {/*<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"*/}\n            {/*        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">*/}\n            {/*    <span className=\"navbar-toggler-icon\"/>*/}\n            {/*</button>*/}\n            <div className=\"\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/contests\">Contests</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/submissions\">Submission</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        {!user && <NavLink to=\"/users/login\" className=\"nav-link\">Login</NavLink>}\n                        {user && <NavLink to=\"/users/profile\" className=\"nav-link\">Profile</NavLink>}\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;\n","import React, {useState, useContext, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {Link} from \"react-router-dom\";\nimport {extractDate} from \"../functions\";\n\nconst ContestList = () => {\n    const {contestActs, userActs} = useContext(SuperContext);\n    const [contestList, setContestList] = useState(contestActs.getList());\n\n    useEffect(() => {\n    contestActs.store.subscribe(() => {\n        setContestList(contestActs.getList());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    });}, []);\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writers</th>\n                    <th>Testers</th>\n                    <th>Start</th>\n                    <th>End</th>\n                </tr>\n                </thead>\n                <tbody>\n                {contestList && contestList.map((contest) => <tr key={contest.id}>\n                    <td><Link to={`/contests/${contest.id}`}>{contest.title}</Link></td>\n                    <td>{contest.hosts.map((userId) => <p key={userId}>{userActs.firstName(userId)}</p> )}</td>\n                    <td>{contest.testers.map((userId) => <p key={userId}>{userActs.firstName(userId)}</p> )}</td>\n                    <td>{extractDate(contest.start_time)}</td>\n                    <td>{extractDate(contest.end_time)}</td>\n                </tr>)\n                }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default ContestList;","import React, {useContext, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SuperContext} from \"../../app\";\n\nconst ProblemList = ({match}) => {\n    const {contestId} = match.params;\n    const {problemActs, userActs} = useContext(SuperContext);\n    const [problems, setProblems] = useState(problemActs.getList(contestId));\n\n    let unSubscribe = problemActs.store.subscribe(() => {\n        setProblems(problemActs.getList(contestId));\n        unSubscribe();\n    });\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writer</th>\n                </tr>\n                </thead>\n                <tbody>\n                {problems.map((problem) => <tr key={problem.id}>\n                    <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                    <td>{userActs.fullName(problem.by)}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default ProblemList;","import React, {useContext, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SuperContext} from \"../../app\";\n\nconst TutorialList = ({match}) => {\n    const {contestId} = match.params;\n    const {tutorialActs, userActs} = useContext(SuperContext);\n    const [tutorials, setTutorials] = useState(tutorialActs.getList(contestId));\n\n    let unSubscribe = tutorialActs.store.subscribe(() => {\n        setTutorials(tutorialActs.getList(contestId));\n        unSubscribe();\n    });\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writer</th>\n                </tr>\n                </thead>\n                <tbody>\n                {tutorials.map((tutorial) => <tr key={tutorial.id}>\n                    <td><Link to={`/tutorials/${tutorial.id}`}>{tutorial.title}</Link></td>\n                    <td>{userActs.fullName(tutorial.by)}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default TutorialList;","import React, {useContext, useState} from 'react';\nimport {SuperContext} from \"../../app\";\nimport ProblemList from \"../problem/problemList\";\nimport Countdown from \"react-countdown\";\nimport TutorialList from \"../tutorial/tutorialList\";\nimport {Link} from \"react-router-dom\";\n\nconst Contest = ({match}) => {\n    const {contestId} = match.params;\n    const {contestActs} = useContext(SuperContext);\n    const [contest, setContest] = useState(contestActs.getById(contestId));\n    const [reload, setReload] = useState(false);\n\n    const forceReload = () => {\n        setReload(!reload);\n    }\n\n    let unSubscribe = contestActs.store.subscribe(() => {\n        setContest(contestActs.getById(contestId));\n        setReload(!reload);\n        unSubscribe();\n    })\n\n    const contestStart = new Date((contest && contest.start_time) || Date.now().toLocaleString());\n    const contestEnd = new Date((contest && contest.end_time) || Date.now().toLocaleString());\n\n    return (\n        <div className=\"container\">\n            {contestStart > Date.now() && <div className=\"container\">\n                <p className=\"display-4\">{contest.title}</p>\n                <Countdown date={contest.start_time} className=\"display-4\" onComplete={forceReload}/>\n            </div>}\n\n            {contest && <div>\n                <h1 className=\"text-success\">{contest.title}</h1>\n                <Link to={`/contests/standing/${contestId}`}><button className=\"btn-lg btn-outline-success\">Standing</button></Link>\n            </div>}\n\n            {contestEnd <= Date.now() && <div>\n                <h2>Tutorials</h2>\n                <TutorialList match={match}/>\n            </div>}\n\n            {contestStart <= Date.now() && <div>\n                <h2>Problems</h2>\n                <ProblemList match={match}/>\n            </div>}\n        </div>\n    );\n};\n\nexport default Contest;","import axios from 'axios'\nimport {getJwt} from \"./authService\";\n\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\naxios.interceptors.response.use(null, error => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n\n    if(!expectedError) {\n        console.log(\"Logging the error\", error);\n        alert(\"An unexpected error.\");\n    }\n\n    return Promise.reject(error);\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};","import React, {useContext, useEffect, useState} from 'react';\nimport http from \"../../common/httpService\";\nimport {SuperContext} from \"../../app\";\n\nconst url = process.env.REACT_APP_API_URL\n\nconst Standing = ({match}) => {\n    const {contestActs, userActs} = useContext(SuperContext);\n    const {contestId} = match.params;\n    const [duringContest, setDuringContest] = useState([]);\n    const [afterContest, setAfterContest] = useState([]);\n    useEffect(() => {\n        const apiCall = async () => {\n            contestActs.start(); // Start Load animation\n            const data = await http.get(`${url}/standing/${contestId}`)\n            contestActs.failure(); // Stop Load animation\n            setDuringContest(data.data.during);\n            setAfterContest(data.data.after);\n        }\n        apiCall();\n\n    }, [contestId])\n    let position = 1;\n\n    return (\n        <div className=\"container\">\n            <h2>During Contest</h2>\n            {renderStanding(duringContest, userActs, position)}\n            <h2>After Contest</h2>\n            {renderStanding(afterContest, userActs, position)}\n        </div>\n    );\n};\n\nexport default Standing;\n\nconst renderStanding = (objectList, userActs, position = 1) =>\n    <table className=\"table table-bordered table-striped\">\n        <thead>\n        <tr>\n            <th>Position</th>\n            <th>User</th>\n            <th>Solves</th>\n            <th>Penalty</th>\n        </tr>\n        </thead>\n        <tbody>\n        {objectList.map(item => <tr key={position}>\n            <td>{position++}</td>\n            <td>{userActs.fullName(item[0])}</td>\n            <td>{item[1]}</td>\n            <td>{Math.floor(parseFloat(item[2]) / 100)}</td>\n        </tr>)}\n        </tbody>\n    </table>\n","import React from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport {projectURLS} from \"../../configuration\";\nimport ContestList from \"./contestList\";\nimport Contest from \"./contest\";\nimport Standing from \"./standing\";\n\nconst ContestRoute = () => {\n    return <Switch>\n        <Route path=\"/contests/standing/:contestId\" component={Standing} />\n        <Route path=\"/contests/:contestId\" component={Contest} />\n        <Route path={projectURLS.contests} component={ContestList} />\n    </Switch>\n};\n\nexport default ContestRoute;","import React, {useEffect, useContext} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst Login = () => {\n    const {userActs} = useContext(SuperContext);\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.innerText = `const firebaseConfig = {\n            apiKey: \"AIzaSyB9n-TJY1hy49WoECQH7fZXlxA7lKI2VH4\",\n            authDomain: \"b12j-mah.firebaseapp.com\",\n            databaseURL: \"https://b12j-mah.firebaseio.com\",\n            projectId: \"b12j-mah\",\n            storageBucket: \"b12j-mah.appspot.com\",\n            messagingSenderId: \"704405925886\",\n            appId: \"1:704405925886:web:2066da3c25584a7ed4daaf\",\n            measurementId: \"G-XE9M4QRX4J\"\n        };\n        firebase.initializeApp(firebaseConfig);\n    \n        const ui = new firebaseui.auth.AuthUI(firebase.auth());\n        const uiConfig = {\n            callbacks: {\n                signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n                    firebase.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function (idToken) {\n                        fetch('${apiEndpoint + \"/login/\"}', {\n                            method: \"POST\",\n                            headers: {'token': idToken}\n                        }).then(async (response) => {\n                            const data = await response.json();\n                            localStorage.setItem(\"token\", data.jwt);\n                            window.location = '/';                        \n                        })\n                    });\n                    return true;\n                },\n            },\n            signInFlow: 'popup',\n            signInOptions: [\n                firebase.auth.GoogleAuthProvider.PROVIDER_ID\n            ],\n        };\n        ui.start('#firebaseui-auth-container', uiConfig);`\n        document.body.appendChild(script);\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, []);\n    return (\n        <div>\n            <div onClick={userActs.start}><div id=\"firebaseui-auth-container\" className=\"pt-5\" /></div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, {useContext, useState, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\n\nconst UserList = () => {\n    const {userActs} = useContext(SuperContext);\n    const [users, setUsers] = useState(userActs.getList());\n    useEffect(() => {\n        userActs.store.subscribe(() => {\n            setUsers(userActs.getList());\n        })\n    });\n    return (\n        <div className=\"container\">\n            <table className=\"table table-dark table-bordered\">\n                <thead>\n                <tr>\n                    <th>User id</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                </tr>\n                </thead>\n                <tbody>\n                {users.map((user) => <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.first_name}</td>\n                    <td>{user.last_name}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UserList;","import React, {useEffect, useContext, useState} from 'react';\nimport http from \"../../common/httpService\";\nimport {SuperContext} from \"../../app\";\nimport {Link} from \"react-router-dom\";\nimport {logout} from \"../../common/authService\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst Profile = () => {\n    const {problemActs} = useContext(SuperContext);\n    const [userProbList, setUserProbList] = useState([]);\n    const [userSubmissionList, setUserSubmissionList] = useState([]);\n    const [userContest, setUserContest] = useState([]);\n    const [testProblem, setTestProblem] = useState([]);\n\n    useEffect(() => {\n        const apiCall = async () => {\n            problemActs.start(); // Start Load animation\n            const userProblemData = await http.get(`${apiEndpoint}/problems/user_problems/`);\n            const userSubmissionData = await http.get(`${apiEndpoint}/submissions/user_submissions/`);\n            const userContestData = await http.get(`${apiEndpoint}/contests/user_contests/`);\n            const testProblemData = await http.get(`${apiEndpoint}/problems/test_problems/`);\n            problemActs.failure(); // Stop Load animation\n            setUserProbList(userProblemData.data.results);\n            setUserSubmissionList(userSubmissionData.data.results);\n            setUserContest(userContestData.data.results);\n            setTestProblem(testProblemData.data.results);\n        }\n        apiCall();\n        // eslint-disable-next-line\n    }, [])\n    return (\n        <div className=\"container pt-5\">\n            <button className=\"btn btn-danger\" onClick={logout}>Logout</button>\n            <div className=\"row\">\n                <div className=\"col-sm\">\n                    <b>Contest set by you</b>\n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th/>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userContest.map(contest => <tr key={contest.id}>\n                            <td><Link to={`/contests/${contest.id}`}>{contest.title}</Link></td>\n                            <td><Link to={`/problems/add/${contest.id}`} className=\"btn-sm btn-success\">Add\n                                problem</Link></td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"col-sm\">\n                    <b>Testable problem for you</b>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Contest</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {testProblem.map(problem => <tr key={problem.id}>\n                            <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                            <td>{problem.contest}</td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm\">\n                    <b>Last 20 Problem set by you</b>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Contest</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userProbList.map(problem => <tr key={problem.id}>\n                            <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                            <td>{problem.contest}</td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"col-sm\">\n                    <b>Last 20 submissions by you</b>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Contest</th>\n                            <th>Problem</th>\n                            <th>Verdict</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userSubmissionList.map(submission => <tr key={submission.id}>\n                            <td>{submission.contest}</td>\n                            <td>{submission.problem}</td>\n                            <td><Link to={`/submissions/${submission.id}`}>{submission.verdict}</Link></td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Login from \"./login\";\nimport {projectURLS} from \"../../configuration\";\nimport UserList from \"./userList\";\nimport Profile from \"./profile\";\n\nconst UserRoute = () => {\n    return (\n        <Switch>\n            <Route path={projectURLS.login} component={Login} />\n            <Route path=\"/users/profile\" component={Profile} />\n            <Route path=\"/users/list\" component={UserList} />\n        </Switch>\n    );\n};\n\nexport default UserRoute;","import React, {Component} from 'react';\nimport moment from \"moment\";\nimport {Link} from \"react-router-dom\";\nimport {css} from \"../configuration\";\n\nexport const createTitle = (title, link, className = \"h1\") => {\n    return link ? <Link to={link}>\n        <div className={className + css.center}>{title}</div>\n    </Link> : <div className={className + css.center}>{title}</div>\n};\n\nexport const createLeft = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"\"}) => {\n    return <div className={\"col \" + constClass}> {constText}\n        <span className={textListClass}>{textList.join(\"\\n\")}</span>\n    </div>\n};\n\nexport const createRight = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"text-dark\", hidePhone = true}) => {\n    return <div className={\"col\" + css.alignRight}>\n            <span className={(hidePhone && css.hideOnPhone)}> {constText}\n                <span className={textListClass}>{textList.join(\"\\n\")}</span>\n            </span>\n    </div>\n};\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}\n\nconst formatHtml = (text) => {\n    if (text) {\n        return {__html: `${text}`}\n    }\n    return {__html: \"<span />\"}\n}\n\nexport const FormattedHtml = ({text}) => <div dangerouslySetInnerHTML={formatHtml(text)}/>\n\nclass ObjectView extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default ObjectView;","import React, {useEffect} from 'react';\n\nconst CodeEditor = ({mode, theme, font, name, value, label, onChange}) => {\n\n    const editorContainer = React.createRef();\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n\n        script.innerText = `ace.require(\"ace/ext/language_tools\");\n        var editor = ace.edit(\"${name + \"c\"}\");\n        editor.session.setMode(\"ace/mode/${mode}\");\n        editor.setTheme(\"ace/theme/${theme}\");\n        editor.getSession().setUseWorker(true);\n        editor.setValue(\"${value}\");\n        editor.clearSelection();\n        editor.setOptions({\n            enableBasicAutocompletion: true,\n            enableSnippets: true,\n            enableLiveAutocompletion: true\n        });\n        editor.setFontSize(\"${font}px\");\n        editor.commands.addCommand({\n            name: \"showKeyboardShortcuts\",\n            bindKey: {win: \"Ctrl-h\", mac: \"Command-Alt-h\"},\n            exec: function (editor) {\n                ace.config.loadModule(\"ace/ext/keybinding_menu\", function (module) {\n                    module.init(editor);\n                    editor.showKeyboardShortcuts()\n                })\n            }\n        });\n        var textarea = document.getElementById('${name}');\n        editor.getSession().on(\"change\", function () {\n            textarea.value = editor.getSession().getValue();\n        });`\n        document.body.appendChild(script);\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, [font, mode, name, theme]);\n\n    const handleChange = () => {\n        const value = editorContainer.current.value;\n        const obj = {currentTarget: {name: name, value: value}};\n        onChange(obj)\n    }\n\n    return (\n        <React.Fragment>\n            <label htmlFor={name + \"c\"}><h3>{label}</h3></label>\n            <div id={name + \"c\"} onKeyUp={handleChange} style={{height: \"300px\", width: \"100%\"}} />\n            <textarea id={name} className=\"ace_code_editor\" name={name} ref={editorContainer}\n                      style={{display: \"none\"}}/>\n        </React.Fragment>\n    )\n}\n\nexport default CodeEditor;","import React, {useState, useContext} from 'react';\nimport httpService from \"../httpService\";\nimport {SuperContext} from \"../../app\";\nimport {getCurrentUser} from \"../authService\";\nimport CodeEditor from \"./codeEditor\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst ProblemCode = ({problem, history}) => {\n    const {submissionActs} = useContext(SuperContext)\n    const [code, setCode] = useState('');\n    const [language, setLanguage] = useState('python');\n    const [theme, setTheme] = useState('chrome');\n    const [font, setFont] = useState(15);\n\n    const user = getCurrentUser();\n\n    const handleChange = ({currentTarget}) => {\n        const {name, value} = currentTarget;\n        if (name === 'language') setLanguage(value);\n        else if (name === problem.id) setCode(value);\n        else if (name === 'theme') setTheme(value);\n        else if (name === 'font') setFont(value);\n    };\n\n\n    const submit = async () => {\n        if (code.length < 10) {\n            alert(\"Your code is less than 10 character. If you're pasting code then please press space or any key after paste.\");\n            return;\n        }\n        if (language !== 'python' && language !== 'c_cpp') {\n            alert(\"Please choose correct language\");\n            return;\n        }\n        const data = {\n            code, language, problem: problem.id\n        }\n        submissionActs.start();\n        try {\n            const response = await httpService.post(apiEndpoint + '/submissions/', data)\n            submissionActs.failure();\n            history.push(`/submissions/${response.data.id}`)\n        } catch (error) {\n            submissionActs.failure();\n            if (error.response && error.response.status === 403) {\n                window.location.reload();\n            } else if(error.response) {\n                console.log(\"This is the error reason. Please send it to Mahmudul\", error.response);\n                alert(`Tell this to Mahmudul: code: ${error.response.status}`);\n            } else {\n                console.log(error);\n                alert(\"Couldn't submit. Sometimes server is causing this error. Check your console\");\n            }\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row pr-3 pl-3\">\n                <select className=\"custom-select col-4\" name=\"language\" onChange={handleChange}>\n                    <option value=\"python\">Python3</option>\n                    <option value=\"c_cpp\">C/C++</option>\n                </select>\n                <select className=\"custom-select col-4\" name=\"theme\" id=\"theme\" onChange={handleChange}>\n                    <option value=\"chrome\">White</option>\n                    <option value=\"gob\">Dark</option>\n                </select>\n                <select className=\"custom-select col-4\" name=\"font\" id=\"font\" onChange={handleChange}>\n                    <option value=\"15\">15px</option>\n                    <option value=\"12\">12px</option>\n                    <option value=\"18\">18px</option>\n                    <option value=\"20\">20px</option>\n                </select>\n            </div>\n            <CodeEditor mode={language} value={code} theme={theme} onChange={handleChange} name={problem.id}\n                        font={font}/>\n            {!user && <div className=\"alert alert-danger\">Please login to submit</div>}\n            <div className=\"alert alert-info\">If you're coping code from anywhere then please press space after pasting or you will get error</div>\n            <button disabled={!user} className=\"btn btn-success\" onClick={submit}>Submit</button>\n        </div>\n    );\n};\n\nexport default ProblemCode;","import React, {useState, useEffect, useContext} from 'react';\nimport {FormattedHtml} from \"../../common/objectViewFuncs\";\nimport {SuperContext} from \"../../app\";\nimport ProblemCode from \"../../common/fields/problemCode\";\nimport {Link} from \"react-router-dom\";\nimport {getCurrentUser} from \"../../common/authService\";\n\nconst Problem = ({match, history}) => {\n    const {problemActs, userActs} = useContext(SuperContext);\n    const {problemId} = match.params;\n    const [problem, setProblem] = useState(problemActs.getById(problemId));\n    const [reload, setReload] = useState(false);\n\n    problemActs.store.subscribe(() => {\n        setProblem(problemActs.getById(problemId));\n        setReload(!reload);\n    });\n\n    const currentUser = getCurrentUser() && getCurrentUser().id;\n\n    useEffect(() => {\n        setProblem(problemActs.getById(problemId));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [problemId]);\n\n    return (\n        problem && <div className=\"container\">\n            {currentUser === problem.by &&\n                <Link to={`/problems/edit/${problem.id}`}><button className=\"btn-lg btn-success\">Edit</button></Link>}\n            <div className=\"bgDarkBlue\">\n                <h1>{problem.title}</h1>\n                <h3>By {userActs.fullName(problem.by)}</h3>\n            </div>\n            <div className=\"bgAliceBlue\">\n                <div className=\"alert alert-info\">{problem.notice}</div>\n                <h4>Problem statement</h4>\n                <FormattedHtml text={problem.text}/> <br/>\n                <h4>Input Terms</h4>\n                <FormattedHtml text={problem.inTerms}/> <br/>\n                <h4>Output Terms</h4>\n                <FormattedHtml text={problem.outTerms}/> <br/>\n            </div>\n            <table className=\"table table-bordered\">\n                <thead>\n                <tr>\n                    <th>Input</th>\n                    <th>Output</th>\n                </tr>\n                </thead>\n                <tbody>\n                {problem.test_cases.map(test => <tr key={Math.floor(Math.random() * 1000)}>\n                    <td>\n                        <pre>{test.input}</pre>\n                    </td>\n                    <td>\n                        <pre>{test.output}</pre>\n                    </td>\n                </tr>)}\n                </tbody>\n            </table>\n            <ProblemCode problem={problem} history={history}/>\n            <br/><br/>\n        </div>\n    );\n}\n\nexport default Problem;\n\n","import React, {Component} from 'react';\n\nexport default class TextEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.editorContainer = React.createRef();\n    }\n\n    componentDidMount() {\n        const script2 = document.createElement('script');\n        script2.type = 'text/javascript';\n        script2.async = true;\n        script2.innerText = \"function imageHandler() {var range = this.quill.getSelection();\" +\n            \"var value = prompt('please copy paste the image url here.');\" +\n            \"if (value) {this.quill.insertEmbed(range.index, 'image', value, Quill.sources.USER);}}\"\n        document.body.appendChild(script2);\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n\n        script.innerText = `var editor = new Quill('#${this.props.name}',\n        {'theme': 'snow', 'modules':{'toolbar':{ 'container': [ ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'], ['link', 'image'], [{'list': 'ordered'}, {'list': 'bullet'}],\n         [{'script': 'sub'}, {'script': 'super'}], [{'header': [1, 2, 3, 4, 5, 6, false]}], [{'color': []},\n          {'background': []}], [{'align': []}]], handlers:{image: imageHandler}  } }});`;\n\n        document.body.appendChild(script);\n    }\n\n    formatHtml = (text) => {\n        if (text) {\n            return {__html: `${text}`}\n        }\n        return {__html: \"<span />\"}\n    }\n\n    extract = () => {\n        let content = this.editorContainer.current.getElementsByClassName('ql-editor')[0]\n        const obj = {currentTarget: {name: this.props.name, value: content.innerHTML}}\n        this.props.onChange(obj)\n    }\n\n    render() {\n        const {label, name, value} = this.props\n        return (\n            <React.Fragment>\n                <label htmlFor={name}><h3>{label}</h3></label>\n                <div ref={this.editorContainer} id={name} onKeyUp={this.extract}\n                     dangerouslySetInnerHTML={this.formatHtml(value)}/>\n            </React.Fragment>\n        )\n    }\n}","import React, {Component} from 'react';\n\nclass Input extends Component {\n    state = {\n        value: this.props.value\n    }\n\n    render() {\n        let {name, label, error, type, onChange, placeholder} = this.props;\n        const changeMiddle = (data) => {\n            onChange(data);\n            this.setState({value: data.currentTarget.value})\n        }\n        return (\n            <div className=\"form-group\">\n                {label &&\n                <label htmlFor=\"{name}\"><h3>{label}</h3></label>\n                }\n                <input type={type} value={this.state.value} onChange={changeMiddle} id={name} name={name} className=\"form-control\"\n                       autoComplete=\"off\" placeholder={placeholder} />\n                <p><small/></p>\n                {error && <div className=\"alert alert-danger\">{error}</div>}\n            </div>\n        )\n    }\n}\n\nInput.defaultProps = {\n    type: \"text\",\n    placeholder: \"Input here\"\n}\n\nexport default Input;\n","import React, {useContext, useState} from 'react';\nimport TextEditor from \"../../common/fields/TextEditor\";\nimport Input from \"../../common/fields/input\";\nimport {SuperContext} from \"../../app\";\nimport CodeEditor from \"../../common/fields/codeEditor\";\n\nconst ProblemForm = ({match, history}) => {\n    const {contestId, problemId} = match.params;\n    const {problemActs, contestActs} = useContext(SuperContext);\n    const [problem] = useState(problemActs.getById(problemId));\n    const [contest] = useState(contestActs.getById(contestId));\n\n    let data = {}\n    if (problem) {\n        data = {...problem}\n    } else {\n        data = {\n            contest_id: contestId,\n            inTerms: 'input Terms',\n            outTerms: 'output Terms',\n            text: 'statement',\n            title: 'problem title',\n            corCode: '',\n            conProbId: 'A',\n            notice: 'nothing',\n            time_limit: 1,\n            examples: 1\n        }\n    }\n\n\n    const setText = ({currentTarget}) => {\n        const {name, value} = currentTarget;\n        data[name] = value\n    }\n\n    const submit = () => {\n        if(problem) {\n            problemActs.edit(data);\n            history.push(`/problems/${problem.id}`);\n        } else {\n            problemActs.add(data);\n            history.push('/users/profile')\n        }\n    }\n\n    return (\n        <div className=\"container pt-5\">\n            {contest && <h1 className=\"text-info\">{contest.title}</h1>}\n            <Input label=\"Problem name\" name=\"title\" value={data['title']} onChange={setText}/>\n            <TextEditor label=\"Problem Statement\" name=\"text\" value={data['text']} onChange={setText}/>\n            <TextEditor label=\"Input Terms\" name=\"inTerms\" value={data['inTerms']} onChange={setText}/>\n            <TextEditor label=\"Output Terms\" name=\"outTerms\" value={data['outTerms']} onChange={setText}/>\n            <Input label=\"Problem id\" placeholder='A' name=\"conProbId\" value={data['conProbId']} onChange={setText}/>\n            <CodeEditor mode=\"c_cpp\" value={data['corCode']} theme=\"chrome\" onChange={setText}\n                        name=\"corCode\" font={20} />\n            <div className=\"bg-light\">\n                <h3 className=\"text-info\">Everything below are optional. You don't need to change.</h3>\n                <TextEditor label=\"Notice\" name=\"notice\" value={data['notice']} onChange={setText}/>\n                <Input label=\"Time Limit\" name=\"time_limit\" value={data['time_limit']} type=\"number\"\n                       onChange={setText}/>\n                <Input label=\"Number of example\" name=\"examples\" value={data['examples']} type=\"number\"\n                       onChange={setText}/>\n            </div>\n            <button className=\"btn-lg btn-success\" onClick={submit}>Submit</button>\n            <br/><br/><br/>\n        </div>\n    );\n};\n\nexport default ProblemForm;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport ProblemList from \"./problemList\";\nimport Problem from \"./problem\";\nimport ProblemForm from \"./problemForm\";\n\nconst ProblemRoute = () => {\n    return (\n        <Switch>\n            <Route path=\"/problems/contestId=:contestId\" component={ProblemList}/>\n            <Route path=\"/problems/add/:contestId\" component={ProblemForm} />\n            <Route path=\"/problems/edit/:problemId\" component={ProblemForm} />\n            <Route path={'/problems/:problemId'} component={Problem}/>\n        </Switch>\n    );\n};\n\nexport default ProblemRoute;","import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-modal\";\nimport {SuperContext} from \"../app\";\n\nconst LoadingAnimation = () => {\n    const {userActs} = useContext(SuperContext);\n    const store = userActs.store;\n    const [problem, setProblem] = useState(!!store.getState().problems.loading)\n    const [user, setUser] = useState(!!store.getState().users.loading)\n    const [contest, setContest] = useState(!!store.getState().contests.loading)\n    const [submission, setSubmission] = useState(!!store.getState().submissions.loading)\n\n\n    store.subscribe(() => {\n        setProblem(!!store.getState().problems.loading);\n        setUser(!!store.getState().users.loading);\n        setContest(!!store.getState().contests.loading);\n        setSubmission(!!store.getState().submissions.loading);\n    });\n\n    useEffect(() => {\n        Modal.setAppElement('body');\n    }, []);\n\n    const isLoading = problem || user || contest || submission;\n\n    return <Modal isOpen={isLoading} className=\"Modal\">\n        <div className=\"loader align-middle\"/>\n    </Modal>\n}\n\nexport default LoadingAnimation;\n","import React, {useContext, useState, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {Link} from \"react-router-dom\";\n\nconst SubmissionList = ({match}) => {\n    const page = parseInt(match.params.page) || 1;\n    const {submissionActs, userActs, problemActs} = useContext(SuperContext);\n    const [submissionList, setSubmissionList] = useState(submissionActs.getList(page));\n    const [reload, setReload] = useState(false);\n\n    let unSubscribe = submissionActs.store.subscribe(() => {\n        setSubmissionList(submissionActs.getList(page));\n        unSubscribe();\n        setReload(!reload);\n    });\n\n    useEffect(() => {\n        setSubmissionList(submissionActs.getList(page));\n        // eslint-disable-next-line\n    }, [page])\n\n    const pages = submissionActs.totalPages();\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Problem</th>\n                    <th>Verdict</th>\n                    <th>By</th>\n                </tr>\n                </thead>\n                <tbody>\n                {submissionList.map((submission) => <tr key={submission.id}>\n                    <td><Link to={`/submissions/${submission.id}`} >{problemActs.getById(submission.problem, 'title')}</Link></td>\n                    <td>{submission.verdict}</td>\n                    <td>{userActs.firstName(submission.by)}</td></tr>)}\n                </tbody>\n            </table>\n            {pagination('/submissions/page=', pages, page)}\n        </div>\n    );\n};\n\nexport default SubmissionList;\n\nexport const pagination = (url, pages=1, page=1) => {\n    let pageList = []\n    if(page > 2) {\n        for(let i = page - 2; i <= pages && i <= page + 2; i++) pageList.push(i);\n    } else {\n        for(let i = 1; i <= pages && i <= 5; i++) pageList.push(i);\n    }\n    return <ul className=\"pagination\">\n        {pageList.map(page => <li key={page} className=\"page-item\">\n            <Link className=\"page-link\" to={url + page.toString()} >{page}</Link>\n        </li>)}\n    </ul>\n}\n","import React, {useContext, useState} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {getCurrentUser} from \"../../common/authService\";\n\nconst Submission = ({match}) => {\n    const {submissionId} = match.params;\n    const {submissionActs, userActs, contestActs, problemActs} = useContext(SuperContext);\n    const [submission, setSubmission] = useState(submissionActs.getById(submissionId));\n    const [contest, setContest] = useState(contestActs.getById(submission && submission.contest))\n    const [reload, setReload] = useState(false);\n\n    let unSubscribe = submissionActs.store.subscribe(() => {\n        setSubmission(submissionActs.getById(submissionId));\n        setContest(contestActs.getById(submission && submission.contest))\n        unSubscribe();\n        setReload(!reload);\n    })\n\n    const contestEnd = new Date((contest && contest.end_time) || Date.now().toLocaleString());\n    const currentUser = getCurrentUser() && getCurrentUser().id;\n\n    return (\n        <div className=\"container\">\n            {submission && <div>\n                <div><h5>Submitter: {userActs.fullName(submission.by)}</h5></div>\n                <div><h5>Contest: {contestActs.getById(submission.contest, 'title')}</h5></div>\n                <div><h5>Problem: {problemActs.getById(submission.problem, 'title')}</h5></div>\n                <div><h5 className=\"text-nowrap\">Verdict: {verdictProcess(submission.verdict)}</h5></div>\n                {contest && <div>\n                {(contestEnd <= Date.now() || submission.by === currentUser) && <span>\n                <div><h5>Your Code:</h5>\n                    <pre className=\"bg-light text-primary\">{submission.code}</pre>\n                </div>\n                    {renderResult(submission.details, submission.verdict)}\n                </span>}\n                {(contestEnd > Date.now() && submission.by !== currentUser) &&\n                <h2 className=\"text-danger\">You can't see full info during contest</h2>\n                }\n                </div>}\n\n            </div>}\n        </div>\n    );\n};\n\nexport default Submission;\n\nconst renderResult = (result, verdict) => {\n    const data = JSON.parse(result);\n    if (!data) return;\n    return <div>\n        <div>\n            <h5>Message: <pre>{data[0]}</pre></h5>\n        </div>\n        {verdict !== 'CE' && <table className=\"table table-bordered\">\n            <thead>\n            <tr>\n                <td>Input</td>\n                <td>Output</td>\n                <td>Correct Output</td>\n            </tr>\n            </thead>\n            <tbody>\n            {data[1].map((item) => <tr>\n                <td>\n                    <pre>{item[0]}</pre>\n                </td>\n                <td>\n                    <pre>{item[1]}</pre>\n                </td>\n                <td>\n                    <pre>{item[2]}</pre>\n                </td>\n            </tr>)}\n            </tbody>\n        </table>}\n    </div>\n}\n\nconst verdictProcess = verdict => {\n    if (verdict === 'AC') return <span className=\"text-success\">Accepted</span>\n    if (verdict === 'WA') return <span className=\"text-danger\">Wrong Answer</span>\n    if (verdict === 'CE') return <span className=\"text-danger\">Compilation Error</span>\n    if (verdict === 'TLE') return <span className=\"text-danger\">Time Limit Exceed</span>\n    if (verdict === 'PJ') return <span className=\"text-info\">Judging. May take upto minute</span>\n    if (verdict === 'FJ') return <span className=\"text-danger\">Failed. Judges are offline</span>\n    return <span>Unknown verdict</span>\n}","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport SubmissionList from \"./submissionList\";\nimport Submission from \"./submission\";\n\nconst SubmissionRoute = () => {\n    return (\n        <Switch>\n            <Route path=\"/submissions/page=:page\" component={SubmissionList} />\n            <Route path=\"/submissions/:submissionId\" component={Submission} />\n            <Route path=\"/submissions\" component={SubmissionList} />\n        </Switch>\n    );\n};\n\nexport default SubmissionRoute;","import React, {useContext} from 'react';\nimport {SuperContext} from \"../app\";\n\nconst WebSocketReceive = () => {\n    const {ws, contestActs, problemActs, submissionActs, userActs, tutorialActs} = useContext(SuperContext);\n    ws.addEventListener('message', (e) => {\n        const data = JSON.parse(e.data).data;\n        if(data.target === 'contest') contest(contestActs, data);\n        if(data.target === 'problem') problem(problemActs, data);\n        if(data.target === 'submission') submission(submissionActs, data);\n        if(data.target === 'user') user(userActs, data);\n        if(data.target === 'tutorial') tutorial(tutorialActs, data);\n    });\n\n    return <span />\n};\n\nconst contest = (contestActs, data) => {\n    contestActs.update(data);\n}\n\nconst problem = (problemActs, data) => {\n    problemActs.update(data);\n}\n\nconst submission = (submissionActs, data) => {\n    submissionActs.update(data);\n}\n\nconst user = (userActs, data) => {\n    userActs.update(data);\n}\n\nconst tutorial = (tutorialActs, data) => {\n    tutorialActs.update(data);\n}\n\nexport default WebSocketReceive;","import React, {useState, useContext, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {FormattedHtml} from \"../../common/objectViewFuncs\";\n\nconst Tutorial = ({match}) => {\n    const {tutorialActs, userActs} = useContext(SuperContext);\n    const {tutorialId} = match.params;\n    const [tutorial, setTutorial] = useState(tutorialActs.getById(tutorialId));\n    const [reload, setReload] = useState(false);\n\n    tutorialActs.store.subscribe(() => {\n        setTutorial(tutorialActs.getById(tutorialId));\n        setReload(!reload);\n    });\n\n    useEffect(() => {\n        setTutorial(tutorialActs.getById(tutorialId));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tutorialId]);\n\n    return (\n        <div>\n            {tutorial && <div className=\"container\">\n                <div className=\"bgDarkBlue\">\n                    <h1>{tutorial.title}</h1>\n                    <h3>By {userActs.fullName(tutorial.by)}</h3>\n                </div>\n                <div className=\"bgAliceBlue\">\n                    <FormattedHtml text={tutorial.text}/>\n                </div>\n            </div>}\n            {!tutorial && <h1>Loading</h1>}\n        </div>\n    );\n};\n\nexport default Tutorial;","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport Tutorial from \"./tutorial\";\nimport TutorialList from \"./tutorialList\";\n\nconst TutorialRoute = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/tutorials/contestId=:contestId\" component={TutorialList}/>\n                <Route path=\"/tutorials/:tutorialId\" component={Tutorial}/>\n            </Switch>\n        </div>\n    );\n};\n\nexport default TutorialRoute;","import React, {useEffect} from 'react';\nimport storeFunc from \"./store/configureStore\";\nimport NavBar from \"./apps/navBar\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {apiEndpoint, projectURLS, wssURL} from \"./configuration\";\nimport ContestRoute from \"./apps/contest/contestRoute\";\nimport UserRoute from \"./apps/user/userRoute\";\nimport ProblemRoute from \"./apps/problem/problemRoute\";\nimport LoadingAnimation from \"./common/loadingAnimation\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\n\nimport {contestActions} from \"./store/data/contests\";\nimport {userActions} from \"./store/data/users\";\nimport {submissionActions} from \"./store/data/submissions\";\nimport {problemActions} from \"./store/data/problems\";\nimport {getJwt, logout} from \"./common/authService\";\nimport SubmissionRoute from \"./apps/submission/submissionRoute\";\nimport WebSocketReceive from \"./store/webSocketReceive\";\nimport httpService from \"./common/httpService\";\nimport {tutorialActions} from \"./store/data/tutorials\";\nimport TutorialRoute from \"./apps/tutorial/tutorialRoute\";\n\nexport const SuperContext = React.createContext();\n\nconst App = () => {\n    const data = generateData();\n\n    useEffect(() => {\n        data.userActs.loadUsers();\n        if(getJwt()) {\n            httpService.get(apiEndpoint + '/login_check/').then(({data}) => {\n                if (!data.status) {\n                    logout();\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <SuperContext.Provider value={data}>\n            <div>\n                <LoadingAnimation />\n                <NavBar/>\n                <WebSocketReceive />\n                <Switch>\n                    <Route path={projectURLS.contests} component={ContestRoute}/>\n                    <Route path={projectURLS.problems} component={ProblemRoute}/>\n                    <Route path={projectURLS.submissions} component={SubmissionRoute} />\n                    <Route path={projectURLS.tutorials} component={TutorialRoute} />\n                    <Route path={projectURLS.user} component={UserRoute}/>\n                </Switch>\n            </div>\n        </SuperContext.Provider>\n    );\n};\n\nexport default App;\n\n\nconst generateData = () => {\n    const store = storeFunc();\n    const jwt = getJwt();\n    const ws = new ReconnectingWebSocket(`${wssURL()}/?jwt=${jwt || 'hello'}`, '', {\n        maxReconnectionDelay: 60000,\n        minReconnectionDelay: 500,\n    });\n\n    const contestActs = new contestActions(store, ws);\n    const userActs = new userActions(store, ws);\n    const submissionActs = new submissionActions(store, ws);\n    const problemActs = new problemActions(store, ws);\n    const tutorialActs = new tutorialActions(store, ws);\n    return {\n        contestActs: contestActs,\n        userActs: userActs,\n        submissionActs: submissionActs,\n        problemActs: problemActs,\n        tutorialActs: tutorialActs,\n        store: store, ws: ws\n    }\n}\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport api from \"./api\";\n\nexport default function storeFunc() {\n    return configureStore({reducer,\n    middleware: [...getDefaultMiddleware(),\n        api\n    ]});\n}\n","import ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport './common/cssLibrary.css';\nimport App from \"./app\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}