{"version":3,"sources":["common/httpService.jsx","configuration.js","common/authService.jsx","store/api.js","apps/functions.js","store/basicReducerTemplate.js","store/data/contests.js","store/data/problems.js","store/data/users.js","store/data/submissions.js","store/data/tutorials.js","store/reducer.js","context.js","store/webSocketReceive.jsx","main_css.jsx","apps/navBar.jsx","apps/contest/contestList.jsx","apps/problem/problemList.jsx","apps/tutorial/tutorialList.jsx","common/objectViewFuncs.jsx","apps/contest/contest.jsx","apps/contest/standing.jsx","apps/contest/contestRoute.jsx","apps/user/login.jsx","apps/user/userRoute.jsx","common/fields/input.jsx","common/loadingAnimation.jsx","apps/leftSideBar.jsx","apps/rightSideBar.jsx","app.js","parentApp.js","store/configureStore.js","index.js"],"names":["axios","defaults","headers","common","getJwt","interceptors","response","use","error","status","console","log","alert","Promise","reject","get","post","put","delete","endpoint","document","domain","location","protocol","host","apiEndpoint","urls","contests","submissions","standing","problems","tutorials","chat","cf","cfProblems","cfStatics","users","login","register","logout","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","redirectURL","localStorage","removeItem","window","loginWithPassword","username","password","a","httpService","then","setItem","data","jwt","catch","errors","getCurrentUser","getItem","jwtDecode","apiCallBegan","createAction","apiCallFailed","api","dispatch","next","action","type","payload","url","method","onSuccess","onError","onStart","onFailed","request","baseURL","message","extractDate","dateString","dateObj","Date","moment","format","basicReducers","name","state","list","push","id","dict","loading","results","i","length","receivedWithPagination","page","nextUrl","nextURL","offset","parse","Math","ceil","getPageNumberFromLink","count","fetched","parseInt","total","basicActions","slice","store","ws","requestedIdQueue","start","requested","failure","requestFailed","_load","received","_loadById","indexOf","toSend","send","JSON","stringify","add","edit","update","updated","getById","key","getState","actions","this","added","objList","createSlice","initialState","reducers","contestsReceived","contestActions","_loadContest","getList","problemsReceived","contestId","contest","problemActions","_loadProblems","probId","info","loggedIn","loggedOut","userActions","loadUsers","firstName","fullName","currentUser","addUserToStore","submissionsReceived","submissionUpdated","updatedWithPagination","submissionActions","_loadSubmission","submissionDetails","submission","details","totalPages","tutorialsReceived","tutorialActions","_loadTutorials","dictKey","combineReducers","SuperContext","React","createContext","contestActs","problem","problemActs","submissionActs","user","userActs","tutorial","tutorialActs","WebSocketReceive","useContext","addEventListener","e","target","theme","css","heading4","navbar","tableSingle","NavBar","className","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","ContestList","contestList","ended","upcoming","end_time","getTime","now","map","title","writers","userId","testers","start_time","getTimeDifference","date","end","dif","hour","floor","minute","ProblemList","match","params","useState","by","TutorialList","formatHtml","text","__html","FormattedHtml","dangerouslySetInnerHTML","Contest","Component","contestStart","toLocaleString","contestEnd","Standing","duringContest","setDuringContest","afterContest","setAfterContest","useEffect","http","during","after","apiCall","renderStanding","objectList","position","item","parseFloat","ContestRoute","path","component","Login","setUsername","setPassword","script","createElement","async","innerText","firebaseui","firebase","initializeApp","ui","auth","AuthUI","uiConfig","callbacks","signInSuccessWithAuthResult","getIdToken","idToken","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","GithubAuthProvider","firebaseLoginImplement","body","appendChild","removeChild","handleInputChange","currentTarget","value","onClick","style","display","justifyContent","alignItems","width","placeholder","onChange","href","UserRoute","Input","props","label","htmlFor","setState","autoComplete","defaultProps","LoadingAnimation","Modal","setAppElement","isLoading","isOpen","LeftSideBar","RightSideBar","App","refresh","setRefresh","unSub","subscribe","setTimeout","ParentApp","generateData","Provider","configureStore","reducer","middleware","getDefaultMiddleware","ReconnectingWebSocket","wssURL","maxReconnectionDelay","minReconnectionDelay","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0709aa20.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {getJwt} from \"./authService\";\n\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\naxios.interceptors.response.use(null, error => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n\n    if(!expectedError) {\n        console.log(\"Logging the error\", error);\n        alert(\"An unexpected error.\");\n    }\n\n    return Promise.reject(error);\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};","export const css = {\n    navBar: \" navbar-dark font-weight-bold bgDarkBlue \",\n    navSuccessButton: ' btn btn-outline-success ',\n    center: \" d-flex justify-content-center \",\n    alignRight: \" d-flex flex-row-reverse \",\n    hideOnPhone: \" d-none d-lg-block d-xl-block \",\n    username: \" nobr text-danger font-weight-bold \",\n};\nconst getEndpoint = () => {\n    if (document.domain === \"localhost\") return \"http://127.0.0.1:8000\";\n    else return document.location.protocol + \"//\" + document.location.host\n}\n\nexport const endpoint = getEndpoint();\nexport const apiEndpoint = endpoint + \"/api\";\n\nexport const wssURL = () => {\n    const protocol = document.location.protocol === \"https:\" ? \"wss://\" : \"ws://\";\n    if (document.domain === \"localhost\") return protocol + \"127.0.0.1:8000/ws\";\n    return protocol + document.location.host + \"/ws\";\n}\n\nexport const urls = {\n    contests: '/contests',\n    submissions: '/submissions',\n    standing: '/contests/standing',\n    problems: '/problems',\n    tutorials: '/tutorials',\n    chat: '/chat',\n    cf: '/cf',\n    cfProblems: 'cf/problems',\n    cfStatics: 'cf/statics',\n    users: '/users',\n    login: '/users/login',\n    register: '/users/register',\n    logout: '/users/logout',\n};\n\nexport const navBar = {\n    menuLeft: [\n        {\n            label: 'Home',\n            link: '/',\n        },\n        {\n            label: 'Bulletin',\n            link: '/bulletin',\n        }\n        ,\n        {\n            label: 'Chat',\n            link: urls.chat,\n        },\n        {\n            label: 'Contests',\n            link: urls.contests,\n            sub: [\n                {\n                    label: 'Contest List',\n                    link: urls.contests,\n                },\n                {\n                    label: 'Submissions',\n                    link: urls.submissions,\n                },\n                {\n                    label: 'Standing',\n                    link: urls.standing,\n                },\n            ]\n        },\n        {\n            label: 'Tutorials',\n            link: urls.tutorials,\n        },\n        {\n            label: 'Codeforces',\n            link: urls.cf,\n            sub: [\n                {\n                    label: 'Problems',\n                    link: urls.cfProblems\n                },\n                {\n                    label: 'Statics',\n                    link: urls.cfStatics\n                }\n            ]\n        }\n    ],\n\n    menuRight: [\n        {\n            label: 'Login',\n            link: urls.login,\n            // class: css.navSuccessButton,\n        },\n        {\n            label: 'Register',\n            link: urls.register,\n            // class: css.navSuccessButton,\n        }\n    ]\n}\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyB9n-TJY1hy49WoECQH7fZXlxA7lKI2VH4\",\n    authDomain: \"b12j-mah.firebaseapp.com\",\n    databaseURL: \"https://b12j-mah.firebaseio.com\",\n    projectId: \"b12j-mah\",\n    storageBucket: \"b12j-mah.appspot.com\",\n    messagingSenderId: \"704405925886\",\n    appId: \"1:704405925886:web:2066da3c25584a7ed4daaf\",\n    measurementId: \"G-XE9M4QRX4J\"\n};\n","import jwtDecode from 'jwt-decode';\nimport httpService from \"./httpService\";\nimport {firebaseConfig, endpoint} from \"../configuration\";\n\n\nexport function logout(redirectURL = '/') {\n  localStorage.removeItem(\"token\");\n  window.location = redirectURL\n}\n\nexport const firebaseLoginImplement = () => {\n  const firebaseui = window.firebaseui;\n  const firebase = window.firebase;\n  firebase.initializeApp(firebaseConfig);\n\n  const ui = new firebaseui.auth.AuthUI(firebase.auth());\n  const uiConfig = {\n    callbacks: {\n      signInSuccessWithAuthResult: async () => {\n        const idToken = await firebase.auth().currentUser.getIdToken(true);\n        try {\n          const response = await httpService.post(endpoint + '/users/login/', {idToken});\n          localStorage.setItem(\"token\", response.data.jwt);\n          window.location = \"/\";\n          return true;\n        } catch (e) {\n          console.log(e);\n          return false;\n        }\n\n      },\n    },\n    signInFlow: 'popup',\n    // signInSuccessUrl: \"/users/loginServe\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\n    ],\n  };\n  ui.start('#firebaseui-auth-container', uiConfig);\n}\n\nexport const loginWithPassword = async (username, password) => {\n  httpService.post(endpoint + '/login/', {username, password}).then(\n    response => {\n      localStorage.setItem(\"token\", response.data.jwt);\n      window.location = '/'\n    }\n  ).catch(\n    error => {\n      alert(error.response.data.errors);\n    }\n  )\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(\"token\");\n    return jwtDecode(jwt)\n  } catch {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(\"token\")\n}\n","import axios from 'axios';\nimport {createAction} from \"@reduxjs/toolkit\";\nimport {getJwt} from \"../common/authService\";\nimport {apiEndpoint} from \"../configuration\";\n\nexport const apiCallBegan = createAction(\"api/callBegan\")\n// export const apiCallSuccess = createAction(\"api/callSuccess\")\nexport const apiCallFailed = createAction(\"api/callFailed\")\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\nconst api = ({dispatch}) => next => async action => {\n    if (action.type !== apiCallBegan.type) return next(action);\n    const {url, method, data, onSuccess, onError, onStart, onFailed} = action.payload;\n    if(onStart) {\n        dispatch({type: onStart})\n    }\n    next(action)\n    try {\n        const response = await axios.request({\n            baseURL: apiEndpoint,\n            url,\n            method,\n            data\n        });\n        if(onSuccess) {\n            dispatch({type: onSuccess, payload: response.data});\n        }\n    } catch (error) {\n        if(onFailed) dispatch({type: onFailed})\n        dispatch(apiCallFailed({payload:error.message}))\n        if(onError) dispatch({type: onError, payload: error.message})\n    }\n}\nexport default api;","import moment from \"moment\";\nimport {parse} from \"query-string\";\n\nexport const getPageNumberFromLink = (nextURL) => {\n    const parsed = parse(nextURL);\n    const offset = parsed.offset\n    const limit = 20\n    return Math.ceil(offset / limit)\n}\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}\n\nexport const arrayEquality = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) return false;\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] != arr2[i]) return false;\n    }\n    return true\n}","import {apiCallBegan} from \"./api\";\nimport {urls} from \"../configuration\";\nimport {getPageNumberFromLink} from \"../apps/functions\";\nimport {getJwt} from \"../common/authService\";\n\nexport const standardInitialState = () => {\n    return {\n        list: [],\n        dict: {},\n        fetched: [],\n        total: null,\n        loading: false,\n    }\n}\n\nexport const basicReducers = (name) => {\n    return {\n        [`${name}Added`]: (state, action) => {\n            state.list.push(action.payload.id);\n            state.dict[action.payload.id] = action.payload;\n            state.loading = false;\n        },\n\n        [`${name}Updated`]: (state, action) => {\n            if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n            else {\n                state.dict[action.payload.id] = action.payload;\n                state.list.push(action.payload)\n            }\n            state.loading = false;\n        },\n\n        [`${name}sReceived`]: (state, action) => {\n            const data = action.payload.results;\n            if (data) {\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                    state.list.push(data[i].id)\n                }\n            }\n            state.loading = false;\n        },\n\n        [`${name}Requested`]: (state) => {\n            state.loading = true;\n        },\n\n        [`${name}RequestFailed`]: (state) => {\n            state.loading = false;\n        }\n    }\n};\n\nexport const receivedWithPagination = (state, action) => {\n    let page;\n    state.loading = false;\n    const nextUrl = action.payload.next;\n    if (!nextUrl) page = Math.ceil(action.payload.count / 20)\n    else page = getPageNumberFromLink(nextUrl);\n    state.fetched.push(parseInt(page));\n    state.list[page] = []\n    state.dict[page] = {}\n    state.total = Math.ceil(action.payload.count / 20);\n    const data = action.payload.results;\n    for (let i = 0; i < data.length; i++) {\n        state.dict[data[i].id] = data[i];\n        state.list[page].push(data[i].id)\n    }\n}\n\nexport const updatedWithPagination = (state, action) => {\n    if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n    else {\n        state.dict[action.payload.id] = action.payload;\n        if (!state.list[1]) state.list[1] = []\n        state.list[1] = [action.payload.id, ...state.list[1]]\n    }\n    state.loading = false;\n}\n\nexport class basicActions {\n    constructor(slice, store, ws, name) {\n        const actions = slice.actions;\n        this.ws = ws;\n        this.store = store;\n        this.name = name;\n        this.added = actions[`${name}Added`];\n        this.requestFailed = actions[`${name}RequestFailed`];\n        this.requested = actions[`${name}Requested`];\n        this.received = actions[`${name}sReceived`];\n        this.updated = actions[`${name}Updated`];\n    }\n\n    requestedIdQueue = [];\n\n    start = () => {\n        this.store.dispatch({\n            type: this.requested.type\n        })\n    }\n\n    failure = () => {\n        this.store.dispatch({\n            type: this.requestFailed.type\n        })\n    };\n\n    _load = (url = urls[`${this.name}s`] + '/') => {\n        this.store.dispatch(apiCallBegan({\n            url: url,\n            onStart: this.requested.type,\n            onSuccess: this.received.type,\n            onFailed: this.requestFailed.type,\n        }));\n    };\n\n    _loadById = (id) => {\n        if (this.requestedIdQueue.indexOf(id) === -1) {\n            this.requestedIdQueue.push(id);\n            const toSend = {\"method\": \"GET\", \"target\": this.name, \"id\": id, 'id_token': getJwt()}\n            this.ws.send(JSON.stringify(toSend));\n            this.start();\n        }\n    };\n\n    add = (data) => {\n        const toSend = {\"method\": \"POST\", \"target\": this.name, \"data\": data, 'id_token': getJwt()};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    edit = (data) => {\n        const toSend = {\"method\": \"PUT\", \"target\": this.name, \"id\": data.id, \"data\": data, 'id_token': getJwt()};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    list(objList = []) {\n        if (!objList) return;\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        let data = []\n        for (let i = 0; i < objList.length; i++) {\n            data.push(dict[objList[i]]);\n        }\n        return data;\n    }\n\n    update = (data) => {\n        this.store.dispatch({type: this.updated.type, payload: data})\n    }\n\n    getById = (id, key = null) => {\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        if (key) {\n            if (dict[id]) return dict[id][key];\n            else if (id) this._loadById(id);\n        } else if (dict[id]) return dict[id]\n        if (id) this._loadById(id);\n        return null;\n    }\n}\n","import {basicActions, basicReducers, receivedWithPagination, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'contest';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        contestsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n    },\n});\n\nexport default slice.reducer;\n\nexport class contestActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadContest = (page=1) => {\n        const contests = this.store.getState().contests;\n        if (contests.fetched.indexOf(page) !== -1 || contests.loading) return;\n        if(page < 1 || (contests.total && page > contests.total)) {\n            alert(\"Wrong page\");\n        }\n\n        this._load(`/contests/?limit=20&offset=${(page - 1)*20}`)\n    };\n\n    getList = (page=1) => {\n        this._loadContest(page);\n        return this.list(this.store.getState().contests.list[page]);\n    }\n}","import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'problem';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        problemsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No Problems for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\nexport default slice.reducer;\n\nexport class problemActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadProblems = (contestId) => {\n        const problems = this.store.getState().problems;\n        if(problems.fetched.indexOf(contestId) !== -1 || problems.loading) return ;\n        this._load(`/problems/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadProblems(contestId);\n        let list = [];\n        const dict = this.store.getState().problems.dict;\n        for(let probId in dict) {\n            if(dict[probId].contest === contestId) {\n                list.push(dict[probId]);\n            }\n        }\n        return list;\n    }\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\nimport {getCurrentUser} from \"../../common/authService\";\nimport {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\n\nconst name = 'user'\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n        info: getCurrentUser(),\n    },\n    reducers: {\n        ...basicReducers(name),\n\n        loggedIn: (state, action) => {\n            state.info = action.payload;\n        },\n        loggedOut: state => {\n            state.info = null;\n        }\n    }\n});\n\nconst {loggedIn} = slice.actions;\nexport default slice.reducer;\n\nexport class userActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    };\n\n    loadUsers = () => {\n        this._load('/users/?limit=1000')\n    };\n\n    getList = () => this.list(this.store.getState().users.list);\n\n    firstName = (id) => {\n        return this.getById(id, 'first_name');\n    };\n\n    fullName = (id) => {\n        if (!this.getById(id, 'first_name') && !this.getById(id, 'last_name')) {\n            return this.getById(id, 'username');\n        }\n        return this.getById(id, 'first_name') + ' ' + this.getById(id, 'last_name');\n    }\n\n    currentUser = () => {\n        return this.store.getState()[`${this.name}s`].info;\n    }\n\n    addUserToStore = () => {\n        this.store.dispatch({\n            type: loggedIn.type,\n            payload: getCurrentUser(),\n        })\n    };\n}\n","import {\n    basicActions,\n    basicReducers,\n    receivedWithPagination,\n    standardInitialState,\n    updatedWithPagination\n} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'submission';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n    },\n    reducers: {\n        ...basicReducers(name),\n        submissionsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n        submissionUpdated: (state, action) => {\n            updatedWithPagination(state, action);\n        }\n    }\n})\nexport default slice.reducer;\n\nexport class submissionActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadSubmission = (page = 1) => {\n        const submissions = this.store.getState().submissions;\n        if (submissions.fetched.indexOf(page) !== -1 || submissions.loading) return;\n        if (page < 1 || (submissions.total && page > submissions.total)) {\n            alert(\"Wrong page\");\n            return;\n        }\n        this._load(`/submissions/?limit=20&offset=${(page - 1) * 20}`)\n    };\n\n    getList = (page = 1) => {\n        this._loadSubmission(page);\n        return this.list(this.store.getState().submissions.list[page]);\n    }\n\n    submissionDetails = (id) => {\n        const submission = this.getById(id);\n        if (submission) {\n            if (!submission.details) this._loadById(id);\n            else return submission.details;\n        }\n        return null;\n    }\n\n    totalPages = () => {\n        return this.store.getState()[this.name + 's'].total;\n    }\n}\n","import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'tutorial';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        tutorialsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No tutorials for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\n\nexport default slice.reducer;\n\nexport class tutorialActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadTutorials = (contestId) => {\n        const tutorials = this.store.getState().tutorials;\n        if(tutorials.fetched.indexOf(contestId) !== -1 || tutorials.loading) return ;\n        this._load(`/tutorials/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadTutorials(contestId);\n        let list = [];\n        const dict = this.store.getState().tutorials.dict;\n        for(let dictKey in dict) {\n            if(dict[dictKey].contest === contestId) {\n                list.push(dict[dictKey]);\n            }\n        }\n        return list;\n    }\n}\n","import {combineReducers} from \"redux\";\nimport contests from './data/contests';\nimport problems from './data/problems';\nimport users from './data/users';\nimport submissions from './data/submissions';\nimport tutorials from \"./data/tutorials\";\n\n\nexport default combineReducers({\n    contests: contests,\n    problems: problems,\n    submissions: submissions,\n    users: users,\n    tutorials: tutorials,\n});\n","import React from \"react\";\n\nexport const SuperContext = React.createContext();","import React, {useContext} from 'react';\nimport {SuperContext} from \"../context\";\nimport {getJwt} from \"../common/authService\";\n\nconst WebSocketReceive = () => {\n    const {ws, contestActs, problemActs, submissionActs, userActs, tutorialActs} = useContext(SuperContext);\n    ws.addEventListener('message', (e) => {\n        const data = JSON.parse(e.data).data;\n        if(data.target === 'contest') contest(contestActs, data);\n        if(data.target === 'problem') problem(problemActs, data);\n        if(data.target === 'submission') submission(submissionActs, data);\n        if(data.target === 'user') user(userActs, data);\n        if(data.target === 'tutorial') tutorial(tutorialActs, data);\n        if(data.target === 'login') ws.send(JSON.stringify({\"token_id\": getJwt() || \"Blank\"}));\n    });\n\n    return <span />\n};\n\nconst contest = (contestActs, data) => {\n    contestActs.update(data);\n}\n\nconst problem = (problemActs, data) => {\n    problemActs.update(data);\n}\n\nconst submission = (submissionActs, data) => {\n    submissionActs.update(data);\n}\n\nconst user = (userActs, data) => {\n    userActs.update(data);\n}\n\nconst tutorial = (tutorialActs, data) => {\n    tutorialActs.update(data);\n}\n\nexport default WebSocketReceive;","const theme = localStorage.getItem('theme') !== \"regular\";\n\nexport const css = {\n  heading4: theme ? \"bi-heading4 text-center\" : \"\",\n  navbar: theme ? \"navbar navbar-expand-lg navbar-dark bg-dark\" : \"\",\n  tableSingle: theme ? \"table table-bordered border-dark table-striped table-hover text-center\" : \"\",\n}","import React, {useContext} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {css} from \"../main_css\";\nimport {SuperContext} from \"../context\";\n\nconst NavBar = () => {\n    const {userActs} = useContext(SuperContext);\n    const user = userActs.currentUser();\n    return (\n        <nav className={css.navbar}>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"/>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/contests\">Contests</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/submissions\">Submission</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        {!user && <NavLink to=\"/users/login\" className=\"nav-link\">Login</NavLink>}\n                        {user && <NavLink to=\"/users/profile\" className=\"nav-link\">Profile</NavLink>}\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;\n","import React, {useContext} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {extractDate} from \"../functions\";\nimport {SuperContext} from \"../../context\";\nimport {css} from \"../../main_css\";\nimport {urls} from \"../../configuration\";\nimport Countdown from \"react-countdown\";\n\nconst ContestList = () => {\n  const {contestActs, userActs} = useContext(SuperContext);\n  const contestList = contestActs.getList();\n  let ended = [], upcoming = [];\n  for (let i = 0; i < contestList.length; i++) {\n    let contest = contestList[i];\n    let end_time = new Date(contest.end_time).getTime();\n    if (end_time < Date.now()) {\n      ended.push(contestList[i]);\n    } else upcoming.push(contestList[i]);\n  }\n  console.log(\"Running Contest list\")\n  return (\n    <div className=\"container p-2\">\n      <div className={css.heading4}>Current or Upcoming contests</div>\n      {upcoming.map((contest) =>\n        <div key={contest.id}>\n          <p className={\"mt-4\"}/>\n          <div className={\"card rounded-top\"}>\n            <div className={\"card-header h4\"}>\n              <Link to={`${urls.contests}/${contest.id}`} className={\"white-link\"}>{contest.title} </Link>\n            </div>\n            <div className={\"card-body\"}>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <b>Writer(s)</b><br/>\n                  {contest.writers.map(\n                    userId => <p className=\"user\" key={userId}>{userActs.fullName(userId)}</p>)}\n                </div>\n                <div className=\"col\">\n                  <b>Tester(s)</b><br/>\n                  {contest.testers.map(\n                    userId => <p className=\"user\" key={userId}>{userActs.fullName(userId)}</p>)}\n                </div>\n              </div>\n              <div className={\"row\"}>\n                <div className=\"col\">\n                  <p><b>Start at: </b>{extractDate(contest.start_time)}</p>\n                </div>\n                <div className=\"col\">\n                  <b>Length: </b>{getTimeDifference(new Date(contest.end_time), new Date(contest.start_time))}\n                </div>\n              </div>\n              <div className={\"text-center\"}>\n                {new Date(contest.start_time) > Date.now() && <div>\n                  <Countdown date={contest.start_time} className={\"h2\"}/>\n                </div>}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <p className={\"mt-5\"}/>\n      <div className={css.heading4}>Past contests</div>\n      {ended.map((contest) =>\n        <div key={contest.id}>\n          <p className={\"mt-4\"}/>\n          <div className={\"card pb-4\"}>\n            <div className={\"card-header h4\"}>\n              {contest.title}\n            </div>\n            <div className={\"card-body\"}>\n              <div className=\"row\">\n                <div className=\"col\">\n                  <b>Writer(s)</b><br/>\n                  {contest.writers.map(\n                    userId => <p className=\"user\" key={userId}>{userActs.fullName(userId)}</p>)}\n                </div>\n                <div className=\"col\">\n                  <b>Tester(s)</b><br/>\n                  {contest.testers.map(\n                    userId => <p className=\"user\" key={userId}>{userActs.fullName(userId)}</p>)}\n                </div>\n              </div>\n              <div className={\"row\"}>\n                <div className=\"col\">\n                  <p><b>Ended at: </b>{extractDate(contest.end_time)}</p>\n                </div>\n                <div className=\"col\">\n                  <b>Length: </b>{getTimeDifference(new Date(contest.end_time), new Date(contest.start_time))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ContestList;\n\nconst getTimeDifference = (start, end) => {\n  let dif;\n  if (end.getTime() > start.getTime()) {\n    dif = (end.getTime() - start.getTime()) / 1000;\n  } else dif = (start.getTime() - end.getTime()) / 1000;\n  const hour = Math.floor(dif / 3600);\n  const minute = Math.floor((dif - hour * 3600) / 60);\n  if (minute > 2) return `${hour} hour(s) ${minute} minute(s)`;\n  return `${hour} hour(s)`;\n}\n","import React, {useContext, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SuperContext} from \"../../context\";\n\nconst ProblemList = ({match}) => {\n    const {contestId} = match.params;\n    const {problemActs, userActs} = useContext(SuperContext);\n    const [problems] = useState(problemActs.getList(contestId));\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writer</th>\n                </tr>\n                </thead>\n                <tbody>\n                {problems.map((problem) => <tr key={problem.id}>\n                    <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                    <td>{userActs.fullName(problem.by)}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default ProblemList;","import React, {useContext, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SuperContext} from \"../../context\";\n\nconst TutorialList = ({match}) => {\n    const {contestId} = match.params;\n    const {tutorialActs, userActs} = useContext(SuperContext);\n    const [tutorials] = useState(tutorialActs.getList(contestId));\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writer</th>\n                </tr>\n                </thead>\n                <tbody>\n                {tutorials.map((tutorial) => <tr key={tutorial.id}>\n                    <td><Link to={`/tutorials/${tutorial.id}`}>{tutorial.title}</Link></td>\n                    <td>{userActs.fullName(tutorial.by)}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default TutorialList;","import React, {Component} from 'react';\nimport moment from \"moment\";\nimport {Link} from \"react-router-dom\";\nimport {css} from \"../configuration\";\n\nexport const createTitle = (title, link, className = \"h1\") => {\n    return link ? <Link to={link}>\n        <div className={className + css.center}>{title}</div>\n    </Link> : <div className={className + css.center}>{title}</div>\n};\n\nexport const createLeft = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"\"}) => {\n    return <div className={\"col \" + constClass}> {constText}\n        <span className={textListClass}>{textList.join(\"\\n\")}</span>\n    </div>\n};\n\nexport const createRight = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"text-dark\", hidePhone = true}) => {\n    return <div className={\"col\" + css.alignRight}>\n            <span className={(hidePhone && css.hideOnPhone)}> {constText}\n                <span className={textListClass}>{textList.join(\"\\n\")}</span>\n            </span>\n    </div>\n};\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}\n\nconst formatHtml = (text) => {\n    if (text) {\n        return {__html: `${text}`}\n    }\n    return {__html: \"<span />\"}\n}\n\nexport const FormattedHtml = ({text}) => <div dangerouslySetInnerHTML={formatHtml(text)}/>\n\nclass ObjectView extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default ObjectView;","import React, {useContext, useState} from 'react';\nimport ProblemList from \"../problem/problemList\";\nimport Countdown from \"react-countdown\";\nimport TutorialList from \"../tutorial/tutorialList\";\nimport {Link} from \"react-router-dom\";\nimport {FormattedHtml} from \"../../common/objectViewFuncs\";\nimport {SuperContext} from \"../../context\";\nimport {css} from \"../../main_css\";\n\nconst Contest = ({match}) => {\n  const {contestId} = match.params;\n  const {contestActs, userActs} = useContext(SuperContext);\n  const contest = contestActs.getById(contestId);\n\n  const contestStart = new Date((contest && contest.start_time) || Date.now().toLocaleString());\n  const contestEnd = new Date((contest && contest.end_time) || Date.now().toLocaleString());\n\n  return (\n    <div className=\"container\">\n      {contest && <div>\n        <div className={\"pt-3\"}>\n          <div className={\"row\"}>\n            <div className=\"col\"/>\n            <div className=\"display-4 bg-secondary text-white col-auto rounded-3\">{contest.title}</div>\n            <div className=\"col\"/>\n          </div>\n          <br/>\n          <div className=\"row\">\n            <div className=\"col-auto\">\n              <button className=\"btn btn-dark\">Problems</button>\n            </div>\n            <div className=\"col-auto\">\n              <button className=\"btn btn-dark\">Announcements</button>\n            </div>\n            <div className=\"col-auto\">\n              <Link to={`/contests/standing/${contestId}`}>\n                <button className=\"btn btn-dark\">Standing</button>\n              </Link>\n            </div>\n            <div className=\"col-auto\">\n              <button className=\"btn btn-dark\">Tutorials</button>\n            </div>\n            <div className=\"col-auto\">\n              <button className=\"btn btn-dark\">Submissions</button>\n            </div>\n            <div className=\"col-auto\">\n              <button className=\"btn btn-dark\">Your Submissions</button>\n            </div>\n          </div>\n        </div>\n\n        {contestStart > Date.now() && <div className={\"pt-5 pb-5 text-center\"}>\n          <p className={\"h1\"}>Starts in: </p>\n          <Countdown date={contest.start_time} className=\"h1\"/>\n        </div>}\n\n        <div>\n          <div className=\"row\">\n            <div className={\"col-auto \" + css.heading4}>About contest</div>\n            <div className=\"col\"/>\n          </div>\n          <div>\n            {contest.text && <FormattedHtml text={contest.text}/>}\n          </div>\n          {contest.writers.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p>)}\n          {contest.testers.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p>)}\n          <br/>\n        </div>\n      </div>}\n\n      {contestStart <= Date.now() && <div>\n        <h2>Problems</h2>\n        <ProblemList match={match}/>\n      </div>}\n\n\n      {contestEnd <= Date.now() && <div>\n        <h2>Tutorials</h2>\n        <TutorialList match={match}/>\n      </div>}\n    </div>\n  );\n};\n\nexport default Contest;","import React, {useContext, useEffect, useState} from 'react';\nimport http from \"../../common/httpService\";\nimport {apiEndpoint} from \"../../configuration\";\nimport {SuperContext} from \"../../context\";\n\nconst url = apiEndpoint\n\nconst Standing = ({match}) => {\n    const {contestActs, userActs} = useContext(SuperContext);\n    const {contestId} = match.params;\n    const [duringContest, setDuringContest] = useState([]);\n    const [afterContest, setAfterContest] = useState([]);\n    useEffect(() => {\n        const apiCall = async () => {\n            contestActs.start(); // Start Load animation\n            const data = await http.get(`${url}/standing/${contestId}`)\n            contestActs.failure(); // Stop Load animation\n            setDuringContest(data.data.during);\n            setAfterContest(data.data.after);\n        }\n        apiCall();\n\n    }, [contestId])\n    let position = 1;\n\n    return (\n        <div className=\"container\">\n            <h2>During Contest</h2>\n            {renderStanding(duringContest, userActs, position)}\n            <h2>After Contest</h2>\n            {renderStanding(afterContest, userActs, position)}\n        </div>\n    );\n};\n\nexport default Standing;\n\nconst renderStanding = (objectList, userActs, position = 1) =>\n    <table className=\"table table-bordered table-striped\">\n        <thead>\n        <tr>\n            <th>Position</th>\n            <th>User</th>\n            <th>Solves</th>\n            <th>Penalty</th>\n        </tr>\n        </thead>\n        <tbody>\n        {objectList.map(item => <tr key={position}>\n            <td>{position++}</td>\n            <td>{userActs.fullName(item[0])}</td>\n            <td>{item[1]}</td>\n            <td>{Math.floor(parseFloat(item[2]) / 100)}</td>\n        </tr>)}\n        </tbody>\n\n    </table>\n","import React, {useContext, useState} from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport {urls} from \"../../configuration\";\nimport ContestList from \"./contestList\";\nimport Contest from \"./contest\";\nimport Standing from \"./standing\";\nimport {SuperContext} from \"../../context\";\n\nconst ContestRoute = () => {\n  return <Switch>\n    <Route path=\"/contests/standing/:contestId\" component={Standing}/>\n    <Route path=\"/contests/:contestId\" component={Contest}/>\n    <Route path={urls.contests} component={ContestList}/>\n  </Switch>\n};\n\nexport default ContestRoute;","import React, {useContext, useEffect, useState} from 'react';\nimport {firebaseLoginImplement, loginWithPassword} from \"../../common/authService\";\nimport {SuperContext} from \"../../context\";\n\nconst Login = () => {\n    const {userActs} = useContext(SuperContext);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.innerText = firebaseLoginImplement();\n        document.body.appendChild(script);\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, []);\n\n    const handleInputChange = ({currentTarget}) => {\n        if (currentTarget.name === 'username') setUsername(currentTarget.value);\n        if (currentTarget.name === 'password') setPassword(currentTarget.value);\n    }\n\n    return (\n        <div>\n            <div onClick={userActs.start}>\n                <div id=\"firebaseui-auth-container\" className=\"pt-5\"/>\n            </div>\n            <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                <button className=\"btn btn-danger\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\"\n                        aria-expanded=\"false\" aria-controls=\"collapseExample\" style={{width: \"220px\"}}>\n                    Password Login\n                </button>\n            </div>\n            <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                <div className=\"collapse\" id=\"collapseExample\" style={{width: \"220px\"}}>\n                    <input type=\"text\" value={username} name=\"username\" placeholder=\"Email/Username\"\n                           onChange={handleInputChange}/>\n                    <input type=\"password\" value={password} name=\"password\" placeholder=\"Password\"\n                           onChange={handleInputChange}/>\n                    <div className=\"row\" style={{width: \"220px\"}}>\n                        <div className=\"col-4\">\n                            <button className=\"btn btn-success\" onClick={() => loginWithPassword(username, password)}\n                                    style={{width: \"63px\"}}>SignIn\n                            </button>\n                        </div>\n                        <div className=\"col-8\">\n                            <a className=\"btn btn-primary\" href={\"/users/password_reset/\"} style={{width: \"145px\"}}>Reset\n                                Password</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Login from \"./login\";\nimport {urls} from \"../../configuration\";\nimport UserList from \"./userList\";\nimport Profile from \"./profile\";\n\nconst UserRoute = () => {\n    return (\n        <Switch>\n            <Route path={urls.login} component={Login} />\n            {/*<Route path=\"/users/profile\" component={Profile} />*/}\n            {/*<Route path=\"/users/list\" component={UserList}/>*/}\n        </Switch>\n    );\n};\n\nexport default UserRoute;","import React, {Component} from 'react';\n\nclass Input extends Component {\n    state = {\n        value: this.props.value\n    }\n\n    render() {\n        let {name, label, error, type, onChange, placeholder} = this.props;\n        const changeMiddle = (data) => {\n            onChange(data);\n            this.setState({value: data.currentTarget.value})\n        }\n        return (\n            <div className=\"form-group\">\n                {label &&\n                <label htmlFor=\"{name}\"><h3>{label}</h3></label>\n                }\n                <input type={type} value={this.state.value} onChange={changeMiddle} id={name} name={name} className=\"form-control\"\n                       autoComplete=\"off\" placeholder={placeholder} />\n                <p><small/></p>\n                {error && <div className=\"alert alert-danger\">{error}</div>}\n            </div>\n        )\n    }\n}\n\nInput.defaultProps = {\n    type: \"text\",\n    placeholder: \"Input here\"\n}\n\nexport default Input;\n","import React, {useContext, useEffect} from 'react';\nimport Modal from \"react-modal\";\nimport {SuperContext} from \"../context\";\n\n\nconst LoadingAnimation = () => {\n    const {userActs} = useContext(SuperContext);\n    const state = userActs.store.getState();\n\n    useEffect(() => {\n        Modal.setAppElement('body');\n    }, []);\n\n    const isLoading = state.problems.loading || state.users.loading ||\n      state.contests.loading || state.submissions.loading;\n\n    return <Modal isOpen={isLoading} className=\"Modal\">\n        <div className=\"loader align-middle\"/>\n    </Modal>\n}\n\nexport default LoadingAnimation;\n","import React, {useContext} from 'react';\nimport {css} from \"../main_css\";\nimport {SuperContext} from \"../context\";\nimport {Link} from \"react-router-dom\";\nimport {urls} from \"../configuration\";\n\nconst LeftSideBar = () => {\n    const {contestActs} = useContext(SuperContext);\n    const contestList = contestActs.getList();\n    return (\n        <div>\n            <div className={\"width-100 d-none d-lg-block float-start p-2\"}>\n                <div className={css.heading4}>Latest Contests</div>\n                <table className={css.tableSingle}>\n                    <tbody>\n                    {contestList.map(contest =>\n                        <tr key={contest.id}>\n                            <td><Link to={`${urls.contests}/${contest.id}`}\n                                      className={\"white-link\"}>{contest.title}</Link></td>\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n\n                <span className=\"p-2\"/>\n                <div className={css.heading4}>Latest Tutorials</div>\n                <table className={css.tableSingle}>\n                    <tbody>\n                    <tr>\n                        <td><a className={\"white-link\"} href=\"#\">First</a></td>\n                    </tr>\n                    <tr>\n                        <td><a className={\"white-link\"} href=\"#\">First</a></td>\n                    </tr>\n                    <tr>\n                        <td><a className={\"white-link\"} href=\"#\">First</a></td>\n                    </tr>\n                    <tr>\n                        <td><a className={\"white-link\"} href=\"#\">First</a></td>\n                    </tr>\n                    <tr>\n                        <td><a className={\"white-link\"} href=\"#\">First</a></td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default LeftSideBar;","import React from 'react';\n\nconst RightSideBar = () => {\n    return (\n        <div>\n            <div className=\"width-100 d-none d-xxl-block float-end vll\">\n                <h1>This is asdf gasd dsa situated on right</h1>\n            </div>\n        </div>\n    );\n};\n\nexport default RightSideBar;","import \"./app.css\"\nimport React, {useContext, useState} from 'react';\nimport NavBar from \"./apps/navBar\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {urls} from \"./configuration\";\nimport ContestRoute from \"./apps/contest/contestRoute\";\nimport UserRoute from \"./apps/user/userRoute\";\nimport ProblemRoute from \"./apps/problem/problemRoute\";\nimport LoadingAnimation from \"./common/loadingAnimation\";\n\nimport SubmissionRoute from \"./apps/submission/submissionRoute\";\nimport TutorialRoute from \"./apps/tutorial/tutorialRoute\";\nimport {SuperContext} from \"./context\";\nimport LeftSideBar from \"./apps/leftSideBar\";\nimport RightSideBar from \"./apps/rightSideBar\";\n\n\nconst App = () => {\n    const [refresh, setRefresh] = useState(false);\n    const {userActs} = useContext(SuperContext);\n\n    let unSub = userActs.store.subscribe(() => {\n        setTimeout(() => {\n            setRefresh(!refresh);\n            unSub();\n        }, 100)\n    })\n\n    return (\n        <div className={\"row\"}>\n            <LoadingAnimation/>\n            <NavBar/>\n            <div className={\"col-auto\"}>\n                <LeftSideBar/>\n            </div>\n            <div className={\"col\"}>\n              <h1>Currently being redesigned. All services are stopped.</h1>\n                <Switch>\n                    <Route path={urls.contests} component={ContestRoute}/>\n                    {/*<Route path={projectURLS.problems} component={ProblemRoute}/>*/}\n                    {/*<Route path={projectURLS.submissions} component={SubmissionRoute}/>*/}\n                    {/*<Route path={projectURLS.tutorials} component={TutorialRoute}/>*/}\n                    <Route path={urls.user} component={UserRoute}/>\n                </Switch>\n            </div>\n            <div className={\"col-auto\"}>\n                <RightSideBar/>\n            </div>\n        </div>\n\n    );\n};\n\nexport default App;\n","import React, {useEffect} from 'react';\nimport {getJwt, logout} from \"./common/authService\";\nimport httpService from \"./common/httpService\";\nimport {endpoint, wssURL} from \"./configuration\";\nimport storeFunc from \"./store/configureStore\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\nimport {contestActions} from \"./store/data/contests\";\nimport {userActions} from \"./store/data/users\";\nimport {submissionActions} from \"./store/data/submissions\";\nimport {problemActions} from \"./store/data/problems\";\nimport {tutorialActions} from \"./store/data/tutorials\";\nimport WebSocketReceive from \"./store/webSocketReceive\";\nimport App from \"./app\";\n\nimport {SuperContext} from \"./context\";\n\nconst ParentApp = () => {\n  const data = generateData();\n  useEffect(() => {\n    if (getJwt()) {\n      httpService.get(endpoint + '/users/login_check/').then(({data}) => {\n        if (!data.status) {\n          console.log(\"Wrong credentials\");\n          logout();\n        }\n      })\n    }\n  }, [])\n  return (\n    <SuperContext.Provider value={data}>\n      <div>\n        <WebSocketReceive/>\n        <App />\n      </div>\n    </SuperContext.Provider>\n  );\n};\n\nexport default ParentApp;\n\nconst generateData = () => {\n  const store = storeFunc();\n  const ws = new ReconnectingWebSocket(`${wssURL()}/`, '', {\n    maxReconnectionDelay: 60000,\n    minReconnectionDelay: 500,\n  });\n\n  const contestActs = new contestActions(store, ws);\n  const userActs = new userActions(store, ws);\n  const submissionActs = new submissionActions(store, ws);\n  const problemActs = new problemActions(store, ws);\n  const tutorialActs = new tutorialActions(store, ws);\n  return {\n    contestActs: contestActs,\n    userActs: userActs,\n    submissionActs: submissionActs,\n    problemActs: problemActs,\n    tutorialActs: tutorialActs,\n    store: store, ws: ws,\n  }\n}","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport api from \"./api\";\n\nexport default function storeFunc() {\n    return configureStore({reducer,\n    middleware: [...getDefaultMiddleware(),\n        api\n    ]});\n}\n","import ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport './common/cssLibrary.css';\nimport ParentApp from \"./parentApp\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <ParentApp />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}