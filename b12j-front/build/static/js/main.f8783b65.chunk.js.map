{
  "version": 3,
  "sources": [
    "common/httpService.jsx",
    "configuration.js",
    "common/authService.jsx",
    "store/api.js",
    "apps/functions.js",
    "store/basicReducerTemplate.js",
    "store/data/contests.js",
    "store/data/problems.js",
    "store/data/users.js",
    "store/data/submissions.js",
    "store/data/tutorials.js",
    "store/reducer.js",
    "apps/navBar.jsx",
    "apps/contest/contestList.jsx",
    "apps/problem/problemList.jsx",
    "apps/tutorial/tutorialList.jsx",
    "common/objectViewFuncs.jsx",
    "apps/contest/contest.jsx",
    "apps/contest/standing.jsx",
    "apps/contest/contestRoute.jsx",
    "apps/user/login.jsx",
    "apps/user/userList.jsx",
    "apps/user/profile.jsx",
    "apps/user/loginServe.jsx",
    "apps/user/userRoute.jsx",
    "common/fields/codeEditor.jsx",
    "common/fields/problemCode.jsx",
    "apps/problem/problem.jsx",
    "common/fields/TextEditor.jsx",
    "common/fields/input.jsx",
    "apps/problem/problemForm.jsx",
    "apps/problem/problemRoute.jsx",
    "common/loadingAnimation.jsx",
    "apps/submission/submissionList.jsx",
    "apps/submission/submission.jsx",
    "apps/submission/submissionRoute.jsx",
    "store/webSocketReceive.jsx",
    "apps/tutorial/tutorial.jsx",
    "apps/tutorial/tutorialRoute.jsx",
    "app.js",
    "store/configureStore.js",
    "index.js"
  ],
  "names": [
    "axios",
    "defaults",
    "headers",
    "common",
    "getJwt",
    "interceptors",
    "response",
    "use",
    "error",
    "status",
    "console",
    "log",
    "alert",
    "Promise",
    "reject",
    "get",
    "post",
    "put",
    "delete",
    "apiEndpoint",
    "document",
    "domain",
    "location",
    "protocol",
    "host",
    "projectURLS",
    "contests",
    "submissions",
    "standing",
    "problems",
    "tutorials",
    "chat",
    "cf",
    "cfProblems",
    "cfStatics",
    "users",
    "login",
    "register",
    "logout",
    "firebaseConfig",
    "apiKey",
    "authDomain",
    "databaseURL",
    "projectId",
    "storageBucket",
    "messagingSenderId",
    "appId",
    "measurementId",
    "redirectURL",
    "localStorage",
    "removeItem",
    "window",
    "loginWithPassword",
    "username",
    "password",
    "a",
    "httpService",
    "then",
    "setItem",
    "data",
    "jwt",
    "catch",
    "errors",
    "getCurrentUser",
    "getItem",
    "jwtDecode",
    "apiCallBegan",
    "createAction",
    "apiCallFailed",
    "api",
    "dispatch",
    "next",
    "action",
    "type",
    "payload",
    "url",
    "method",
    "onSuccess",
    "onError",
    "onStart",
    "onFailed",
    "request",
    "baseURL",
    "message",
    "extractDate",
    "dateString",
    "dateObj",
    "Date",
    "moment",
    "format",
    "basicReducers",
    "name",
    "state",
    "list",
    "push",
    "id",
    "dict",
    "loading",
    "results",
    "i",
    "length",
    "receivedWithPagination",
    "page",
    "nextUrl",
    "nextURL",
    "offset",
    "parse",
    "Math",
    "ceil",
    "getPageNumberFromLink",
    "count",
    "fetched",
    "parseInt",
    "total",
    "basicActions",
    "slice",
    "store",
    "ws",
    "requestedIdQueue",
    "start",
    "requested",
    "failure",
    "requestFailed",
    "_load",
    "received",
    "_loadById",
    "indexOf",
    "toSend",
    "send",
    "JSON",
    "stringify",
    "add",
    "edit",
    "update",
    "updated",
    "getById",
    "key",
    "getState",
    "actions",
    "this",
    "added",
    "objList",
    "createSlice",
    "initialState",
    "reducers",
    "contestsReceived",
    "contestActions",
    "_loadContest",
    "getList",
    "problemsReceived",
    "contestId",
    "contest",
    "problemActions",
    "_loadProblems",
    "probId",
    "info",
    "loggedIn",
    "loggedOut",
    "userActions",
    "loadUsers",
    "firstName",
    "fullName",
    "currentUser",
    "addUserToStore",
    "submissionsReceived",
    "submissionUpdated",
    "updatedWithPagination",
    "submissionActions",
    "_loadSubmission",
    "totalPages",
    "tutorialsReceived",
    "tutorialActions",
    "_loadTutorials",
    "dictKey",
    "combineReducers",
    "NavBar",
    "user",
    "useContext",
    "SuperContext",
    "userActs",
    "className",
    "to",
    "ContestList",
    "contestActs",
    "useState",
    "contestList",
    "setContestList",
    "useEffect",
    "subscribe",
    "map",
    "title",
    "hosts",
    "userId",
    "testers",
    "start_time",
    "end_time",
    "ProblemList",
    "match",
    "params",
    "problemActs",
    "setProblems",
    "unSubscribe",
    "problem",
    "by",
    "TutorialList",
    "tutorialActs",
    "setTutorials",
    "tutorial",
    "formatHtml",
    "text",
    "__html",
    "FormattedHtml",
    "dangerouslySetInnerHTML",
    "Contest",
    "Component",
    "setContest",
    "reload",
    "setReload",
    "contestStart",
    "now",
    "toLocaleString",
    "contestEnd",
    "date",
    "onComplete",
    "Standing",
    "duringContest",
    "setDuringContest",
    "afterContest",
    "setAfterContest",
    "http",
    "during",
    "after",
    "apiCall",
    "renderStanding",
    "objectList",
    "position",
    "item",
    "floor",
    "parseFloat",
    "ContestRoute",
    "path",
    "component",
    "Login",
    "history",
    "setUsername",
    "setPassword",
    "script",
    "createElement",
    "async",
    "innerText",
    "firebaseui",
    "firebase",
    "initializeApp",
    "ui",
    "auth",
    "AuthUI",
    "uiConfig",
    "callbacks",
    "signInSuccessWithAuthResult",
    "signInFlow",
    "signInOptions",
    "GoogleAuthProvider",
    "PROVIDER_ID",
    "FacebookAuthProvider",
    "GithubAuthProvider",
    "firebaseLoginImplement",
    "body",
    "appendChild",
    "removeChild",
    "handleInputChange",
    "currentTarget",
    "value",
    "onClick",
    "style",
    "display",
    "justifyContent",
    "alignItems",
    "data-toggle",
    "data-target",
    "aria-expanded",
    "aria-controls",
    "width",
    "onChange",
    "UserList",
    "setUsers",
    "first_name",
    "last_name",
    "Profile",
    "userProbList",
    "setUserProbList",
    "userSubmissionList",
    "setUserSubmissionList",
    "userContest",
    "setUserContest",
    "testProblem",
    "setTestProblem",
    "userProblemData",
    "userSubmissionData",
    "userContestData",
    "testProblemData",
    "submission",
    "verdict",
    "LoginServe",
    "getIdToken",
    "idToken",
    "communicateWithServer",
    "isOpen",
    "UserRoute",
    "CodeEditor",
    "mode",
    "theme",
    "font",
    "label",
    "editorScript",
    "ace",
    "editor",
    "session",
    "setMode",
    "setTheme",
    "getSession",
    "setUseWorker",
    "setValue",
    "clearSelection",
    "setOptions",
    "enableBasicAutocompletion",
    "enableSnippets",
    "enableLiveAutocompletion",
    "setFontSize",
    "commands",
    "addCommand",
    "bindKey",
    "win",
    "mac",
    "exec",
    "config",
    "loadModule",
    "module",
    "init",
    "showKeyboardShortcuts",
    "on",
    "content",
    "getValue",
    "Fragment",
    "htmlFor",
    "height",
    "ProblemCode",
    "submissionActs",
    "code",
    "setCode",
    "language",
    "setLanguage",
    "setFont",
    "handleChange",
    "submit",
    "disabled",
    "Problem",
    "problemId",
    "setProblem",
    "is_admin",
    "is_superuser",
    "notice",
    "inTerms",
    "outTerms",
    "test_cases",
    "test",
    "input",
    "output",
    "random",
    "TextEditor",
    "Quill",
    "handlers",
    "image",
    "range",
    "getSelection",
    "prompt",
    "insertEmbed",
    "index",
    "sources",
    "USER",
    "imageHandler",
    "container",
    "firstChild",
    "innerHTML",
    "Input",
    "props",
    "placeholder",
    "setState",
    "autoComplete",
    "defaultProps",
    "ProblemForm",
    "contest_id",
    "corCode",
    "conProbId",
    "time_limit",
    "examples",
    "setText",
    "ProblemRoute",
    "LoadingAnimation",
    "setUser",
    "setSubmission",
    "Modal",
    "setAppElement",
    "isLoading",
    "SubmissionList",
    "submissionList",
    "setSubmissionList",
    "pages",
    "problem_title",
    "pagination",
    "pageList",
    "toString",
    "Submission",
    "submissionId",
    "verdictProcess",
    "renderResult",
    "details",
    "result",
    "SubmissionRoute",
    "WebSocketReceive",
    "addEventListener",
    "e",
    "target",
    "Tutorial",
    "tutorialId",
    "setTutorial",
    "TutorialRoute",
    "React",
    "createContext",
    "App",
    "generateData",
    "Provider",
    "configureStore",
    "reducer",
    "middleware",
    "getDefaultMiddleware",
    "ReconnectingWebSocket",
    "wssURL",
    "maxReconnectionDelay",
    "minReconnectionDelay",
    "ReactDOM",
    "render",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.f8783b65.chunk.js",
  "sourcesContent": [
    "import axios from \"axios\";\nimport {getJwt} from \"./authService\";\n\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\naxios.interceptors.response.use(null, error => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n\n    if(!expectedError) {\n        console.log(\"Logging the error\", error);\n        alert(\"An unexpected error.\");\n    }\n\n    return Promise.reject(error);\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};",
    "export const css = {\n    navBar: \" navbar-dark font-weight-bold bgDarkBlue \",\n    navSuccessButton: ' btn btn-outline-success ',\n    center: \" d-flex justify-content-center \",\n    alignRight: \" d-flex flex-row-reverse \",\n    hideOnPhone: \" d-none d-lg-block d-xl-block \",\n    username: \" nobr text-danger font-weight-bold \",\n};\n\nexport const minRefreshTime = 60;\nexport const jwtTokenKey = \"token\";\n\nconst apiURL = () => {\n    if (document.domain === \"localhost\") return \"http://127.0.0.1:8000/api\";\n    else return document.location.protocol + \"//\" + document.location.host + \"/api\"\n}\n\nexport const apiEndpoint = apiURL();\n\nexport const wssURL = () => {\n    const protocol = document.location.protocol === \"https:\" ? \"wss://\" : \"ws://\";\n    if (document.domain === \"localhost\") return protocol + \"127.0.0.1:8000/ws\";\n    return protocol + document.location.host + \"/ws\";\n}\n\nexport const projectURLS = {\n    contests: '/contests',\n    submissions: '/submissions',\n    standing: '/contests/standing',\n    problems: '/problems',\n    tutorials: '/tutorials',\n    chat: '/chat',\n    cf: '/cf',\n    cfProblems: 'cf/problems',\n    cfStatics: 'cf/statics',\n    users: '/users',\n    login: '/users/login',\n    register: '/users/register',\n    logout: '/users/logout',\n};\n\nexport const navBar = {\n    menuLeft: [\n        {\n            label: 'Home',\n            link: '/',\n        },\n        {\n            label: 'Bulletin',\n            link: '/bulletin',\n        }\n        ,\n        {\n            label: 'Chat',\n            link: projectURLS.chat,\n        },\n        {\n            label: 'Contests',\n            link: projectURLS.contests,\n            sub: [\n                {\n                    label: 'Contest List',\n                    link: projectURLS.contests,\n                },\n                {\n                    label: 'Submissions',\n                    link: projectURLS.submissions,\n                },\n                {\n                    label: 'Standing',\n                    link: projectURLS.standing,\n                },\n            ]\n        },\n        {\n            label: 'Tutorials',\n            link: projectURLS.tutorials,\n        },\n        {\n            label: 'Codeforces',\n            link: projectURLS.cf,\n            sub: [\n                {\n                    label: 'Problems',\n                    link: projectURLS.cfProblems\n                },\n                {\n                    label: 'Statics',\n                    link: projectURLS.cfStatics\n                }\n            ]\n        }\n    ],\n\n    menuRight: [\n        {\n            label: 'Login',\n            link: projectURLS.login,\n            // class: css.navSuccessButton,\n        },\n        {\n            label: 'Register',\n            link: projectURLS.register,\n            // class: css.navSuccessButton,\n        }\n    ]\n}\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyB9n-TJY1hy49WoECQH7fZXlxA7lKI2VH4\",\n    authDomain: \"b12j-mah.firebaseapp.com\",\n    databaseURL: \"https://b12j-mah.firebaseio.com\",\n    projectId: \"b12j-mah\",\n    storageBucket: \"b12j-mah.appspot.com\",\n    messagingSenderId: \"704405925886\",\n    appId: \"1:704405925886:web:2066da3c25584a7ed4daaf\",\n    measurementId: \"G-XE9M4QRX4J\"\n};\n",
    "import jwtDecode from 'jwt-decode';\nimport httpService from \"./httpService\";\nimport {apiEndpoint, firebaseConfig} from \"../configuration\";\n\n\nexport function logout(redirectURL = '/') {\n    localStorage.removeItem(\"token\");\n    window.location = redirectURL\n}\n\nexport const firebaseLoginImplement = (history) => {\n    const firebaseui = window.firebaseui;\n    const firebase = window.firebase;\n    firebase.initializeApp(firebaseConfig);\n\n    const ui = new firebaseui.auth.AuthUI(firebase.auth());\n    const uiConfig = {\n        callbacks: {\n            signInSuccessWithAuthResult: () => {\n                history.push(\"/users/loginServe\");\n                return true;\n            },\n        },\n        signInFlow: 'popup',\n        // signInSuccessUrl: \"/users/loginServe\",\n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n            firebase.auth.GithubAuthProvider.PROVIDER_ID,\n        ],\n    };\n    ui.start('#firebaseui-auth-container', uiConfig);\n}\n\nexport const loginWithPassword = async (username, password) => {\n    httpService.post(apiEndpoint + '/login/', {username, password}).then(\n        response => {\n            localStorage.setItem(\"token\", response.data.jwt);\n            window.location = '/'\n        }\n    ).catch(\n        error => {\n            alert(error.response.data.errors);\n        }\n    )\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(\"token\");\n        return jwtDecode(jwt)\n    } catch {\n        return null;\n    }\n}\n\nexport function getJwt() {\n    return localStorage.getItem(\"token\")\n}\n",
    "import axios from 'axios';\nimport {createAction} from \"@reduxjs/toolkit\";\nimport {getJwt} from \"../common/authService\";\nimport {apiEndpoint} from \"../configuration\";\n\nexport const apiCallBegan = createAction(\"api/callBegan\")\n// export const apiCallSuccess = createAction(\"api/callSuccess\")\nexport const apiCallFailed = createAction(\"api/callFailed\")\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\nconst api = ({dispatch}) => next => async action => {\n    if (action.type !== apiCallBegan.type) return next(action);\n    const {url, method, data, onSuccess, onError, onStart, onFailed} = action.payload;\n    if(onStart) {\n        dispatch({type: onStart})\n    }\n    next(action)\n    try {\n        const response = await axios.request({\n            baseURL: apiEndpoint,\n            url,\n            method,\n            data\n        });\n        if(onSuccess) {\n            dispatch({type: onSuccess, payload: response.data});\n        }\n    } catch (error) {\n        if(onFailed) dispatch({type: onFailed})\n        dispatch(apiCallFailed({payload:error.message}))\n        if(onError) dispatch({type: onError, payload: error.message})\n    }\n}\nexport default api;",
    "import moment from \"moment\";\nimport {parse} from \"query-string\";\n\nexport const getPageNumberFromLink = (nextURL) => {\n    const parsed = parse(nextURL);\n    const offset = parsed.offset\n    const limit = 20\n    return Math.ceil(offset / limit)\n}\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}",
    "import {apiCallBegan} from \"./api\";\nimport {projectURLS} from \"../configuration\";\nimport {getPageNumberFromLink} from \"../apps/functions\";\n\nexport const standardInitialState = () => {\n    return {\n        list: [],\n        dict: {},\n        fetched: [],\n        total: null,\n        loading: false,\n    }\n}\n\nexport const basicReducers = (name) => {\n    return {\n        [`${name}Added`]: (state, action) => {\n            state.list.push(action.payload.id);\n            state.dict[action.payload.id] = action.payload;\n            state.loading = false;\n        },\n\n        [`${name}Updated`]: (state, action) => {\n            if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n            else {\n                state.dict[action.payload.id] = action.payload;\n                state.list.push(action.payload)\n            }\n            state.loading = false;\n        },\n\n        [`${name}sReceived`]: (state, action) => {\n            const data = action.payload.results;\n            for (let i = 0; i < data.length; i++) {\n                state.dict[data[i].id] = data[i];\n                state.list.push(data[i].id)\n            }\n            state.loading = false;\n        },\n\n        [`${name}Requested`]: (state) => {\n            state.loading = true;\n        },\n\n        [`${name}RequestFailed`]: (state) => {\n            state.loading = false;\n        }\n    }\n};\n\nexport const receivedWithPagination = (state, action) => {\n    let page;\n    state.loading = false;\n    const nextUrl = action.payload.next;\n    if (!nextUrl) page = Math.ceil(action.payload.count / 20)\n    else page = getPageNumberFromLink(nextUrl);\n    state.fetched.push(parseInt(page));\n    state.list[page] = []\n    state.dict[page] = {}\n    state.total = Math.ceil(action.payload.count / 20);\n    const data = action.payload.results;\n    for (let i = 0; i < data.length; i++) {\n        state.dict[data[i].id] = data[i];\n        state.list[page].push(data[i].id)\n    }\n}\n\nexport const updatedWithPagination = (state, action) => {\n    if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n    else {\n        state.dict[action.payload.id] = action.payload;\n        if(!state.list[1]) state.list[1] = []\n        state.list[1] = [action.payload.id, ...state.list[1]]\n    }\n    state.loading = false;\n}\n\nexport class basicActions {\n    constructor(slice, store, ws, name) {\n        const actions = slice.actions;\n        this.ws = ws;\n        this.store = store;\n        this.name = name;\n        this.added = actions[`${name}Added`];\n        this.requestFailed = actions[`${name}RequestFailed`];\n        this.requested = actions[`${name}Requested`];\n        this.received = actions[`${name}sReceived`];\n        this.updated = actions[`${name}Updated`];\n    }\n\n    requestedIdQueue = [];\n\n    start = () => {\n        this.store.dispatch({\n            type: this.requested.type\n        })\n    }\n\n    failure = () => {\n        this.store.dispatch({\n            type: this.requestFailed.type\n        })\n    };\n\n    _load = (url = projectURLS[`${this.name}s`] + '/') => {\n        this.store.dispatch(apiCallBegan({\n            url: url,\n            onStart: this.requested.type,\n            onSuccess: this.received.type,\n            onFailed: this.requestFailed.type,\n        }));\n    };\n\n    _loadById = (id) => {\n        if (this.requestedIdQueue.indexOf(id) === -1) {\n            this.requestedIdQueue.push(id);\n            const toSend = {\"method\": \"GET\", \"target\": this.name, \"id\": id}\n            this.ws.send(JSON.stringify(toSend));\n            this.start();\n        }\n    };\n\n    add = (data) => {\n        const toSend = {\"method\": \"POST\", \"target\": this.name, \"data\": data};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    edit = (data) => {\n        const toSend = {\"method\": \"PUT\", \"target\": this.name, \"id\": data.id, \"data\": data};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    list(objList = []) {\n        if (!objList) return;\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        let data = []\n        for (let i = 0; i < objList.length; i++) {\n            data.push(dict[objList[i]]);\n        }\n        return data;\n    }\n\n    update = (data) => {\n        this.store.dispatch({type: this.updated.type, payload: data})\n    }\n\n    getById = (id, key = null) => {\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        if (key) {\n            if (dict[id]) return dict[id][key];\n            else if (id) this._loadById(id);\n        } else if (dict[id]) return dict[id]\n        if (id) this._loadById(id);\n        return null;\n    }\n}\n",
    "import {basicActions, basicReducers, receivedWithPagination, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'contest';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        contestsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n    },\n});\n\nexport default slice.reducer;\n\nexport class contestActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadContest = (page=1) => {\n        const contests = this.store.getState().contests;\n        if (contests.fetched.indexOf(page) !== -1 || contests.loading) return;\n        if(page < 1 || (contests.total && page > contests.total)) {\n            alert(\"Wrong page\");\n        }\n\n        this._load(`/contests/?limit=20&offset=${(page - 1)*20}`)\n    };\n\n    getList = (page=1) => {\n        this._loadContest(page);\n        return this.list(this.store.getState().contests.list[page]);\n    }\n}",
    "import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'problem';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        problemsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No Problems for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\nexport default slice.reducer;\n\nexport class problemActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadProblems = (contestId) => {\n        const problems = this.store.getState().problems;\n        if(problems.fetched.indexOf(contestId) !== -1 || problems.loading) return ;\n        this._load(`/problems/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadProblems(contestId);\n        let list = [];\n        const dict = this.store.getState().problems.dict;\n        for(let probId in dict) {\n            if(dict[probId].contest === contestId) {\n                list.push(dict[probId]);\n            }\n        }\n        return list;\n    }\n}\n",
    "import {createSlice} from \"@reduxjs/toolkit\";\nimport {getCurrentUser} from \"../../common/authService\";\nimport {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\n\nconst name = 'user'\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n        info: getCurrentUser(),\n    },\n    reducers: {\n        ...basicReducers(name),\n\n        loggedIn: (state, action) => {\n            state.info = action.payload;\n        },\n        loggedOut: state => {\n            state.info = null;\n        }\n    }\n});\n\nconst {loggedIn} = slice.actions;\nexport default slice.reducer;\n\nexport class userActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    };\n\n    loadUsers = () => {\n        this._load('/users/?limit=1000')\n    };\n\n    getList = () => this.list(this.store.getState().users.list);\n\n    firstName = (id) => {\n        return this.getById(id, 'first_name');\n    };\n\n    fullName = (id) => {\n        return this.getById(id, 'first_name') + ' ' + this.getById(id, 'last_name')\n    }\n\n    currentUser = () => {\n        return this.store.getState()[`${this.name}s`].info;\n    }\n\n    addUserToStore = () => {\n        this.store.dispatch({\n            type: loggedIn.type,\n            payload: getCurrentUser(),\n        })\n    };\n}\n",
    "import {\n    basicActions,\n    basicReducers,\n    receivedWithPagination,\n    standardInitialState,\n    updatedWithPagination\n} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'submission';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n    },\n    reducers: {\n        ...basicReducers(name),\n        submissionsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n        submissionUpdated: (state, action) => {\n            updatedWithPagination(state, action);\n        }\n    }\n})\nexport default slice.reducer;\n\nexport class submissionActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadSubmission = (page = 1) => {\n        const submissions = this.store.getState().submissions;\n        if (submissions.fetched.indexOf(page) !== -1 || submissions.loading) return;\n        if (page < 1 || (submissions.total && page > submissions.total)) {\n            alert(\"Wrong page\");\n            return;\n        }\n        this._load(`/submissions/?limit=20&offset=${(page - 1) * 20}`)\n    };\n\n    getList = (page = 1) => {\n        this._loadSubmission(page);\n        return this.list(this.store.getState().submissions.list[page]);\n    }\n\n    totalPages = () => {\n        return this.store.getState()[this.name + 's'].total;\n    }\n}\n",
    "import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'tutorial';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        tutorialsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No tutorials for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\n\nexport default slice.reducer;\n\nexport class tutorialActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadTutorials = (contestId) => {\n        const tutorials = this.store.getState().tutorials;\n        if(tutorials.fetched.indexOf(contestId) !== -1 || tutorials.loading) return ;\n        this._load(`/tutorials/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadTutorials(contestId);\n        let list = [];\n        const dict = this.store.getState().tutorials.dict;\n        for(let dictKey in dict) {\n            if(dict[dictKey].contest === contestId) {\n                list.push(dict[dictKey]);\n            }\n        }\n        return list;\n    }\n}\n",
    "import {combineReducers} from \"redux\";\nimport contests from './data/contests';\nimport problems from './data/problems';\nimport users from './data/users';\nimport submissions from './data/submissions';\nimport tutorials from \"./data/tutorials\";\n\n\nexport default combineReducers({\n    contests: contests,\n    problems: problems,\n    submissions: submissions,\n    users: users,\n    tutorials: tutorials,\n});\n",
    "import React, {useContext} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {SuperContext} from \"../app\";\n\nconst NavBar = () => {\n    const {userActs} = useContext(SuperContext);\n    const user = userActs.currentUser();\n    return (\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            {/*<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"*/}\n            {/*        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">*/}\n            {/*    <span className=\"navbar-toggler-icon\"/>*/}\n            {/*</button>*/}\n            <div className=\"\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/contests\">Contests</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/submissions\">Submission</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        {!user && <NavLink to=\"/users/login\" className=\"nav-link\">Login</NavLink>}\n                        {user && <NavLink to=\"/users/profile\" className=\"nav-link\">Profile</NavLink>}\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;\n",
    "import React, {useState, useContext, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {Link} from \"react-router-dom\";\nimport {extractDate} from \"../functions\";\n\nconst ContestList = () => {\n    const {contestActs, userActs} = useContext(SuperContext);\n    const [contestList, setContestList] = useState(contestActs.getList());\n\n    useEffect(() => {\n    contestActs.store.subscribe(() => {\n        setContestList(contestActs.getList());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    });}, []);\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writers</th>\n                    <th>Testers</th>\n                    <th>Start</th>\n                    <th>End</th>\n                </tr>\n                </thead>\n                <tbody>\n                {contestList && contestList.map((contest) => <tr key={contest.id}>\n                    <td><Link to={`/contests/${contest.id}`}>{contest.title}</Link></td>\n                    <td>{contest.hosts.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p> )}</td>\n                    <td>{contest.testers.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p> )}</td>\n                    <td>{extractDate(contest.start_time)}</td>\n                    <td>{extractDate(contest.end_time)}</td>\n                </tr>)\n                }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default ContestList;",
    "import React, {useContext, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SuperContext} from \"../../app\";\n\nconst ProblemList = ({match}) => {\n    const {contestId} = match.params;\n    const {problemActs, userActs} = useContext(SuperContext);\n    const [problems, setProblems] = useState(problemActs.getList(contestId));\n\n    let unSubscribe = problemActs.store.subscribe(() => {\n        setProblems(problemActs.getList(contestId));\n        unSubscribe();\n    });\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writer</th>\n                </tr>\n                </thead>\n                <tbody>\n                {problems.map((problem) => <tr key={problem.id}>\n                    <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                    <td>{userActs.fullName(problem.by)}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default ProblemList;",
    "import React, {useContext, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SuperContext} from \"../../app\";\n\nconst TutorialList = ({match}) => {\n    const {contestId} = match.params;\n    const {tutorialActs, userActs} = useContext(SuperContext);\n    const [tutorials, setTutorials] = useState(tutorialActs.getList(contestId));\n\n    let unSubscribe = tutorialActs.store.subscribe(() => {\n        setTutorials(tutorialActs.getList(contestId));\n        unSubscribe();\n    });\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writer</th>\n                </tr>\n                </thead>\n                <tbody>\n                {tutorials.map((tutorial) => <tr key={tutorial.id}>\n                    <td><Link to={`/tutorials/${tutorial.id}`}>{tutorial.title}</Link></td>\n                    <td>{userActs.fullName(tutorial.by)}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default TutorialList;",
    "import React, {Component} from 'react';\nimport moment from \"moment\";\nimport {Link} from \"react-router-dom\";\nimport {css} from \"../configuration\";\n\nexport const createTitle = (title, link, className = \"h1\") => {\n    return link ? <Link to={link}>\n        <div className={className + css.center}>{title}</div>\n    </Link> : <div className={className + css.center}>{title}</div>\n};\n\nexport const createLeft = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"\"}) => {\n    return <div className={\"col \" + constClass}> {constText}\n        <span className={textListClass}>{textList.join(\"\\n\")}</span>\n    </div>\n};\n\nexport const createRight = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"text-dark\", hidePhone = true}) => {\n    return <div className={\"col\" + css.alignRight}>\n            <span className={(hidePhone && css.hideOnPhone)}> {constText}\n                <span className={textListClass}>{textList.join(\"\\n\")}</span>\n            </span>\n    </div>\n};\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}\n\nconst formatHtml = (text) => {\n    if (text) {\n        return {__html: `${text}`}\n    }\n    return {__html: \"<span />\"}\n}\n\nexport const FormattedHtml = ({text}) => <div dangerouslySetInnerHTML={formatHtml(text)}/>\n\nclass ObjectView extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default ObjectView;",
    "import React, {useContext, useState} from 'react';\nimport {SuperContext} from \"../../app\";\nimport ProblemList from \"../problem/problemList\";\nimport Countdown from \"react-countdown\";\nimport TutorialList from \"../tutorial/tutorialList\";\nimport {Link} from \"react-router-dom\";\nimport {FormattedHtml} from \"../../common/objectViewFuncs\";\n\nconst Contest = ({match}) => {\n    const {contestId} = match.params;\n    const {contestActs, userActs} = useContext(SuperContext);\n    const [contest, setContest] = useState(contestActs.getById(contestId));\n    const [reload, setReload] = useState(false);\n\n    const forceReload = () => {\n        setReload(!reload);\n    }\n\n    let unSubscribe = contestActs.store.subscribe(() => {\n        setContest(contestActs.getById(contestId));\n        setReload(!reload);\n        unSubscribe();\n    })\n\n    const contestStart = new Date((contest && contest.start_time) || Date.now().toLocaleString());\n    const contestEnd = new Date((contest && contest.end_time) || Date.now().toLocaleString());\n\n    return (\n        <div className=\"container\">\n            {contest && <div>\n                <p className=\"text-success display-4\">{contest.title}</p>\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                    <th>Contest Writers</th>\n                    <th>Contest Testers</th>\n                    </thead>\n                    <tbody>\n                    <td>{contest.hosts.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p>)}</td>\n                    <td>{contest.testers.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p>)}</td>\n                    </tbody>\n                </table>\n                {contest.text && <div>\n                    <h2>About contest</h2>\n                    <div className=\"bgAliceBlue\">\n                        <FormattedHtml text={contest.text}/>\n                    </div>\n                    <br/>\n                </div>}\n                <Link to={`/contests/standing/${contestId}`}>\n                    <button className=\"btn-lg btn-outline-success\">Standing</button>\n                </Link>\n            </div>}\n            {contestStart > Date.now() && <div className=\"container\">\n                <Countdown date={contest.start_time} className=\"display-4\" onComplete={forceReload}/>\n            </div>}\n\n            {contestStart <= Date.now() && <div>\n                <h2>Problems</h2>\n                <ProblemList match={match}/>\n            </div>}\n\n\n            {contestEnd <= Date.now() && <div>\n                <h2>Tutorials</h2>\n                <TutorialList match={match}/>\n            </div>}\n        </div>\n    );\n};\n\nexport default Contest;",
    "import React, {useContext, useEffect, useState} from 'react';\nimport http from \"../../common/httpService\";\nimport {SuperContext} from \"../../app\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst url = apiEndpoint\n\nconst Standing = ({match}) => {\n    const {contestActs, userActs} = useContext(SuperContext);\n    const {contestId} = match.params;\n    const [duringContest, setDuringContest] = useState([]);\n    const [afterContest, setAfterContest] = useState([]);\n    useEffect(() => {\n        const apiCall = async () => {\n            contestActs.start(); // Start Load animation\n            const data = await http.get(`${url}/standing/${contestId}`)\n            contestActs.failure(); // Stop Load animation\n            setDuringContest(data.data.during);\n            setAfterContest(data.data.after);\n        }\n        apiCall();\n\n    }, [contestId])\n    let position = 1;\n\n    return (\n        <div className=\"container\">\n            <h2>During Contest</h2>\n            {renderStanding(duringContest, userActs, position)}\n            <h2>After Contest</h2>\n            {renderStanding(afterContest, userActs, position)}\n        </div>\n    );\n};\n\nexport default Standing;\n\nconst renderStanding = (objectList, userActs, position = 1) =>\n    <table className=\"table table-bordered table-striped\">\n        <thead>\n        <tr>\n            <th>Position</th>\n            <th>User</th>\n            <th>Solves</th>\n            <th>Penalty</th>\n        </tr>\n        </thead>\n        <tbody>\n        {objectList.map(item => <tr key={position}>\n            <td>{position++}</td>\n            <td>{userActs.fullName(item[0])}</td>\n            <td>{item[1]}</td>\n            <td>{Math.floor(parseFloat(item[2]) / 100)}</td>\n        </tr>)}\n        </tbody>\n\n    </table>\n",
    "import React from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport {projectURLS} from \"../../configuration\";\nimport ContestList from \"./contestList\";\nimport Contest from \"./contest\";\nimport Standing from \"./standing\";\n\nconst ContestRoute = () => {\n    return <Switch>\n        <Route path=\"/contests/standing/:contestId\" component={Standing} />\n        <Route path=\"/contests/:contestId\" component={Contest} />\n        <Route path={projectURLS.contests} component={ContestList} />\n    </Switch>\n};\n\nexport default ContestRoute;",
    "import React, {useContext, useEffect, useState} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {firebaseLoginImplement, loginWithPassword} from \"../../common/authService\";\n\nconst Login = ({history}) => {\n    const {userActs} = useContext(SuperContext);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.innerText = firebaseLoginImplement(history);\n        document.body.appendChild(script);\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, []);\n\n    const handleInputChange = ({currentTarget}) => {\n        if (currentTarget.name === 'username') setUsername(currentTarget.value);\n        if (currentTarget.name === 'password') setPassword(currentTarget.value);\n    }\n\n    return (\n        <div>\n            <div onClick={userActs.start}>\n                <div id=\"firebaseui-auth-container\" className=\"pt-5\"/>\n            </div>\n            <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                <button className=\"btn btn-danger\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\"\n                        aria-expanded=\"false\" aria-controls=\"collapseExample\" style={{width: \"220px\"}}>\n                    Password Login\n                </button>\n            </div>\n            <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                <div className=\"collapse\" id=\"collapseExample\" style={{width: \"220px\"}}>\n                    <input type=\"text\" value={username} name=\"username\" onChange={handleInputChange}/>\n                    <input type=\"password\" value={password} name=\"password\" onChange={handleInputChange}/>\n                    <button className=\"btn btn-success\" onClick={() => loginWithPassword(username, password)}>Sign In\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n",
    "import React, {useContext, useState, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\n\nconst UserList = () => {\n    const {userActs} = useContext(SuperContext);\n    const [users, setUsers] = useState(userActs.getList());\n    useEffect(() => {\n        userActs.store.subscribe(() => {\n            setUsers(userActs.getList());\n        })\n    });\n    return (\n        <div className=\"container\">\n            <table className=\"table table-dark table-bordered\">\n                <thead>\n                <tr>\n                    <th>User id</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                </tr>\n                </thead>\n                <tbody>\n                {users.map((user) => <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.first_name}</td>\n                    <td>{user.last_name}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UserList;",
    "import React, {useContext, useEffect, useState} from 'react';\nimport http from \"../../common/httpService\";\nimport {SuperContext} from \"../../app\";\nimport {Link} from \"react-router-dom\";\nimport {logout} from \"../../common/authService\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst Profile = () => {\n    const {problemActs} = useContext(SuperContext);\n    const [userProbList, setUserProbList] = useState([]);\n    const [userSubmissionList, setUserSubmissionList] = useState([]);\n    const [userContest, setUserContest] = useState([]);\n    const [testProblem, setTestProblem] = useState([]);\n\n    useEffect(() => {\n        const apiCall = async () => {\n            problemActs.start(); // Start Load animation\n            const userProblemData = await http.get(`${apiEndpoint}/problems/user_problems/`);\n            const userSubmissionData = await http.get(`${apiEndpoint}/submissions/user_submissions/`);\n            const userContestData = await http.get(`${apiEndpoint}/contests/user_contests/`);\n            const testProblemData = await http.get(`${apiEndpoint}/problems/test_problems/`);\n            problemActs.failure(); // Stop Load animation\n            setUserProbList(userProblemData.data.results);\n            setUserSubmissionList(userSubmissionData.data.results);\n            setUserContest(userContestData.data.results);\n            setTestProblem(testProblemData.data.results);\n        }\n        apiCall();\n        // eslint-disable-next-line\n    }, [])\n    return (\n        <div className=\"container pt-5\">\n            <button className=\"btn btn-danger\" onClick={() => logout('/')}>Logout</button>\n            <div className=\"row\">\n                <div className=\"col-sm\">\n                    <b>Contest set by you</b>\n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th/>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userContest.map(contest => <tr key={contest.id}>\n                            <td><Link to={`/contests/${contest.id}`}>{contest.title}</Link></td>\n                            <td><Link to={`/problems/add/${contest.id}`} className=\"btn-sm btn-success\">Add\n                                problem</Link></td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"col-sm\">\n                    <b>Testable problem for you</b>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Contest</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {testProblem.map(problem => <tr key={problem.id}>\n                            <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                            <td>{problem.contest}</td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm\">\n                    <b>Last 20 Problem set by you</b>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Contest</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userProbList.map(problem => <tr key={problem.id}>\n                            <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                            <td>{problem.contest}</td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"col-sm\">\n                    <b>Last 20 submissions by you</b>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Contest</th>\n                            <th>Problem</th>\n                            <th>Verdict</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userSubmissionList.map(submission => <tr key={submission.id}>\n                            <td>{submission.contest}</td>\n                            <td>{submission.problem}</td>\n                            <td><Link to={`/submissions/${submission.id}`}>{submission.verdict}</Link></td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;",
    "import React from 'react';\nimport {apiEndpoint} from \"../../configuration\";\nimport httpService from \"../../common/httpService\";\nimport Modal from \"react-modal\";\n\nconst LoginServe = () => {\n    const communicateWithServer = async () => {\n        const firebase = window.firebase;\n        const idToken = await firebase.auth().currentUser.getIdToken(true);\n        const response = await httpService.post(apiEndpoint + '/login/', {idToken});\n        localStorage.setItem(\"token\", response.data.jwt);\n        window.location = \"/\";\n    }\n    communicateWithServer();\n\n\n    return (\n        <div>\n            <h3>Checking credentials</h3>\n            <Modal isOpen={true} className=\"Modal\">\n                <div className=\"loader align-middle\"/>\n            </Modal>\n        </div>\n    );\n};\n\nexport default LoginServe;",
    "import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Login from \"./login\";\nimport {projectURLS} from \"../../configuration\";\nimport UserList from \"./userList\";\nimport Profile from \"./profile\";\nimport LoginServe from \"./loginServe\";\n\nconst UserRoute = () => {\n    return (\n        <Switch>\n            <Route path={projectURLS.login} component={Login} />\n            <Route path=\"/users/profile\" component={Profile} />\n            <Route path=\"/users/list\" component={UserList}/>\n            <Route path=\"/users/loginServe\" component={LoginServe}/>\n        </Switch>\n    );\n};\n\nexport default UserRoute;",
    "import React, {useEffect} from 'react';\n\nconst CodeEditor = ({mode, theme, font, name, value, label, onChange}) => {\n    const handleChange = (content) => {\n        const obj = {currentTarget: {name: name, value: content}}\n        onChange(obj)\n    }\n\n    const editorScript = () => {\n        const ace = window.ace;\n        const editor = ace.edit(name);\n        editor.session.setMode(\"ace/mode/\" + mode);\n        editor.setTheme(\"ace/theme/\" + theme);\n        editor.getSession().setUseWorker(true);\n        editor.setValue(value);\n        editor.clearSelection();\n        editor.setOptions({\n            enableBasicAutocompletion: true,\n            enableSnippets: true,\n            enableLiveAutocompletion: true\n        });\n        editor.setFontSize(font + \"px\");\n        editor.commands.addCommand({\n            name: \"showKeyboardShortcuts\",\n            bindKey: {win: \"Ctrl-h\", mac: \"Command-Alt-h\"},\n            exec: function (editor) {\n                ace.config.loadModule(\"ace/ext/keybinding_menu\", function (module) {\n                    module.init(editor);\n                    editor.showKeyboardShortcuts()\n                })\n            }\n        });\n\n        editor.getSession().on(\"change\", function () {\n            handleChange(editor.getSession().getValue());\n        });\n    }\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n\n        script.innerText = editorScript();\n        document.body.appendChild(script);\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, [font, mode, name, theme]);\n\n    return (\n        <React.Fragment>\n            <label htmlFor={name}><h3>{label}</h3></label>\n            <div id={name} style={{height: \"300px\", width: \"100%\"}}/>\n        </React.Fragment>\n    )\n}\n\nexport default CodeEditor;",
    "import React, {useContext, useState} from 'react';\nimport httpService from \"../httpService\";\nimport {SuperContext} from \"../../app\";\nimport {getCurrentUser} from \"../authService\";\nimport CodeEditor from \"./codeEditor\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst ProblemCode = ({problem, history}) => {\n    const {submissionActs} = useContext(SuperContext)\n    const [code, setCode] = useState('');\n    const [language, setLanguage] = useState('python');\n    const [theme, setTheme] = useState('chrome');\n    const [font, setFont] = useState(15);\n\n    const user = getCurrentUser();\n\n    const handleChange = ({currentTarget}) => {\n        const {name, value} = currentTarget;\n        if (name === 'language') {\n            if (value === \"c_cpp\" && code === '') {\n                setCode(\"#include<bits/stdc++.h>\\n#define ll long long\\nusing namespace std;\\nint main() {\\n\\t\\n}\")\n            }\n            setLanguage(value);\n        } else if (name === problem.id) setCode(value);\n        else if (name === 'theme') setTheme(value);\n        else if (name === 'font') setFont(value);\n    };\n\n\n    const submit = async () => {\n        if (code.length < 10) {\n            alert(\"Your code is less than 10 character. If you're pasting code then please press space or any key after paste.\");\n            return;\n        }\n        if (language !== 'python' && language !== 'c_cpp') {\n            alert(\"Please choose correct language\");\n            return;\n        }\n        const data = {\n            code, language, problem: problem.id\n        }\n        submissionActs.start();\n        try {\n            const response = await httpService.post(apiEndpoint + '/submissions/', data)\n            submissionActs.failure();\n            history.push(`/submissions/${response.data.id}`)\n        } catch (error) {\n            submissionActs.failure();\n            if (error.response && error.response.status === 403) {\n                window.location.reload();\n            } else if(error.response) {\n                console.log(\"This is the error reason. Please send it to Mahmudul\", error.response);\n                alert(`Tell this to Mahmudul: code: ${error.response.status}`);\n            } else {\n                console.log(error);\n                alert(\"Couldn't submit. Sometimes server is causing this error. Check your console\");\n            }\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row pr-3 pl-3\">\n                <select className=\"custom-select col-4\" name=\"language\" onChange={handleChange}>\n                    <option value=\"python\">Python3</option>\n                    <option value=\"c_cpp\">C/C++</option>\n                </select>\n                <select className=\"custom-select col-4\" name=\"theme\" id=\"theme\" onChange={handleChange}>\n                    <option value=\"chrome\">White</option>\n                    <option value=\"gob\">Dark</option>\n                </select>\n                <select className=\"custom-select col-4\" name=\"font\" id=\"font\" onChange={handleChange}>\n                    <option value=\"15\">15px</option>\n                    <option value=\"12\">12px</option>\n                    <option value=\"18\">18px</option>\n                    <option value=\"20\">20px</option>\n                </select>\n            </div>\n            <CodeEditor mode={language} value={code} theme={theme} onChange={handleChange} name={problem.id}\n                        font={font}/>\n            {!user && <div className=\"alert alert-danger\">Please login to submit</div>}\n            <button disabled={!user} className=\"btn btn-success\" onClick={submit}>Submit</button>\n        </div>\n    );\n};\n\nexport default ProblemCode;",
    "import React, {useContext, useEffect, useState} from 'react';\nimport {FormattedHtml} from \"../../common/objectViewFuncs\";\nimport {SuperContext} from \"../../app\";\nimport ProblemCode from \"../../common/fields/problemCode\";\nimport {Link} from \"react-router-dom\";\nimport {getCurrentUser} from \"../../common/authService\";\n\nconst Problem = ({match, history}) => {\n    const {problemActs, userActs} = useContext(SuperContext);\n    const {problemId} = match.params;\n    const [problem, setProblem] = useState(problemActs.getById(problemId));\n    const [reload, setReload] = useState(false);\n\n    problemActs.store.subscribe(() => {\n        setProblem(problemActs.getById(problemId));\n        setReload(!reload);\n    });\n\n    const currentUser = getCurrentUser() && getCurrentUser().id;\n    const is_admin = getCurrentUser() && getCurrentUser().is_superuser;\n\n    useEffect(() => {\n        setProblem(problemActs.getById(problemId));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [problemId]);\n\n    return (\n        problem && <div className=\"container\">\n            {(currentUser === problem.by || is_admin) &&\n            <Link to={`/problems/edit/${problem.id}`}>\n                <button className=\"btn-lg btn-success\">Edit</button>\n            </Link>}\n            <div className=\"bgDarkBlue\">\n                <h1>{problem.title}</h1>\n                <h3>By <span className=\"user\">{userActs.fullName(problem.by)}</span></h3>\n            </div>\n            <div className=\"bgAliceBlue\">\n                <div className=\"alert alert-info\">{problem.notice}</div>\n                <h4>Problem statement</h4>\n                <FormattedHtml text={problem.text}/> <br/>\n                <h4>Input Terms</h4>\n                <FormattedHtml text={problem.inTerms}/> <br/>\n                <h4>Output Terms</h4>\n                <FormattedHtml text={problem.outTerms}/> <br/>\n            </div>\n            <table className=\"table table-bordered\">\n                <thead>\n                <tr>\n                    <th>Input</th>\n                    <th>Output</th>\n                </tr>\n                </thead>\n                <tbody>\n                {problem.test_cases.map(test => <tr key={Math.floor(Math.random() * 1000)}>\n                    <td>\n                        <pre>{test.input}</pre>\n                    </td>\n                    <td>\n                        <pre>{test.output}</pre>\n                    </td>\n                </tr>)}\n                </tbody>\n            </table>\n            <ProblemCode problem={problem} history={history}/>\n            <br/><br/>\n        </div>\n    );\n}\n\nexport default Problem;\n\n",
    "import React, {useEffect} from 'react';\n\nconst TextEditor = ({onChange, name = \"testEditor\", label = \"Hello editor\", value = \"\"}) => {\n    const Quill = window.Quill;\n\n    const handleChange = (content) => {\n        const obj = {currentTarget: {name: name, value: content}}\n        onChange(obj)\n    }\n\n    const imageHandler = (editor) => {\n        const range = editor.getSelection();\n        const value = prompt('please copy paste the image url here.');\n        if (value) {\n            editor.insertEmbed(range.index, 'image', value, Quill.sources.USER);\n        }\n    }\n\n    const editorScript = () => {\n        const editor = new Quill(\"#\" + name, {\n            'theme': 'snow', 'modules': {\n                'toolbar': {\n                    'container': [['bold', 'italic', 'underline', 'strike'],\n                        ['blockquote', 'code-block'], ['link', 'image'], [{'list': 'ordered'}, {'list': 'bullet'}],\n                        [{'script': 'sub'}, {'script': 'super'}], [{'header': [1, 2, 3, 4, 5, 6, false]}],\n                        [{'color': []}, {'background': []}], [{'align': []}]],\n                    handlers: {image: () => imageHandler(editor)}\n                }\n            }\n        });\n        editor.container.firstChild.innerHTML = value;\n        editor.on('text-change', () => {\n            handleChange(editor.container.firstChild.innerHTML);\n        });\n    }\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.innerText = editorScript();\n        document.body.appendChild(script);\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, []);\n\n    return (\n        <div>\n            <label htmlFor={name}><h3>{label}</h3></label>\n            <div id={name}/>\n        </div>\n    );\n};\n\nexport default TextEditor;",
    "import React, {Component} from 'react';\n\nclass Input extends Component {\n    state = {\n        value: this.props.value\n    }\n\n    render() {\n        let {name, label, error, type, onChange, placeholder} = this.props;\n        const changeMiddle = (data) => {\n            onChange(data);\n            this.setState({value: data.currentTarget.value})\n        }\n        return (\n            <div className=\"form-group\">\n                {label &&\n                <label htmlFor=\"{name}\"><h3>{label}</h3></label>\n                }\n                <input type={type} value={this.state.value} onChange={changeMiddle} id={name} name={name} className=\"form-control\"\n                       autoComplete=\"off\" placeholder={placeholder} />\n                <p><small/></p>\n                {error && <div className=\"alert alert-danger\">{error}</div>}\n            </div>\n        )\n    }\n}\n\nInput.defaultProps = {\n    type: \"text\",\n    placeholder: \"Input here\"\n}\n\nexport default Input;\n",
    "import React, {useContext, useState} from 'react';\nimport TextEditor from \"../../common/fields/TextEditor\";\nimport Input from \"../../common/fields/input\";\nimport {SuperContext} from \"../../app\";\nimport CodeEditor from \"../../common/fields/codeEditor\";\n\nconst ProblemForm = ({match, history}) => {\n    const {contestId, problemId} = match.params;\n    const {problemActs, contestActs} = useContext(SuperContext);\n    const [problem] = useState(problemActs.getById(problemId));\n    const [contest] = useState(contestActs.getById(contestId));\n\n    let data = {}\n    if (problem) {\n        data = {...problem}\n    } else {\n        data = {\n            contest_id: contestId,\n            inTerms: 'input Terms',\n            outTerms: 'output Terms',\n            text: 'statement',\n            title: 'problem title',\n            corCode: '',\n            conProbId: 'A',\n            notice: 'nothing',\n            time_limit: 1,\n            examples: 1\n        }\n    }\n\n\n    const setText = ({currentTarget}) => {\n        const {name, value} = currentTarget;\n        data[name] = value\n    }\n\n    const submit = () => {\n        if(problem) {\n            problemActs.edit(data);\n            history.push(`/problems/${problem.id}`);\n        } else {\n            problemActs.add(data);\n            history.push('/users/profile')\n        }\n    }\n\n    return (\n        <div className=\"container pt-5\">\n            {contest && <h1 className=\"text-info\">{contest.title}</h1>}\n            <Input label=\"Problem name\" name=\"title\" value={data['title']} onChange={setText}/>\n            <TextEditor label=\"Problem Statement\" name=\"text\" value={data['text']} onChange={setText}/>\n            <TextEditor label=\"Input Terms\" name=\"inTerms\" value={data['inTerms']} onChange={setText}/>\n            <TextEditor label=\"Output Terms\" name=\"outTerms\" value={data['outTerms']} onChange={setText}/>\n            <Input label=\"Problem id\" placeholder='A' name=\"conProbId\" value={data['conProbId']} onChange={setText}/>\n            <CodeEditor mode=\"c_cpp\" value={data['corCode']} theme=\"chrome\" onChange={setText}\n                        name=\"corCode\" font={20} />\n            <div className=\"bg-light\">\n                <h3 className=\"text-info\">Everything below are optional. You don't need to change.</h3>\n                <TextEditor label=\"Notice\" name=\"notice\" value={data['notice']} onChange={setText}/>\n                <Input label=\"Time Limit\" name=\"time_limit\" value={data['time_limit']} type=\"number\"\n                       onChange={setText}/>\n                <Input label=\"Number of example\" name=\"examples\" value={data['examples']} type=\"number\"\n                       onChange={setText}/>\n            </div>\n            <button className=\"btn-lg btn-success\" onClick={submit}>Submit</button>\n            <br/><br/><br/>\n        </div>\n    );\n};\n\nexport default ProblemForm;",
    "import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport ProblemList from \"./problemList\";\nimport Problem from \"./problem\";\nimport ProblemForm from \"./problemForm\";\n\nconst ProblemRoute = () => {\n    return (\n        <Switch>\n            <Route path=\"/problems/contestId=:contestId\" component={ProblemList}/>\n            <Route path=\"/problems/add/:contestId\" component={ProblemForm} />\n            <Route path=\"/problems/edit/:problemId\" component={ProblemForm} />\n            <Route path={'/problems/:problemId'} component={Problem}/>\n        </Switch>\n    );\n};\n\nexport default ProblemRoute;",
    "import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-modal\";\nimport {SuperContext} from \"../app\";\n\nconst LoadingAnimation = () => {\n    const {userActs} = useContext(SuperContext);\n    const store = userActs.store;\n    const [problem, setProblem] = useState(!!store.getState().problems.loading)\n    const [user, setUser] = useState(!!store.getState().users.loading)\n    const [contest, setContest] = useState(!!store.getState().contests.loading)\n    const [submission, setSubmission] = useState(!!store.getState().submissions.loading)\n\n\n    store.subscribe(() => {\n        setProblem(!!store.getState().problems.loading);\n        setUser(!!store.getState().users.loading);\n        setContest(!!store.getState().contests.loading);\n        setSubmission(!!store.getState().submissions.loading);\n    });\n\n    useEffect(() => {\n        Modal.setAppElement('body');\n    }, []);\n\n    const isLoading = problem || user || contest || submission;\n\n    return <Modal isOpen={isLoading} className=\"Modal\">\n        <div className=\"loader align-middle\"/>\n    </Modal>\n}\n\nexport default LoadingAnimation;\n",
    "import React, {useContext, useEffect, useState} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {Link} from \"react-router-dom\";\n\nconst SubmissionList = ({match}) => {\n    const page = parseInt(match.params.page) || 1;\n    const {submissionActs, userActs} = useContext(SuperContext);\n    const [submissionList, setSubmissionList] = useState(submissionActs.getList(page));\n    const [reload, setReload] = useState(false);\n\n    let unSubscribe = submissionActs.store.subscribe(() => {\n        setSubmissionList(submissionActs.getList(page));\n        unSubscribe();\n        setReload(!reload);\n    });\n\n    useEffect(() => {\n        setSubmissionList(submissionActs.getList(page));\n        // eslint-disable-next-line\n    }, [page])\n\n    const pages = submissionActs.totalPages();\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Problem</th>\n                    <th>Verdict</th>\n                    <th>By</th>\n                </tr>\n                </thead>\n                <tbody>\n                {submissionList.map((submission) => <tr key={submission.id}>\n                    <td><Link to={`/submissions/${submission.id}`}>{submission.problem_title}</Link></td>\n                    <td>{submission.verdict}</td>\n                    <td>{userActs.firstName(submission.by)}</td></tr>)}\n                </tbody>\n            </table>\n            {pagination('/submissions/page=', pages, page)}\n        </div>\n    );\n};\n\nexport default SubmissionList;\n\nexport const pagination = (url, pages=1, page=1) => {\n    let pageList = []\n    if(page > 2) {\n        for(let i = page - 2; i <= pages && i <= page + 2; i++) pageList.push(i);\n    } else {\n        for(let i = 1; i <= pages && i <= 5; i++) pageList.push(i);\n    }\n    return <ul className=\"pagination\">\n        {pageList.map(page => <li key={page} className=\"page-item\">\n            <Link className=\"page-link\" to={url + page.toString()} >{page}</Link>\n        </li>)}\n    </ul>\n}\n",
    "import React, {useContext, useState} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {getCurrentUser} from \"../../common/authService\";\n\nconst Submission = ({match}) => {\n    const {submissionId} = match.params;\n    const {submissionActs, userActs, contestActs, problemActs} = useContext(SuperContext);\n    const [submission, setSubmission] = useState(submissionActs.getById(submissionId));\n    const [contest, setContest] = useState(contestActs.getById(submission && submission.contest))\n    const [reload, setReload] = useState(false);\n\n    let unSubscribe = submissionActs.store.subscribe(() => {\n        setSubmission(submissionActs.getById(submissionId));\n        setContest(contestActs.getById(submission && submission.contest))\n        unSubscribe();\n        setReload(!reload);\n    })\n\n    const contestEnd = new Date((contest && contest.end_time) || Date.now().toLocaleString());\n    const currentUser = getCurrentUser() && getCurrentUser().id;\n\n    return (\n        <div className=\"container\">\n            {submission && <div>\n                <div><h5>Submitter: {userActs.fullName(submission.by)}</h5></div>\n                <div><h5>Contest: {contestActs.getById(submission.contest, 'title')}</h5></div>\n                <div><h5>Problem: {problemActs.getById(submission.problem, 'title')}</h5></div>\n                <div><h5 className=\"text-nowrap\">Verdict: {verdictProcess(submission.verdict)}</h5></div>\n                {contest && <div>\n                {(contestEnd <= Date.now() || submission.by === currentUser) && <span>\n                <div><h5>Your Code:</h5>\n                    <pre className=\"bg-light text-primary\">{submission.code}</pre>\n                </div>\n                    {renderResult(submission.details, submission.verdict)}\n                </span>}\n                {(contestEnd > Date.now() && submission.by !== currentUser) &&\n                <h2 className=\"text-danger\">You can't see full info during contest</h2>\n                }\n                </div>}\n\n            </div>}\n        </div>\n    );\n};\n\nexport default Submission;\n\nconst renderResult = (result, verdict) => {\n    const data = JSON.parse(result);\n    if (!data) return;\n    return <div>\n        <div>\n            <h5>Message: <pre>{data[0]}</pre></h5>\n        </div>\n        {verdict !== 'CE' && <table className=\"table table-bordered table-responsive\">\n            <thead>\n            <tr>\n                <td>Input</td>\n                <td>Output</td>\n                <td>Correct Output</td>\n            </tr>\n            </thead>\n            <tbody>\n            {data[1].map((item) => <tr>\n                <td>\n                    <pre>{item[0]}</pre>\n                </td>\n                <td>\n                    <pre>{item[1]}</pre>\n                </td>\n                <td>\n                    <pre>{item[2]}</pre>\n                </td>\n            </tr>)}\n            </tbody>\n        </table>}\n    </div>\n}\n\nconst verdictProcess = verdict => {\n    if (verdict === 'AC') return <span className=\"text-success\">Accepted</span>\n    if (verdict === 'WA') return <span className=\"text-danger\">Wrong Answer</span>\n    if (verdict === 'CE') return <span className=\"text-danger\">Compilation Error</span>\n    if (verdict === 'TLE') return <span className=\"text-danger\">Time Limit Exceed</span>\n    if (verdict === 'PJ') return <span className=\"text-info\">Judging. May take upto minute</span>\n    if (verdict === 'FJ') return <span className=\"text-danger\">Failed. Judges are offline</span>\n    return <span>Unknown verdict</span>\n}",
    "import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport SubmissionList from \"./submissionList\";\nimport Submission from \"./submission\";\n\nconst SubmissionRoute = () => {\n    return (\n        <Switch>\n            <Route path=\"/submissions/page=:page\" component={SubmissionList} />\n            <Route path=\"/submissions/:submissionId\" component={Submission} />\n            <Route path=\"/submissions\" component={SubmissionList} />\n        </Switch>\n    );\n};\n\nexport default SubmissionRoute;",
    "import React, {useContext} from 'react';\nimport {SuperContext} from \"../app\";\n\nconst WebSocketReceive = () => {\n    const {ws, contestActs, problemActs, submissionActs, userActs, tutorialActs} = useContext(SuperContext);\n    ws.addEventListener('message', (e) => {\n        const data = JSON.parse(e.data).data;\n        if(data.target === 'contest') contest(contestActs, data);\n        if(data.target === 'problem') problem(problemActs, data);\n        if(data.target === 'submission') submission(submissionActs, data);\n        if(data.target === 'user') user(userActs, data);\n        if(data.target === 'tutorial') tutorial(tutorialActs, data);\n    });\n\n    return <span />\n};\n\nconst contest = (contestActs, data) => {\n    contestActs.update(data);\n}\n\nconst problem = (problemActs, data) => {\n    problemActs.update(data);\n}\n\nconst submission = (submissionActs, data) => {\n    submissionActs.update(data);\n}\n\nconst user = (userActs, data) => {\n    userActs.update(data);\n}\n\nconst tutorial = (tutorialActs, data) => {\n    tutorialActs.update(data);\n}\n\nexport default WebSocketReceive;",
    "import React, {useState, useContext, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {FormattedHtml} from \"../../common/objectViewFuncs\";\n\nconst Tutorial = ({match}) => {\n    const {tutorialActs, userActs} = useContext(SuperContext);\n    const {tutorialId} = match.params;\n    const [tutorial, setTutorial] = useState(tutorialActs.getById(tutorialId));\n    const [reload, setReload] = useState(false);\n\n    tutorialActs.store.subscribe(() => {\n        setTutorial(tutorialActs.getById(tutorialId));\n        setReload(!reload);\n    });\n\n    useEffect(() => {\n        setTutorial(tutorialActs.getById(tutorialId));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tutorialId]);\n\n    return (\n        <div>\n            {tutorial && <div className=\"container\">\n                <div className=\"bgDarkBlue\">\n                    <h1>{tutorial.title}</h1>\n                    <h3>By {userActs.fullName(tutorial.by)}</h3>\n                </div>\n                <div className=\"bgAliceBlue\">\n                    <FormattedHtml text={tutorial.text}/>\n                </div>\n            </div>}\n            {!tutorial && <h1>Loading</h1>}\n        </div>\n    );\n};\n\nexport default Tutorial;",
    "import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport Tutorial from \"./tutorial\";\nimport TutorialList from \"./tutorialList\";\n\nconst TutorialRoute = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/tutorials/contestId=:contestId\" component={TutorialList}/>\n                <Route path=\"/tutorials/:tutorialId\" component={Tutorial}/>\n            </Switch>\n        </div>\n    );\n};\n\nexport default TutorialRoute;",
    "import React, {useEffect} from 'react';\nimport storeFunc from \"./store/configureStore\";\nimport NavBar from \"./apps/navBar\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {apiEndpoint, projectURLS, wssURL} from \"./configuration\";\nimport ContestRoute from \"./apps/contest/contestRoute\";\nimport UserRoute from \"./apps/user/userRoute\";\nimport ProblemRoute from \"./apps/problem/problemRoute\";\nimport LoadingAnimation from \"./common/loadingAnimation\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\n\nimport {contestActions} from \"./store/data/contests\";\nimport {userActions} from \"./store/data/users\";\nimport {submissionActions} from \"./store/data/submissions\";\nimport {problemActions} from \"./store/data/problems\";\nimport {getJwt, logout} from \"./common/authService\";\nimport SubmissionRoute from \"./apps/submission/submissionRoute\";\nimport WebSocketReceive from \"./store/webSocketReceive\";\nimport httpService from \"./common/httpService\";\nimport {tutorialActions} from \"./store/data/tutorials\";\nimport TutorialRoute from \"./apps/tutorial/tutorialRoute\";\n\nexport const SuperContext = React.createContext();\n\nconst App = () => {\n    const data = generateData();\n\n    useEffect(() => {\n        data.userActs.loadUsers();\n        if(getJwt()) {\n            httpService.get(apiEndpoint + '/login_check/').then(({data}) => {\n                if (!data.status) {\n                    logout();\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <SuperContext.Provider value={data}>\n            <div>\n                <LoadingAnimation />\n                <NavBar/>\n                <WebSocketReceive />\n                <Switch>\n                    <Route path={projectURLS.contests} component={ContestRoute}/>\n                    <Route path={projectURLS.problems} component={ProblemRoute}/>\n                    <Route path={projectURLS.submissions} component={SubmissionRoute} />\n                    <Route path={projectURLS.tutorials} component={TutorialRoute} />\n                    <Route path={projectURLS.user} component={UserRoute}/>\n                </Switch>\n            </div>\n        </SuperContext.Provider>\n    );\n};\n\nexport default App;\n\n\nconst generateData = () => {\n    const store = storeFunc();\n    const jwt = getJwt();\n    const ws = new ReconnectingWebSocket(`${wssURL()}/?jwt=${jwt || 'hello'}`, '', {\n        maxReconnectionDelay: 60000,\n        minReconnectionDelay: 500,\n    });\n\n    const contestActs = new contestActions(store, ws);\n    const userActs = new userActions(store, ws);\n    const submissionActs = new submissionActions(store, ws);\n    const problemActs = new problemActions(store, ws);\n    const tutorialActs = new tutorialActions(store, ws);\n    return {\n        contestActs: contestActs,\n        userActs: userActs,\n        submissionActs: submissionActs,\n        problemActs: problemActs,\n        tutorialActs: tutorialActs,\n        store: store, ws: ws\n    }\n}\n",
    "import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport api from \"./api\";\n\nexport default function storeFunc() {\n    return configureStore({reducer,\n    middleware: [...getDefaultMiddleware(),\n        api\n    ]});\n}\n",
    "import ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport './common/cssLibrary.css';\nimport App from \"./app\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"
  ],
  "sourceRoot": ""
}