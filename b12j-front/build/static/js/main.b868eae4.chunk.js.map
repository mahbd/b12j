{"version":3,"sources":["common/httpService.jsx","configuration.js","common/authService.jsx","store/api.js","store/basicReducerTemplate.js","apps/functions.js","store/data/contests.js","store/data/problems.js","store/data/users.js","store/data/submissions.js","store/data/tutorials.js","store/reducer.js","apps/navBar.jsx","common/objectViewFuncs.jsx","common/fields/input.jsx","common/loadingAnimation.jsx","store/webSocketReceive.jsx","app.js","store/configureStore.js","index.js"],"names":["axios","defaults","headers","common","getJwt","interceptors","response","use","error","status","console","log","alert","Promise","reject","get","post","put","delete","apiEndpoint","document","domain","location","protocol","host","projectURLS","contests","submissions","standing","problems","tutorials","chat","cf","cfProblems","cfStatics","users","login","register","logout","redirectURL","localStorage","removeItem","window","getCurrentUser","jwt","getItem","jwtDecode","apiCallBegan","createAction","apiCallFailed","api","dispatch","next","action","a","type","payload","url","method","data","onSuccess","onError","onStart","onFailed","request","baseURL","message","basicReducers","name","state","list","push","id","dict","loading","results","i","length","receivedWithPagination","page","nextUrl","nextURL","offset","parse","Math","ceil","getPageNumberFromLink","count","fetched","parseInt","total","basicActions","slice","store","ws","requestedIdQueue","start","requested","failure","requestFailed","_load","received","_loadById","indexOf","toSend","send","JSON","stringify","add","edit","update","updated","getById","key","getState","actions","this","added","objList","createSlice","initialState","reducers","contestsReceived","contestActions","_loadContest","getList","problemsReceived","contestId","contest","problemActions","_loadProblems","probId","info","loggedIn","loggedOut","userActions","loadUsers","firstName","fullName","currentUser","addUserToStore","submissionsReceived","submissionUpdated","updatedWithPagination","submissionActions","_loadSubmission","submissionDetails","submission","details","totalPages","tutorialsReceived","tutorialActions","_loadTutorials","dictKey","combineReducers","NavBar","user","useContext","SuperContext","userActs","className","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","Component","Input","value","props","label","onChange","placeholder","htmlFor","setState","currentTarget","autoComplete","defaultProps","LoadingAnimation","useState","problem","setProblem","setUser","setContest","setSubmission","subscribe","useEffect","Modal","setAppElement","isLoading","isOpen","contestActs","problemActs","submissionActs","tutorial","tutorialActs","WebSocketReceive","addEventListener","e","target","React","createContext","App","generateData","httpService","then","Provider","configureStore","reducer","middleware","getDefaultMiddleware","ReconnectingWebSocket","wssURL","maxReconnectionDelay","minReconnectionDelay","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b868eae4.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {getJwt} from \"./authService\";\n\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\naxios.interceptors.response.use(null, error => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n\n    if(!expectedError) {\n        console.log(\"Logging the error\", error);\n        alert(\"An unexpected error.\");\n    }\n\n    return Promise.reject(error);\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};","export const css = {\n    navBar: \" navbar-dark font-weight-bold bgDarkBlue \",\n    navSuccessButton: ' btn btn-outline-success ',\n    center: \" d-flex justify-content-center \",\n    alignRight: \" d-flex flex-row-reverse \",\n    hideOnPhone: \" d-none d-lg-block d-xl-block \",\n    username: \" nobr text-danger font-weight-bold \",\n};\n\nexport const minRefreshTime = 60;\nexport const jwtTokenKey = \"token\";\n\nconst apiURL = () => {\n    if (document.domain === \"localhost\") return \"http://127.0.0.1:8000/api\";\n    else return document.location.protocol + \"//\" + document.location.host + \"/api\"\n}\n\nexport const apiEndpoint = apiURL();\n\nexport const wssURL = () => {\n    const protocol = document.location.protocol === \"https:\" ? \"wss://\" : \"ws://\";\n    if (document.domain === \"localhost\") return protocol + \"127.0.0.1:8000/ws\";\n    return protocol + document.location.host + \"/ws\";\n}\n\nexport const projectURLS = {\n    contests: '/contests',\n    submissions: '/submissions',\n    standing: '/contests/standing',\n    problems: '/problems',\n    tutorials: '/tutorials',\n    chat: '/chat',\n    cf: '/cf',\n    cfProblems: 'cf/problems',\n    cfStatics: 'cf/statics',\n    users: '/users',\n    login: '/users/login',\n    register: '/users/register',\n    logout: '/users/logout',\n};\n\nexport const navBar = {\n    menuLeft: [\n        {\n            label: 'Home',\n            link: '/',\n        },\n        {\n            label: 'Bulletin',\n            link: '/bulletin',\n        }\n        ,\n        {\n            label: 'Chat',\n            link: projectURLS.chat,\n        },\n        {\n            label: 'Contests',\n            link: projectURLS.contests,\n            sub: [\n                {\n                    label: 'Contest List',\n                    link: projectURLS.contests,\n                },\n                {\n                    label: 'Submissions',\n                    link: projectURLS.submissions,\n                },\n                {\n                    label: 'Standing',\n                    link: projectURLS.standing,\n                },\n            ]\n        },\n        {\n            label: 'Tutorials',\n            link: projectURLS.tutorials,\n        },\n        {\n            label: 'Codeforces',\n            link: projectURLS.cf,\n            sub: [\n                {\n                    label: 'Problems',\n                    link: projectURLS.cfProblems\n                },\n                {\n                    label: 'Statics',\n                    link: projectURLS.cfStatics\n                }\n            ]\n        }\n    ],\n\n    menuRight: [\n        {\n            label: 'Login',\n            link: projectURLS.login,\n            // class: css.navSuccessButton,\n        },\n        {\n            label: 'Register',\n            link: projectURLS.register,\n            // class: css.navSuccessButton,\n        }\n    ]\n}\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyB9n-TJY1hy49WoECQH7fZXlxA7lKI2VH4\",\n    authDomain: \"b12j-mah.firebaseapp.com\",\n    databaseURL: \"https://b12j-mah.firebaseio.com\",\n    projectId: \"b12j-mah\",\n    storageBucket: \"b12j-mah.appspot.com\",\n    messagingSenderId: \"704405925886\",\n    appId: \"1:704405925886:web:2066da3c25584a7ed4daaf\",\n    measurementId: \"G-XE9M4QRX4J\"\n};\n","import jwtDecode from 'jwt-decode';\nimport httpService from \"./httpService\";\nimport {apiEndpoint, firebaseConfig} from \"../configuration\";\n\n\nexport function logout(redirectURL = '/') {\n    localStorage.removeItem(\"token\");\n    window.location = redirectURL\n}\n\nexport const firebaseLoginImplement = (history) => {\n    const firebaseui = window.firebaseui;\n    const firebase = window.firebase;\n    firebase.initializeApp(firebaseConfig);\n\n    const ui = new firebaseui.auth.AuthUI(firebase.auth());\n    const uiConfig = {\n        callbacks: {\n            signInSuccessWithAuthResult: () => {\n                history.push(\"/users/loginServe\");\n                return true;\n            },\n        },\n        signInFlow: 'popup',\n        // signInSuccessUrl: \"/users/loginServe\",\n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n            firebase.auth.GithubAuthProvider.PROVIDER_ID,\n        ],\n    };\n    ui.start('#firebaseui-auth-container', uiConfig);\n}\n\nexport const loginWithPassword = async (username, password) => {\n    httpService.post(apiEndpoint + '/login/', {username, password}).then(\n        response => {\n            localStorage.setItem(\"token\", response.data.jwt);\n            window.location = '/'\n        }\n    ).catch(\n        error => {\n            alert(error.response.data.errors);\n        }\n    )\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(\"token\");\n        return jwtDecode(jwt)\n    } catch {\n        return null;\n    }\n}\n\nexport function getJwt() {\n    return localStorage.getItem(\"token\")\n}\n","import axios from 'axios';\nimport {createAction} from \"@reduxjs/toolkit\";\nimport {getJwt} from \"../common/authService\";\nimport {apiEndpoint} from \"../configuration\";\n\nexport const apiCallBegan = createAction(\"api/callBegan\")\n// export const apiCallSuccess = createAction(\"api/callSuccess\")\nexport const apiCallFailed = createAction(\"api/callFailed\")\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\nconst api = ({dispatch}) => next => async action => {\n    if (action.type !== apiCallBegan.type) return next(action);\n    const {url, method, data, onSuccess, onError, onStart, onFailed} = action.payload;\n    if(onStart) {\n        dispatch({type: onStart})\n    }\n    next(action)\n    try {\n        const response = await axios.request({\n            baseURL: apiEndpoint,\n            url,\n            method,\n            data\n        });\n        if(onSuccess) {\n            dispatch({type: onSuccess, payload: response.data});\n        }\n    } catch (error) {\n        if(onFailed) dispatch({type: onFailed})\n        dispatch(apiCallFailed({payload:error.message}))\n        if(onError) dispatch({type: onError, payload: error.message})\n    }\n}\nexport default api;","import {apiCallBegan} from \"./api\";\nimport {projectURLS} from \"../configuration\";\nimport {getPageNumberFromLink} from \"../apps/functions\";\n\nexport const standardInitialState = () => {\n    return {\n        list: [],\n        dict: {},\n        fetched: [],\n        total: null,\n        loading: false,\n    }\n}\n\nexport const basicReducers = (name) => {\n    return {\n        [`${name}Added`]: (state, action) => {\n            state.list.push(action.payload.id);\n            state.dict[action.payload.id] = action.payload;\n            state.loading = false;\n        },\n\n        [`${name}Updated`]: (state, action) => {\n            if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n            else {\n                state.dict[action.payload.id] = action.payload;\n                state.list.push(action.payload)\n            }\n            state.loading = false;\n        },\n\n        [`${name}sReceived`]: (state, action) => {\n            const data = action.payload.results;\n            if (data) {\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                    state.list.push(data[i].id)\n                }\n            }\n            state.loading = false;\n        },\n\n        [`${name}Requested`]: (state) => {\n            state.loading = true;\n        },\n\n        [`${name}RequestFailed`]: (state) => {\n            state.loading = false;\n        }\n    }\n};\n\nexport const receivedWithPagination = (state, action) => {\n    let page;\n    state.loading = false;\n    const nextUrl = action.payload.next;\n    if (!nextUrl) page = Math.ceil(action.payload.count / 20)\n    else page = getPageNumberFromLink(nextUrl);\n    state.fetched.push(parseInt(page));\n    state.list[page] = []\n    state.dict[page] = {}\n    state.total = Math.ceil(action.payload.count / 20);\n    const data = action.payload.results;\n    for (let i = 0; i < data.length; i++) {\n        state.dict[data[i].id] = data[i];\n        state.list[page].push(data[i].id)\n    }\n}\n\nexport const updatedWithPagination = (state, action) => {\n    if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n    else {\n        state.dict[action.payload.id] = action.payload;\n        if(!state.list[1]) state.list[1] = []\n        state.list[1] = [action.payload.id, ...state.list[1]]\n    }\n    state.loading = false;\n}\n\nexport class basicActions {\n    constructor(slice, store, ws, name) {\n        const actions = slice.actions;\n        this.ws = ws;\n        this.store = store;\n        this.name = name;\n        this.added = actions[`${name}Added`];\n        this.requestFailed = actions[`${name}RequestFailed`];\n        this.requested = actions[`${name}Requested`];\n        this.received = actions[`${name}sReceived`];\n        this.updated = actions[`${name}Updated`];\n    }\n\n    requestedIdQueue = [];\n\n    start = () => {\n        this.store.dispatch({\n            type: this.requested.type\n        })\n    }\n\n    failure = () => {\n        this.store.dispatch({\n            type: this.requestFailed.type\n        })\n    };\n\n    _load = (url = projectURLS[`${this.name}s`] + '/') => {\n        this.store.dispatch(apiCallBegan({\n            url: url,\n            onStart: this.requested.type,\n            onSuccess: this.received.type,\n            onFailed: this.requestFailed.type,\n        }));\n    };\n\n    _loadById = (id) => {\n        if (this.requestedIdQueue.indexOf(id) === -1) {\n            this.requestedIdQueue.push(id);\n            const toSend = {\"method\": \"GET\", \"target\": this.name, \"id\": id}\n            this.ws.send(JSON.stringify(toSend));\n            this.start();\n        }\n    };\n\n    add = (data) => {\n        const toSend = {\"method\": \"POST\", \"target\": this.name, \"data\": data};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    edit = (data) => {\n        const toSend = {\"method\": \"PUT\", \"target\": this.name, \"id\": data.id, \"data\": data};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    list(objList = []) {\n        if (!objList) return;\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        let data = []\n        for (let i = 0; i < objList.length; i++) {\n            data.push(dict[objList[i]]);\n        }\n        return data;\n    }\n\n    update = (data) => {\n        this.store.dispatch({type: this.updated.type, payload: data})\n    }\n\n    getById = (id, key = null) => {\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        if (key) {\n            if (dict[id]) return dict[id][key];\n            else if (id) this._loadById(id);\n        } else if (dict[id]) return dict[id]\n        if (id) this._loadById(id);\n        return null;\n    }\n}\n","import moment from \"moment\";\nimport {parse} from \"query-string\";\n\nexport const getPageNumberFromLink = (nextURL) => {\n    const parsed = parse(nextURL);\n    const offset = parsed.offset\n    const limit = 20\n    return Math.ceil(offset / limit)\n}\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}","import {basicActions, basicReducers, receivedWithPagination, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'contest';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        contestsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n    },\n});\n\nexport default slice.reducer;\n\nexport class contestActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadContest = (page=1) => {\n        const contests = this.store.getState().contests;\n        if (contests.fetched.indexOf(page) !== -1 || contests.loading) return;\n        if(page < 1 || (contests.total && page > contests.total)) {\n            alert(\"Wrong page\");\n        }\n\n        this._load(`/contests/?limit=20&offset=${(page - 1)*20}`)\n    };\n\n    getList = (page=1) => {\n        this._loadContest(page);\n        return this.list(this.store.getState().contests.list[page]);\n    }\n}","import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'problem';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        problemsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No Problems for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\nexport default slice.reducer;\n\nexport class problemActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadProblems = (contestId) => {\n        const problems = this.store.getState().problems;\n        if(problems.fetched.indexOf(contestId) !== -1 || problems.loading) return ;\n        this._load(`/problems/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadProblems(contestId);\n        let list = [];\n        const dict = this.store.getState().problems.dict;\n        for(let probId in dict) {\n            if(dict[probId].contest === contestId) {\n                list.push(dict[probId]);\n            }\n        }\n        return list;\n    }\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\nimport {getCurrentUser} from \"../../common/authService\";\nimport {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\n\nconst name = 'user'\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n        info: getCurrentUser(),\n    },\n    reducers: {\n        ...basicReducers(name),\n\n        loggedIn: (state, action) => {\n            state.info = action.payload;\n        },\n        loggedOut: state => {\n            state.info = null;\n        }\n    }\n});\n\nconst {loggedIn} = slice.actions;\nexport default slice.reducer;\n\nexport class userActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    };\n\n    loadUsers = () => {\n        this._load('/users/?limit=1000')\n    };\n\n    getList = () => this.list(this.store.getState().users.list);\n\n    firstName = (id) => {\n        return this.getById(id, 'first_name');\n    };\n\n    fullName = (id) => {\n        return this.getById(id, 'first_name') + ' ' + this.getById(id, 'last_name')\n    }\n\n    currentUser = () => {\n        return this.store.getState()[`${this.name}s`].info;\n    }\n\n    addUserToStore = () => {\n        this.store.dispatch({\n            type: loggedIn.type,\n            payload: getCurrentUser(),\n        })\n    };\n}\n","import {\n    basicActions,\n    basicReducers,\n    receivedWithPagination,\n    standardInitialState,\n    updatedWithPagination\n} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'submission';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n    },\n    reducers: {\n        ...basicReducers(name),\n        submissionsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n        submissionUpdated: (state, action) => {\n            updatedWithPagination(state, action);\n        }\n    }\n})\nexport default slice.reducer;\n\nexport class submissionActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadSubmission = (page = 1) => {\n        const submissions = this.store.getState().submissions;\n        if (submissions.fetched.indexOf(page) !== -1 || submissions.loading) return;\n        if (page < 1 || (submissions.total && page > submissions.total)) {\n            alert(\"Wrong page\");\n            return;\n        }\n        this._load(`/submissions/?limit=20&offset=${(page - 1) * 20}`)\n    };\n\n    getList = (page = 1) => {\n        this._loadSubmission(page);\n        return this.list(this.store.getState().submissions.list[page]);\n    }\n\n    submissionDetails = (id) => {\n        const submission = this.getById(id);\n        if (submission) {\n            if (!submission.details) this._loadById(id);\n            else return submission.details;\n        }\n        return null;\n    }\n\n    totalPages = () => {\n        return this.store.getState()[this.name + 's'].total;\n    }\n}\n","import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'tutorial';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        tutorialsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No tutorials for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\n\nexport default slice.reducer;\n\nexport class tutorialActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadTutorials = (contestId) => {\n        const tutorials = this.store.getState().tutorials;\n        if(tutorials.fetched.indexOf(contestId) !== -1 || tutorials.loading) return ;\n        this._load(`/tutorials/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadTutorials(contestId);\n        let list = [];\n        const dict = this.store.getState().tutorials.dict;\n        for(let dictKey in dict) {\n            if(dict[dictKey].contest === contestId) {\n                list.push(dict[dictKey]);\n            }\n        }\n        return list;\n    }\n}\n","import {combineReducers} from \"redux\";\nimport contests from './data/contests';\nimport problems from './data/problems';\nimport users from './data/users';\nimport submissions from './data/submissions';\nimport tutorials from \"./data/tutorials\";\n\n\nexport default combineReducers({\n    contests: contests,\n    problems: problems,\n    submissions: submissions,\n    users: users,\n    tutorials: tutorials,\n});\n","import React, {useContext} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {SuperContext} from \"../app\";\n\nconst NavBar = () => {\n    const {userActs} = useContext(SuperContext);\n    const user = userActs.currentUser();\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"/>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/contests\">Contests</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/submissions\">Submission</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        {!user && <NavLink to=\"/users/login\" className=\"nav-link\">Login</NavLink>}\n                        {user && <NavLink to=\"/users/profile\" className=\"nav-link\">Profile</NavLink>}\n                    </li>\n                </ul>\n            </div>\n        </nav>\n        // <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        //     <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n        //     <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n        //             data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n        //             aria-label=\"Toggle navigation\">\n        //         <span className=\"navbar-toggler-icon\"/>\n        //     </button>\n        //\n        //     <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        //         <ul className=\"navbar-nav mr-auto\">\n        //             <li className=\"nav-item active\">\n        //                 <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n        //             </li>\n        //             <li className=\"nav-item\">\n        //                 <a className=\"nav-link\" href=\"#\">Link</a>\n        //             </li>\n        //             <li className=\"nav-item dropdown\">\n        //                 <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\n        //                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n        //                     Dropdown\n        //                 </a>\n        //                 <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n        //                     <a className=\"dropdown-item\" href=\"#\">Action</a>\n        //                     <a className=\"dropdown-item\" href=\"#\">Another action</a>\n        //                     <div className=\"dropdown-divider\"/>\n        //                     <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n        //                 </div>\n        //             </li>\n        //             <li className=\"nav-item\">\n        //                 <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\n        //             </li>\n        //         </ul>\n        //         <form className=\"form-inline my-2 my-lg-0\">\n        //             <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        //                 <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        //         </form>\n        //     </div>\n        // </nav>\n    );\n}\n\nexport default NavBar;\n","import React, {Component} from 'react';\nimport moment from \"moment\";\nimport {Link} from \"react-router-dom\";\nimport {css} from \"../configuration\";\n\nexport const createTitle = (title, link, className = \"h1\") => {\n    return link ? <Link to={link}>\n        <div className={className + css.center}>{title}</div>\n    </Link> : <div className={className + css.center}>{title}</div>\n};\n\nexport const createLeft = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"\"}) => {\n    return <div className={\"col \" + constClass}> {constText}\n        <span className={textListClass}>{textList.join(\"\\n\")}</span>\n    </div>\n};\n\nexport const createRight = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"text-dark\", hidePhone = true}) => {\n    return <div className={\"col\" + css.alignRight}>\n            <span className={(hidePhone && css.hideOnPhone)}> {constText}\n                <span className={textListClass}>{textList.join(\"\\n\")}</span>\n            </span>\n    </div>\n};\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}\n\nconst formatHtml = (text) => {\n    if (text) {\n        return {__html: `${text}`}\n    }\n    return {__html: \"<span />\"}\n}\n\nexport const FormattedHtml = ({text}) => <div dangerouslySetInnerHTML={formatHtml(text)}/>\n\nclass ObjectView extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default ObjectView;","import React, {Component} from 'react';\n\nclass Input extends Component {\n    state = {\n        value: this.props.value\n    }\n\n    render() {\n        let {name, label, error, type, onChange, placeholder} = this.props;\n        const changeMiddle = (data) => {\n            onChange(data);\n            this.setState({value: data.currentTarget.value})\n        }\n        return (\n            <div className=\"form-group\">\n                {label &&\n                <label htmlFor=\"{name}\"><h3>{label}</h3></label>\n                }\n                <input type={type} value={this.state.value} onChange={changeMiddle} id={name} name={name} className=\"form-control\"\n                       autoComplete=\"off\" placeholder={placeholder} />\n                <p><small/></p>\n                {error && <div className=\"alert alert-danger\">{error}</div>}\n            </div>\n        )\n    }\n}\n\nInput.defaultProps = {\n    type: \"text\",\n    placeholder: \"Input here\"\n}\n\nexport default Input;\n","import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-modal\";\nimport {SuperContext} from \"../app\";\n\nconst LoadingAnimation = () => {\n    const {userActs} = useContext(SuperContext);\n    const store = userActs.store;\n    const [problem, setProblem] = useState(!!store.getState().problems.loading)\n    const [user, setUser] = useState(!!store.getState().users.loading)\n    const [contest, setContest] = useState(!!store.getState().contests.loading)\n    const [submission, setSubmission] = useState(!!store.getState().submissions.loading)\n\n\n    store.subscribe(() => {\n        setProblem(!!store.getState().problems.loading);\n        setUser(!!store.getState().users.loading);\n        setContest(!!store.getState().contests.loading);\n        setSubmission(!!store.getState().submissions.loading);\n    });\n\n    useEffect(() => {\n        Modal.setAppElement('body');\n    }, []);\n\n    const isLoading = problem || user || contest || submission;\n\n    return <Modal isOpen={isLoading} className=\"Modal\">\n        <div className=\"loader align-middle\"/>\n    </Modal>\n}\n\nexport default LoadingAnimation;\n","import React, {useContext} from 'react';\nimport {SuperContext} from \"../app\";\n\nconst WebSocketReceive = () => {\n    const {ws, contestActs, problemActs, submissionActs, userActs, tutorialActs} = useContext(SuperContext);\n    ws.addEventListener('message', (e) => {\n        const data = JSON.parse(e.data).data;\n        if(data.target === 'contest') contest(contestActs, data);\n        if(data.target === 'problem') problem(problemActs, data);\n        if(data.target === 'submission') submission(submissionActs, data);\n        if(data.target === 'user') user(userActs, data);\n        if(data.target === 'tutorial') tutorial(tutorialActs, data);\n    });\n\n    return <span />\n};\n\nconst contest = (contestActs, data) => {\n    contestActs.update(data);\n}\n\nconst problem = (problemActs, data) => {\n    problemActs.update(data);\n}\n\nconst submission = (submissionActs, data) => {\n    submissionActs.update(data);\n}\n\nconst user = (userActs, data) => {\n    userActs.update(data);\n}\n\nconst tutorial = (tutorialActs, data) => {\n    tutorialActs.update(data);\n}\n\nexport default WebSocketReceive;","import React, {useEffect} from 'react';\nimport storeFunc from \"./store/configureStore\";\nimport NavBar from \"./apps/navBar\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {apiEndpoint, projectURLS, wssURL} from \"./configuration\";\nimport ContestRoute from \"./apps/contest/contestRoute\";\nimport UserRoute from \"./apps/user/userRoute\";\nimport ProblemRoute from \"./apps/problem/problemRoute\";\nimport LoadingAnimation from \"./common/loadingAnimation\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\n\nimport {contestActions} from \"./store/data/contests\";\nimport {userActions} from \"./store/data/users\";\nimport {submissionActions} from \"./store/data/submissions\";\nimport {problemActions} from \"./store/data/problems\";\nimport {getJwt, logout} from \"./common/authService\";\nimport SubmissionRoute from \"./apps/submission/submissionRoute\";\nimport WebSocketReceive from \"./store/webSocketReceive\";\nimport httpService from \"./common/httpService\";\nimport {tutorialActions} from \"./store/data/tutorials\";\nimport TutorialRoute from \"./apps/tutorial/tutorialRoute\";\n\nexport const SuperContext = React.createContext();\n\nconst App = () => {\n    const data = generateData();\n\n    useEffect(() => {\n        data.userActs.loadUsers();\n        if(getJwt()) {\n            httpService.get(apiEndpoint + '/login_check/').then(({data}) => {\n                if (!data.status) {\n                    logout();\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <SuperContext.Provider value={data}>\n            <div>\n                <LoadingAnimation />\n                <NavBar/>\n                <WebSocketReceive />\n                <Switch>\n                    {/*<Route path={projectURLS.contests} component={ContestRoute}/>*/}\n                    {/*<Route path={projectURLS.problems} component={ProblemRoute}/>*/}\n                    {/*<Route path={projectURLS.submissions} component={SubmissionRoute} />*/}\n                    {/*<Route path={projectURLS.tutorials} component={TutorialRoute} />*/}\n                    {/*<Route path={projectURLS.user} component={UserRoute}/>*/}\n                </Switch>\n            </div>\n        </SuperContext.Provider>\n    );\n};\n\nexport default App;\n\n\nconst generateData = () => {\n    const store = storeFunc();\n    const jwt = getJwt();\n    const ws = new ReconnectingWebSocket(`${wssURL()}/?jwt=${jwt || 'hello'}`, '', {\n        maxReconnectionDelay: 60000,\n        minReconnectionDelay: 500,\n    });\n\n    const contestActs = new contestActions(store, ws);\n    const userActs = new userActions(store, ws);\n    const submissionActs = new submissionActions(store, ws);\n    const problemActs = new problemActions(store, ws);\n    const tutorialActs = new tutorialActions(store, ws);\n    return {\n        contestActs: contestActs,\n        userActs: userActs,\n        submissionActs: submissionActs,\n        problemActs: problemActs,\n        tutorialActs: tutorialActs,\n        store: store, ws: ws\n    }\n}\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport api from \"./api\";\n\nexport default function storeFunc() {\n    return configureStore({reducer,\n    middleware: [...getDefaultMiddleware(),\n        api\n    ]});\n}\n","import ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport './common/cssLibrary.css';\nimport App from \"./app\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}