{
  "version": 3,
  "sources": [
    "common/authService.jsx",
    "configuration.js",
    "store/api.js",
    "apps/functions.js",
    "store/basicReducerTemplate.js",
    "store/data/contests.js",
    "store/data/problems.js",
    "store/data/users.js",
    "store/data/submissions.js",
    "store/data/tutorials.js",
    "store/reducer.js",
    "apps/navBar.jsx",
    "apps/contest/contestList.jsx",
    "apps/problem/problemList.jsx",
    "apps/tutorial/tutorialList.jsx",
    "common/objectViewFuncs.jsx",
    "apps/contest/contest.jsx",
    "common/httpService.jsx",
    "apps/contest/standing.jsx",
    "apps/contest/contestRoute.jsx",
    "apps/user/login.jsx",
    "apps/user/userList.jsx",
    "apps/user/profile.jsx",
    "apps/user/userRoute.jsx",
    "common/fields/codeEditor.jsx",
    "common/fields/problemCode.jsx",
    "apps/problem/problem.jsx",
    "common/fields/TextEditor.jsx",
    "common/fields/input.jsx",
    "apps/problem/problemForm.jsx",
    "apps/problem/problemRoute.jsx",
    "common/loadingAnimation.jsx",
    "apps/submission/submissionList.jsx",
    "apps/submission/submission.jsx",
    "apps/submission/submissionRoute.jsx",
    "store/webSocketReceive.jsx",
    "apps/tutorial/tutorial.jsx",
    "apps/tutorial/tutorialRoute.jsx",
    "app.js",
    "store/configureStore.js",
    "index.js"
  ],
  "names": [
    "logout",
    "redirectURL",
    "localStorage",
    "removeItem",
    "window",
    "location",
    "getCurrentUser",
    "jwt",
    "getItem",
    "jwtDecode",
    "getJwt",
    "apiEndpoint",
    "document",
    "domain",
    "protocol",
    "host",
    "projectURLS",
    "contests",
    "submissions",
    "standing",
    "problems",
    "tutorials",
    "chat",
    "cf",
    "cfProblems",
    "cfStatics",
    "users",
    "login",
    "register",
    "apiCallBegan",
    "createAction",
    "apiCallFailed",
    "axios",
    "defaults",
    "headers",
    "common",
    "api",
    "dispatch",
    "next",
    "action",
    "a",
    "type",
    "payload",
    "url",
    "method",
    "data",
    "onSuccess",
    "onError",
    "onStart",
    "onFailed",
    "request",
    "baseURL",
    "response",
    "message",
    "extractDate",
    "dateString",
    "dateObj",
    "Date",
    "moment",
    "format",
    "basicReducers",
    "name",
    "state",
    "list",
    "push",
    "id",
    "dict",
    "loading",
    "results",
    "i",
    "length",
    "receivedWithPagination",
    "page",
    "nextUrl",
    "nextURL",
    "offset",
    "parse",
    "Math",
    "ceil",
    "getPageNumberFromLink",
    "count",
    "fetched",
    "parseInt",
    "total",
    "basicActions",
    "slice",
    "store",
    "ws",
    "requestedIdQueue",
    "start",
    "requested",
    "failure",
    "requestFailed",
    "_load",
    "received",
    "_loadById",
    "indexOf",
    "toSend",
    "send",
    "JSON",
    "stringify",
    "add",
    "edit",
    "update",
    "updated",
    "getById",
    "key",
    "getState",
    "actions",
    "this",
    "added",
    "objList",
    "createSlice",
    "initialState",
    "reducers",
    "contestsReceived",
    "contestActions",
    "_loadContest",
    "alert",
    "getList",
    "problemsReceived",
    "console",
    "log",
    "contestId",
    "contest",
    "problemActions",
    "_loadProblems",
    "probId",
    "info",
    "loggedIn",
    "loggedOut",
    "userActions",
    "loadUsers",
    "firstName",
    "fullName",
    "currentUser",
    "addUserToStore",
    "submissionsReceived",
    "submissionUpdated",
    "updatedWithPagination",
    "submissionActions",
    "_loadSubmission",
    "totalPages",
    "tutorialsReceived",
    "tutorialActions",
    "_loadTutorials",
    "dictKey",
    "combineReducers",
    "NavBar",
    "user",
    "useContext",
    "SuperContext",
    "userActs",
    "className",
    "to",
    "ContestList",
    "contestActs",
    "useState",
    "contestList",
    "setContestList",
    "useEffect",
    "subscribe",
    "map",
    "title",
    "hosts",
    "userId",
    "testers",
    "start_time",
    "end_time",
    "ProblemList",
    "match",
    "params",
    "problemActs",
    "setProblems",
    "unSubscribe",
    "problem",
    "by",
    "TutorialList",
    "tutorialActs",
    "setTutorials",
    "tutorial",
    "formatHtml",
    "text",
    "__html",
    "FormattedHtml",
    "dangerouslySetInnerHTML",
    "Contest",
    "Component",
    "setContest",
    "reload",
    "setReload",
    "contestStart",
    "now",
    "toLocaleString",
    "contestEnd",
    "date",
    "onComplete",
    "interceptors",
    "use",
    "error",
    "status",
    "Promise",
    "reject",
    "get",
    "post",
    "put",
    "delete",
    "Standing",
    "duringContest",
    "setDuringContest",
    "afterContest",
    "setAfterContest",
    "http",
    "during",
    "after",
    "apiCall",
    "renderStanding",
    "objectList",
    "position",
    "item",
    "floor",
    "parseFloat",
    "ContestRoute",
    "path",
    "component",
    "Login",
    "script",
    "createElement",
    "async",
    "innerText",
    "body",
    "appendChild",
    "removeChild",
    "onClick",
    "UserList",
    "setUsers",
    "first_name",
    "last_name",
    "Profile",
    "userProbList",
    "setUserProbList",
    "userSubmissionList",
    "setUserSubmissionList",
    "userContest",
    "setUserContest",
    "testProblem",
    "setTestProblem",
    "userProblemData",
    "userSubmissionData",
    "userContestData",
    "testProblemData",
    "submission",
    "verdict",
    "UserRoute",
    "CodeEditor",
    "mode",
    "theme",
    "font",
    "value",
    "label",
    "onChange",
    "editorContainer",
    "React",
    "createRef",
    "Fragment",
    "htmlFor",
    "onKeyUp",
    "current",
    "currentTarget",
    "style",
    "height",
    "width",
    "ref",
    "display",
    "ProblemCode",
    "history",
    "submissionActs",
    "code",
    "setCode",
    "language",
    "setLanguage",
    "setTheme",
    "setFont",
    "handleChange",
    "submit",
    "httpService",
    "disabled",
    "Problem",
    "problemId",
    "setProblem",
    "is_admin",
    "is_superuser",
    "notice",
    "inTerms",
    "outTerms",
    "test_cases",
    "test",
    "input",
    "output",
    "random",
    "TextEditor",
    "props",
    "extract",
    "content",
    "getElementsByClassName",
    "obj",
    "innerHTML",
    "script2",
    "Input",
    "placeholder",
    "setState",
    "autoComplete",
    "defaultProps",
    "ProblemForm",
    "contest_id",
    "corCode",
    "conProbId",
    "time_limit",
    "examples",
    "setText",
    "ProblemRoute",
    "LoadingAnimation",
    "setUser",
    "setSubmission",
    "Modal",
    "setAppElement",
    "isLoading",
    "isOpen",
    "SubmissionList",
    "submissionList",
    "setSubmissionList",
    "pages",
    "pagination",
    "pageList",
    "toString",
    "Submission",
    "submissionId",
    "verdictProcess",
    "renderResult",
    "details",
    "result",
    "SubmissionRoute",
    "WebSocketReceive",
    "addEventListener",
    "e",
    "target",
    "Tutorial",
    "tutorialId",
    "setTutorial",
    "TutorialRoute",
    "createContext",
    "App",
    "generateData",
    "then",
    "Provider",
    "configureStore",
    "reducer",
    "middleware",
    "getDefaultMiddleware",
    "ReconnectingWebSocket",
    "wssURL",
    "maxReconnectionDelay",
    "minReconnectionDelay",
    "ReactDOM",
    "render",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.701d61b8.chunk.js",
  "sourcesContent": [
    "import jwtDecode from 'jwt-decode';\n\nexport function logout(redirectURL='/') {\n    localStorage.removeItem(\"token\");\n    window.location = redirectURL\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(\"token\");\n        return jwtDecode(jwt)\n    } catch {\n        return null;\n    }\n}\n\nexport function getJwt() {\n    return localStorage.getItem(\"token\")\n}\n",
    "export const css = {\n    navBar: \" navbar-dark font-weight-bold bgDarkBlue \",\n    navSuccessButton: ' btn btn-outline-success ',\n    center: \" d-flex justify-content-center \",\n    alignRight: \" d-flex flex-row-reverse \",\n    hideOnPhone: \" d-none d-lg-block d-xl-block \",\n    username: \" nobr text-danger font-weight-bold \",\n};\n\nexport const minRefreshTime = 60;\nexport const jwtTokenKey = \"token\";\n\nconst apiURL = () => {\n    if (document.domain === \"localhost\") return \"http://127.0.0.1:8000/api\";\n    else return  document.location.protocol + \"//\" + document.location.host + \"/api\"\n}\n\nexport const apiEndpoint = apiURL();\n\nexport const wssURL = () => {\n    const protocol = document.location.protocol === \"https:\" ? \"wss://\" : \"ws://\";\n    if (document.domain === \"localhost\") return protocol + \"127.0.0.1:8000/ws\";\n    return  protocol + document.location.host + \"/ws\";\n}\n\nexport const projectURLS = {\n    contests: '/contests',\n    submissions: '/submissions',\n    standing: '/contests/standing',\n    problems: '/problems',\n    tutorials: '/tutorials',\n    chat: '/chat',\n    cf: '/cf',\n    cfProblems: 'cf/problems',\n    cfStatics: 'cf/statics',\n    users: '/users',\n    login: '/users/login',\n    register: '/users/register',\n    logout: '/users/logout',\n};\n\nexport const navBar = {\n    menuLeft: [\n        {\n            label: 'Home',\n            link: '/',\n        },\n        {\n            label: 'Bulletin',\n            link: '/bulletin',\n        }\n        ,\n        {\n            label: 'Chat',\n            link: projectURLS.chat,\n        },\n        {\n            label: 'Contests',\n            link: projectURLS.contests,\n            sub: [\n                {\n                    label: 'Contest List',\n                    link: projectURLS.contests,\n                },\n                {\n                    label: 'Submissions',\n                    link: projectURLS.submissions,\n                },\n                {\n                    label: 'Standing',\n                    link: projectURLS.standing,\n                },\n            ]\n        },\n        {\n            label: 'Tutorials',\n            link: projectURLS.tutorials,\n        },\n        {\n            label: 'Codeforces',\n            link: projectURLS.cf,\n            sub: [\n                {\n                    label: 'Problems',\n                    link: projectURLS.cfProblems\n                },\n                {\n                    label: 'Statics',\n                    link: projectURLS.cfStatics\n                }\n            ]\n        }\n    ],\n\n    menuRight: [\n        {\n            label: 'Login',\n            link: projectURLS.login,\n            // class: css.navSuccessButton,\n        },\n        {\n            label: 'Register',\n            link: projectURLS.register,\n            // class: css.navSuccessButton,\n        }\n    ]\n}",
    "import axios from 'axios';\nimport {createAction} from \"@reduxjs/toolkit\";\nimport {getJwt} from \"../common/authService\";\nimport {apiEndpoint} from \"../configuration\";\n\nexport const apiCallBegan = createAction(\"api/callBegan\")\n// export const apiCallSuccess = createAction(\"api/callSuccess\")\nexport const apiCallFailed = createAction(\"api/callFailed\")\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\nconst api = ({dispatch}) => next => async action => {\n    if (action.type !== apiCallBegan.type) return next(action);\n    const {url, method, data, onSuccess, onError, onStart, onFailed} = action.payload;\n    if(onStart) {\n        dispatch({type: onStart})\n    }\n    next(action)\n    try {\n        const response = await axios.request({\n            baseURL: apiEndpoint,\n            url,\n            method,\n            data\n        });\n        if(onSuccess) {\n            dispatch({type: onSuccess, payload: response.data});\n        }\n    } catch (error) {\n        if(onFailed) dispatch({type: onFailed})\n        dispatch(apiCallFailed({payload:error.message}))\n        if(onError) dispatch({type: onError, payload: error.message})\n    }\n}\nexport default api;",
    "import moment from \"moment\";\nimport {parse} from \"query-string\";\n\nexport const getPageNumberFromLink = (nextURL) => {\n    const parsed = parse(nextURL);\n    const offset = parsed.offset\n    const limit = 20\n    return Math.ceil(offset / limit)\n}\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}",
    "import {apiCallBegan} from \"./api\";\nimport {projectURLS} from \"../configuration\";\nimport {getPageNumberFromLink} from \"../apps/functions\";\n\nexport const standardInitialState = () => {\n    return {\n        list: [],\n        dict: {},\n        fetched: [],\n        total: null,\n        loading: false,\n    }\n}\n\nexport const basicReducers = (name) => {\n    return {\n        [`${name}Added`]: (state, action) => {\n            state.list.push(action.payload.id);\n            state.dict[action.payload.id] = action.payload;\n            state.loading = false;\n        },\n\n        [`${name}Updated`]: (state, action) => {\n            if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n            else {\n                state.dict[action.payload.id] = action.payload;\n                state.list.push(action.payload)\n            }\n            state.loading = false;\n        },\n\n        [`${name}sReceived`]: (state, action) => {\n            const data = action.payload.results;\n            for (let i = 0; i < data.length; i++) {\n                state.dict[data[i].id] = data[i];\n                state.list.push(data[i].id)\n            }\n            state.loading = false;\n        },\n\n        [`${name}Requested`]: (state) => {\n            state.loading = true;\n        },\n\n        [`${name}RequestFailed`]: (state) => {\n            state.loading = false;\n        }\n    }\n};\n\nexport const receivedWithPagination = (state, action) => {\n    let page;\n    state.loading = false;\n    const nextUrl = action.payload.next;\n    if (!nextUrl) page = Math.ceil(action.payload.count / 20)\n    else page = getPageNumberFromLink(nextUrl);\n    state.fetched.push(parseInt(page));\n    state.list[page] = []\n    state.dict[page] = {}\n    state.total = Math.ceil(action.payload.count / 20);\n    const data = action.payload.results;\n    for (let i = 0; i < data.length; i++) {\n        state.dict[data[i].id] = data[i];\n        state.list[page].push(data[i].id)\n    }\n}\n\nexport const updatedWithPagination = (state, action) => {\n    if (state.dict[action.payload.id]) state.dict[action.payload.id] = action.payload;\n    else {\n        state.dict[action.payload.id] = action.payload;\n        if(!state.list[1]) state.list[1] = []\n        state.list[1] = [action.payload.id, ...state.list[1]]\n    }\n    state.loading = false;\n}\n\nexport class basicActions {\n    constructor(slice, store, ws, name) {\n        const actions = slice.actions;\n        this.ws = ws;\n        this.store = store;\n        this.name = name;\n        this.added = actions[`${name}Added`];\n        this.requestFailed = actions[`${name}RequestFailed`];\n        this.requested = actions[`${name}Requested`];\n        this.received = actions[`${name}sReceived`];\n        this.updated = actions[`${name}Updated`];\n    }\n\n    requestedIdQueue = [];\n\n    start = () => {\n        this.store.dispatch({\n            type: this.requested.type\n        })\n    }\n\n    failure = () => {\n        this.store.dispatch({\n            type: this.requestFailed.type\n        })\n    };\n\n    _load = (url = projectURLS[`${this.name}s`] + '/') => {\n        this.store.dispatch(apiCallBegan({\n            url: url,\n            onStart: this.requested.type,\n            onSuccess: this.received.type,\n            onFailed: this.requestFailed.type,\n        }));\n    };\n\n    _loadById = (id) => {\n        if (this.requestedIdQueue.indexOf(id) === -1) {\n            this.requestedIdQueue.push(id);\n            const toSend = {\"method\": \"GET\", \"target\": this.name, \"id\": id}\n            this.ws.send(JSON.stringify(toSend));\n            this.start();\n        }\n    };\n\n    add = (data) => {\n        const toSend = {\"method\": \"POST\", \"target\": this.name, \"data\": data};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    edit = (data) => {\n        const toSend = {\"method\": \"PUT\", \"target\": this.name, \"id\": data.id, \"data\": data};\n        this.ws.send(JSON.stringify(toSend));\n        this.start();\n    }\n\n    list(objList = []) {\n        if (!objList) return;\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        let data = []\n        for (let i = 0; i < objList.length; i++) {\n            data.push(dict[objList[i]]);\n        }\n        return data;\n    }\n\n    update = (data) => {\n        this.store.dispatch({type: this.updated.type, payload: data})\n    }\n\n    getById = (id, key = null) => {\n        const dict = this.store.getState()[`${this.name}s`].dict;\n        if (key) {\n            if (dict[id]) return dict[id][key];\n            else if (id) this._loadById(id);\n        } else if (dict[id]) return dict[id]\n        if (id) this._loadById(id);\n        return null;\n    }\n}\n",
    "import {basicActions, basicReducers, receivedWithPagination, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'contest';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        contestsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n    },\n});\n\nexport default slice.reducer;\n\nexport class contestActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadContest = (page=1) => {\n        const contests = this.store.getState().contests;\n        if (contests.fetched.indexOf(page) !== -1 || contests.loading) return;\n        if(page < 1 || (contests.total && page > contests.total)) {\n            alert(\"Wrong page\");\n        }\n\n        this._load(`/contests/?limit=20&offset=${(page - 1)*20}`)\n    };\n\n    getList = (page=1) => {\n        this._loadContest(page);\n        return this.list(this.store.getState().contests.list[page]);\n    }\n}",
    "import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'problem';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        problemsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No Problems for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\nexport default slice.reducer;\n\nexport class problemActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadProblems = (contestId) => {\n        const problems = this.store.getState().problems;\n        if(problems.fetched.indexOf(contestId) !== -1 || problems.loading) return ;\n        this._load(`/problems/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadProblems(contestId);\n        let list = [];\n        const dict = this.store.getState().problems.dict;\n        for(let probId in dict) {\n            if(dict[probId].contest === contestId) {\n                list.push(dict[probId]);\n            }\n        }\n        return list;\n    }\n}\n",
    "import {createSlice} from \"@reduxjs/toolkit\";\nimport {getCurrentUser} from \"../../common/authService\";\nimport {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\n\nconst name = 'user'\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n        info: getCurrentUser(),\n    },\n    reducers: {\n        ...basicReducers(name),\n\n        loggedIn: (state, action) => {\n            state.info = action.payload;\n        },\n        loggedOut: state => {\n            state.info = null;\n        }\n    }\n});\n\nconst {loggedIn} = slice.actions;\nexport default slice.reducer;\n\nexport class userActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    };\n\n    loadUsers = () => {\n        this._load('/users/?limit=1000')\n    };\n\n    getList = () => this.list(this.store.getState().users.list);\n\n    firstName = (id) => {\n        return this.getById(id, 'first_name');\n    };\n\n    fullName = (id) => {\n        return this.getById(id, 'first_name') + ' ' + this.getById(id, 'last_name')\n    }\n\n    currentUser = () => {\n        return this.store.getState()[`${this.name}s`].info;\n    }\n\n    addUserToStore = () => {\n        this.store.dispatch({\n            type: loggedIn.type,\n            payload: getCurrentUser(),\n        })\n    };\n}\n",
    "import {\n    basicActions,\n    basicReducers,\n    receivedWithPagination,\n    standardInitialState,\n    updatedWithPagination\n} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'submission';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState(),\n    },\n    reducers: {\n        ...basicReducers(name),\n        submissionsReceived: (state, action) => {\n            receivedWithPagination(state, action);\n        },\n        submissionUpdated: (state, action) => {\n            updatedWithPagination(state, action);\n        }\n    }\n})\nexport default slice.reducer;\n\nexport class submissionActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadSubmission = (page = 1) => {\n        const submissions = this.store.getState().submissions;\n        if (submissions.fetched.indexOf(page) !== -1 || submissions.loading) return;\n        if (page < 1 || (submissions.total && page > submissions.total)) {\n            alert(\"Wrong page\");\n            return;\n        }\n        this._load(`/submissions/?limit=20&offset=${(page - 1) * 20}`)\n    };\n\n    getList = (page = 1) => {\n        this._loadSubmission(page);\n        return this.list(this.store.getState().submissions.list[page]);\n    }\n\n    totalPages = () => {\n        return this.store.getState()[this.name + 's'].total;\n    }\n}\n",
    "import {basicActions, basicReducers, standardInitialState} from \"../basicReducerTemplate\";\nimport {createSlice} from \"@reduxjs/toolkit\";\n\nconst name = 'tutorial';\n\nconst slice = createSlice({\n    name: `${name}s`,\n    initialState: {\n        ...standardInitialState()\n    },\n    reducers: {\n        ...basicReducers(name),\n        tutorialsReceived: (state, action) => {\n            const data = action.payload.results;\n            if (data.length < 1) console.log(\"No tutorials for this contest\");\n            else {\n                let contestId = data[0].contest;\n                state.loading = false;\n                state.fetched.push(contestId)\n                for (let i = 0; i < data.length; i++) {\n                    state.dict[data[i].id] = data[i];\n                }\n            }\n\n        },\n    }\n});\n\nexport default slice.reducer;\n\nexport class tutorialActions extends basicActions {\n    constructor(store, ws) {\n        super(slice, store, ws, name);\n    }\n\n    _loadTutorials = (contestId) => {\n        const tutorials = this.store.getState().tutorials;\n        if(tutorials.fetched.indexOf(contestId) !== -1 || tutorials.loading) return ;\n        this._load(`/tutorials/?contest_id=${contestId}`);\n    };\n\n    getList = (contestId) => {\n        this._loadTutorials(contestId);\n        let list = [];\n        const dict = this.store.getState().tutorials.dict;\n        for(let dictKey in dict) {\n            if(dict[dictKey].contest === contestId) {\n                list.push(dict[dictKey]);\n            }\n        }\n        return list;\n    }\n}\n",
    "import {combineReducers} from \"redux\";\nimport contests from './data/contests';\nimport problems from './data/problems';\nimport users from './data/users';\nimport submissions from './data/submissions';\nimport tutorials from \"./data/tutorials\";\n\n\nexport default combineReducers({\n    contests: contests,\n    problems: problems,\n    submissions: submissions,\n    users: users,\n    tutorials: tutorials,\n});\n",
    "import React, {useContext} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {SuperContext} from \"../app\";\n\nconst NavBar = () => {\n    const {userActs} = useContext(SuperContext);\n    const user = userActs.currentUser();\n    return (\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            {/*<button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"*/}\n            {/*        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">*/}\n            {/*    <span className=\"navbar-toggler-icon\"/>*/}\n            {/*</button>*/}\n            <div className=\"\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/contests\">Contests</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/submissions\">Submission</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        {!user && <NavLink to=\"/users/login\" className=\"nav-link\">Login</NavLink>}\n                        {user && <NavLink to=\"/users/profile\" className=\"nav-link\">Profile</NavLink>}\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;\n",
    "import React, {useState, useContext, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {Link} from \"react-router-dom\";\nimport {extractDate} from \"../functions\";\n\nconst ContestList = () => {\n    const {contestActs, userActs} = useContext(SuperContext);\n    const [contestList, setContestList] = useState(contestActs.getList());\n\n    useEffect(() => {\n    contestActs.store.subscribe(() => {\n        setContestList(contestActs.getList());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    });}, []);\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writers</th>\n                    <th>Testers</th>\n                    <th>Start</th>\n                    <th>End</th>\n                </tr>\n                </thead>\n                <tbody>\n                {contestList && contestList.map((contest) => <tr key={contest.id}>\n                    <td><Link to={`/contests/${contest.id}`}>{contest.title}</Link></td>\n                    <td>{contest.hosts.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p> )}</td>\n                    <td>{contest.testers.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p> )}</td>\n                    <td>{extractDate(contest.start_time)}</td>\n                    <td>{extractDate(contest.end_time)}</td>\n                </tr>)\n                }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default ContestList;",
    "import React, {useContext, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SuperContext} from \"../../app\";\n\nconst ProblemList = ({match}) => {\n    const {contestId} = match.params;\n    const {problemActs, userActs} = useContext(SuperContext);\n    const [problems, setProblems] = useState(problemActs.getList(contestId));\n\n    let unSubscribe = problemActs.store.subscribe(() => {\n        setProblems(problemActs.getList(contestId));\n        unSubscribe();\n    });\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writer</th>\n                </tr>\n                </thead>\n                <tbody>\n                {problems.map((problem) => <tr key={problem.id}>\n                    <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                    <td>{userActs.fullName(problem.by)}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default ProblemList;",
    "import React, {useContext, useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {SuperContext} from \"../../app\";\n\nconst TutorialList = ({match}) => {\n    const {contestId} = match.params;\n    const {tutorialActs, userActs} = useContext(SuperContext);\n    const [tutorials, setTutorials] = useState(tutorialActs.getList(contestId));\n\n    let unSubscribe = tutorialActs.store.subscribe(() => {\n        setTutorials(tutorialActs.getList(contestId));\n        unSubscribe();\n    });\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Writer</th>\n                </tr>\n                </thead>\n                <tbody>\n                {tutorials.map((tutorial) => <tr key={tutorial.id}>\n                    <td><Link to={`/tutorials/${tutorial.id}`}>{tutorial.title}</Link></td>\n                    <td>{userActs.fullName(tutorial.by)}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default TutorialList;",
    "import React, {Component} from 'react';\nimport moment from \"moment\";\nimport {Link} from \"react-router-dom\";\nimport {css} from \"../configuration\";\n\nexport const createTitle = (title, link, className = \"h1\") => {\n    return link ? <Link to={link}>\n        <div className={className + css.center}>{title}</div>\n    </Link> : <div className={className + css.center}>{title}</div>\n};\n\nexport const createLeft = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"\"}) => {\n    return <div className={\"col \" + constClass}> {constText}\n        <span className={textListClass}>{textList.join(\"\\n\")}</span>\n    </div>\n};\n\nexport const createRight = (textList, {textListClass = css.username, constText = \"Written By:\", constClass = \"text-dark\", hidePhone = true}) => {\n    return <div className={\"col\" + css.alignRight}>\n            <span className={(hidePhone && css.hideOnPhone)}> {constText}\n                <span className={textListClass}>{textList.join(\"\\n\")}</span>\n            </span>\n    </div>\n};\n\nexport const extractDate = (dateString) => {\n    const dateObj = new Date(dateString);\n    return moment(dateObj).format(\"D MMM YY:::H:m\")\n}\n\nconst formatHtml = (text) => {\n    if (text) {\n        return {__html: `${text}`}\n    }\n    return {__html: \"<span />\"}\n}\n\nexport const FormattedHtml = ({text}) => <div dangerouslySetInnerHTML={formatHtml(text)}/>\n\nclass ObjectView extends Component {\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default ObjectView;",
    "import React, {useContext, useState} from 'react';\nimport {SuperContext} from \"../../app\";\nimport ProblemList from \"../problem/problemList\";\nimport Countdown from \"react-countdown\";\nimport TutorialList from \"../tutorial/tutorialList\";\nimport {Link} from \"react-router-dom\";\nimport {FormattedHtml} from \"../../common/objectViewFuncs\";\n\nconst Contest = ({match}) => {\n    const {contestId} = match.params;\n    const {contestActs, userActs} = useContext(SuperContext);\n    const [contest, setContest] = useState(contestActs.getById(contestId));\n    const [reload, setReload] = useState(false);\n\n    const forceReload = () => {\n        setReload(!reload);\n    }\n\n    let unSubscribe = contestActs.store.subscribe(() => {\n        setContest(contestActs.getById(contestId));\n        setReload(!reload);\n        unSubscribe();\n    })\n\n    const contestStart = new Date((contest && contest.start_time) || Date.now().toLocaleString());\n    const contestEnd = new Date((contest && contest.end_time) || Date.now().toLocaleString());\n\n    return (\n        <div className=\"container\">\n            {contest && <div>\n                <p className=\"text-success display-4\">{contest.title}</p>\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                    <th>Contest Writers</th>\n                    <th>Contest Testers</th>\n                    </thead>\n                    <tbody>\n                    <td>{contest.hosts.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p>)}</td>\n                    <td>{contest.testers.map((userId) => <p className=\"user\" key={userId}>{userActs.firstName(userId)}</p>)}</td>\n                    </tbody>\n                </table>\n                {contest.text && <div>\n                    <h2>About contest</h2>\n                    <div className=\"bgAliceBlue\">\n                        <FormattedHtml text={contest.text}/>\n                    </div>\n                    <br/>\n                </div>}\n                <Link to={`/contests/standing/${contestId}`}>\n                    <button className=\"btn-lg btn-outline-success\">Standing</button>\n                </Link>\n            </div>}\n            {contestStart > Date.now() && <div className=\"container\">\n                <Countdown date={contest.start_time} className=\"display-4\" onComplete={forceReload}/>\n            </div>}\n\n            {contestStart <= Date.now() && <div>\n                <h2>Problems</h2>\n                <ProblemList match={match}/>\n            </div>}\n\n\n            {contestEnd <= Date.now() && <div>\n                <h2>Tutorials</h2>\n                <TutorialList match={match}/>\n            </div>}\n        </div>\n    );\n};\n\nexport default Contest;",
    "import axios from 'axios'\nimport {getJwt} from \"./authService\";\n\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\naxios.interceptors.response.use(null, error => {\n    const expectedError =\n        error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n\n    if(!expectedError) {\n        console.log(\"Logging the error\", error);\n        alert(\"An unexpected error.\");\n    }\n\n    return Promise.reject(error);\n});\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n};",
    "import React, {useContext, useEffect, useState} from 'react';\nimport http from \"../../common/httpService\";\nimport {SuperContext} from \"../../app\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst url = apiEndpoint\n\nconst Standing = ({match}) => {\n    const {contestActs, userActs} = useContext(SuperContext);\n    const {contestId} = match.params;\n    const [duringContest, setDuringContest] = useState([]);\n    const [afterContest, setAfterContest] = useState([]);\n    useEffect(() => {\n        const apiCall = async () => {\n            contestActs.start(); // Start Load animation\n            const data = await http.get(`${url}/standing/${contestId}`)\n            contestActs.failure(); // Stop Load animation\n            setDuringContest(data.data.during);\n            setAfterContest(data.data.after);\n        }\n        apiCall();\n\n    }, [contestId])\n    let position = 1;\n\n    return (\n        <div className=\"container\">\n            <h2>During Contest</h2>\n            {renderStanding(duringContest, userActs, position)}\n            <h2>After Contest</h2>\n            {renderStanding(afterContest, userActs, position)}\n        </div>\n    );\n};\n\nexport default Standing;\n\nconst renderStanding = (objectList, userActs, position = 1) =>\n    <table className=\"table table-bordered table-striped\">\n        <thead>\n        <tr>\n            <th>Position</th>\n            <th>User</th>\n            <th>Solves</th>\n            <th>Penalty</th>\n        </tr>\n        </thead>\n        <tbody>\n        {objectList.map(item => <tr key={position}>\n            <td>{position++}</td>\n            <td>{userActs.fullName(item[0])}</td>\n            <td>{item[1]}</td>\n            <td>{Math.floor(parseFloat(item[2]) / 100)}</td>\n        </tr>)}\n        </tbody>\n\n    </table>\n",
    "import React from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport {projectURLS} from \"../../configuration\";\nimport ContestList from \"./contestList\";\nimport Contest from \"./contest\";\nimport Standing from \"./standing\";\n\nconst ContestRoute = () => {\n    return <Switch>\n        <Route path=\"/contests/standing/:contestId\" component={Standing} />\n        <Route path=\"/contests/:contestId\" component={Contest} />\n        <Route path={projectURLS.contests} component={ContestList} />\n    </Switch>\n};\n\nexport default ContestRoute;",
    "import React, {useEffect, useContext} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst Login = () => {\n    const {userActs} = useContext(SuperContext);\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.innerText = `const firebaseConfig = {\n            apiKey: \"AIzaSyB9n-TJY1hy49WoECQH7fZXlxA7lKI2VH4\",\n            authDomain: \"b12j-mah.firebaseapp.com\",\n            databaseURL: \"https://b12j-mah.firebaseio.com\",\n            projectId: \"b12j-mah\",\n            storageBucket: \"b12j-mah.appspot.com\",\n            messagingSenderId: \"704405925886\",\n            appId: \"1:704405925886:web:2066da3c25584a7ed4daaf\",\n            measurementId: \"G-XE9M4QRX4J\"\n        };\n        firebase.initializeApp(firebaseConfig);\n    \n        const ui = new firebaseui.auth.AuthUI(firebase.auth());\n        const uiConfig = {\n            callbacks: {\n                signInSuccessWithAuthResult: function (authResult, redirectUrl) {\n                    firebase.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function (idToken) {\n                        fetch('${apiEndpoint + \"/login/\"}', {\n                            method: \"POST\",\n                            headers: {'token': idToken}\n                        }).then(async (response) => {\n                            const data = await response.json();\n                            localStorage.setItem(\"token\", data.jwt);\n                            window.location = '/';                        \n                        })\n                    });\n                    return true;\n                },\n            },\n            signInFlow: 'popup',\n            signInOptions: [\n                firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n                firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n                firebase.auth.GithubAuthProvider.PROVIDER_ID,\n                firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n            ],\n        };\n        ui.start('#firebaseui-auth-container', uiConfig);`\n        document.body.appendChild(script);\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, []);\n    return (\n        <div>\n            <div onClick={userActs.start}><div id=\"firebaseui-auth-container\" className=\"pt-5\" /></div>\n        </div>\n    );\n};\n\nexport default Login;\n",
    "import React, {useContext, useState, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\n\nconst UserList = () => {\n    const {userActs} = useContext(SuperContext);\n    const [users, setUsers] = useState(userActs.getList());\n    useEffect(() => {\n        userActs.store.subscribe(() => {\n            setUsers(userActs.getList());\n        })\n    });\n    return (\n        <div className=\"container\">\n            <table className=\"table table-dark table-bordered\">\n                <thead>\n                <tr>\n                    <th>User id</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                </tr>\n                </thead>\n                <tbody>\n                {users.map((user) => <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.first_name}</td>\n                    <td>{user.last_name}</td>\n                </tr>)}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UserList;",
    "import React, {useEffect, useContext, useState} from 'react';\nimport http from \"../../common/httpService\";\nimport {SuperContext} from \"../../app\";\nimport {Link} from \"react-router-dom\";\nimport {logout} from \"../../common/authService\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst Profile = () => {\n    const {problemActs} = useContext(SuperContext);\n    const [userProbList, setUserProbList] = useState([]);\n    const [userSubmissionList, setUserSubmissionList] = useState([]);\n    const [userContest, setUserContest] = useState([]);\n    const [testProblem, setTestProblem] = useState([]);\n\n    useEffect(() => {\n        const apiCall = async () => {\n            problemActs.start(); // Start Load animation\n            const userProblemData = await http.get(`${apiEndpoint}/problems/user_problems/`);\n            const userSubmissionData = await http.get(`${apiEndpoint}/submissions/user_submissions/`);\n            const userContestData = await http.get(`${apiEndpoint}/contests/user_contests/`);\n            const testProblemData = await http.get(`${apiEndpoint}/problems/test_problems/`);\n            problemActs.failure(); // Stop Load animation\n            setUserProbList(userProblemData.data.results);\n            setUserSubmissionList(userSubmissionData.data.results);\n            setUserContest(userContestData.data.results);\n            setTestProblem(testProblemData.data.results);\n        }\n        apiCall();\n        // eslint-disable-next-line\n    }, [])\n    return (\n        <div className=\"container pt-5\">\n            <button className=\"btn btn-danger\" onClick={logout}>Logout</button>\n            <div className=\"row\">\n                <div className=\"col-sm\">\n                    <b>Contest set by you</b>\n                    <table className=\"table table-striped table-bordered\">\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th/>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userContest.map(contest => <tr key={contest.id}>\n                            <td><Link to={`/contests/${contest.id}`}>{contest.title}</Link></td>\n                            <td><Link to={`/problems/add/${contest.id}`} className=\"btn-sm btn-success\">Add\n                                problem</Link></td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"col-sm\">\n                    <b>Testable problem for you</b>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Contest</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {testProblem.map(problem => <tr key={problem.id}>\n                            <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                            <td>{problem.contest}</td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm\">\n                    <b>Last 20 Problem set by you</b>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Contest</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userProbList.map(problem => <tr key={problem.id}>\n                            <td><Link to={`/problems/${problem.id}`}>{problem.title}</Link></td>\n                            <td>{problem.contest}</td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"col-sm\">\n                    <b>Last 20 submissions by you</b>\n                    <table className=\"table table-bordered table-striped\">\n                        <thead>\n                        <tr>\n                            <th>Contest</th>\n                            <th>Problem</th>\n                            <th>Verdict</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {userSubmissionList.map(submission => <tr key={submission.id}>\n                            <td>{submission.contest}</td>\n                            <td>{submission.problem}</td>\n                            <td><Link to={`/submissions/${submission.id}`}>{submission.verdict}</Link></td>\n                        </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;",
    "import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Login from \"./login\";\nimport {projectURLS} from \"../../configuration\";\nimport UserList from \"./userList\";\nimport Profile from \"./profile\";\n\nconst UserRoute = () => {\n    return (\n        <Switch>\n            <Route path={projectURLS.login} component={Login} />\n            <Route path=\"/users/profile\" component={Profile} />\n            <Route path=\"/users/list\" component={UserList} />\n        </Switch>\n    );\n};\n\nexport default UserRoute;",
    "import React, {useEffect} from 'react';\n\nconst CodeEditor = ({mode, theme, font, name, value, label, onChange}) => {\n\n    const editorContainer = React.createRef();\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n\n        script.innerText = `ace.require(\"ace/ext/language_tools\");\n        var editor = ace.edit(\"${name + \"c\"}\");\n        editor.session.setMode(\"ace/mode/${mode}\");\n        editor.setTheme(\"ace/theme/${theme}\");\n        editor.getSession().setUseWorker(true);\n        editor.setValue(\"${value}\");\n        editor.clearSelection();\n        editor.setOptions({\n            enableBasicAutocompletion: true,\n            enableSnippets: true,\n            enableLiveAutocompletion: true\n        });\n        editor.setFontSize(\"${font}px\");\n        editor.commands.addCommand({\n            name: \"showKeyboardShortcuts\",\n            bindKey: {win: \"Ctrl-h\", mac: \"Command-Alt-h\"},\n            exec: function (editor) {\n                ace.config.loadModule(\"ace/ext/keybinding_menu\", function (module) {\n                    module.init(editor);\n                    editor.showKeyboardShortcuts()\n                })\n            }\n        });\n        var textarea = document.getElementById('${name}');\n        editor.getSession().on(\"change\", function () {\n            textarea.value = editor.getSession().getValue();\n        });`\n        document.body.appendChild(script);\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, [font, mode, name, theme]);\n\n    const handleChange = () => {\n        const value = editorContainer.current.value;\n        const obj = {currentTarget: {name: name, value: value}};\n        onChange(obj)\n    }\n\n    return (\n        <React.Fragment>\n            <label htmlFor={name + \"c\"}><h3>{label}</h3></label>\n            <div id={name + \"c\"} onKeyUp={handleChange} style={{height: \"300px\", width: \"100%\"}} />\n            <textarea id={name} className=\"ace_code_editor\" name={name} ref={editorContainer}\n                      style={{display: \"none\"}}/>\n        </React.Fragment>\n    )\n}\n\nexport default CodeEditor;",
    "import React, {useState, useContext} from 'react';\nimport httpService from \"../httpService\";\nimport {SuperContext} from \"../../app\";\nimport {getCurrentUser} from \"../authService\";\nimport CodeEditor from \"./codeEditor\";\nimport {apiEndpoint} from \"../../configuration\";\n\nconst ProblemCode = ({problem, history}) => {\n    const {submissionActs} = useContext(SuperContext)\n    const [code, setCode] = useState('');\n    const [language, setLanguage] = useState('python');\n    const [theme, setTheme] = useState('chrome');\n    const [font, setFont] = useState(15);\n\n    const user = getCurrentUser();\n\n    const handleChange = ({currentTarget}) => {\n        const {name, value} = currentTarget;\n        if (name === 'language') setLanguage(value);\n        else if (name === problem.id) setCode(value);\n        else if (name === 'theme') setTheme(value);\n        else if (name === 'font') setFont(value);\n    };\n\n\n    const submit = async () => {\n        if (code.length < 10) {\n            alert(\"Your code is less than 10 character. If you're pasting code then please press space or any key after paste.\");\n            return;\n        }\n        if (language !== 'python' && language !== 'c_cpp') {\n            alert(\"Please choose correct language\");\n            return;\n        }\n        const data = {\n            code, language, problem: problem.id\n        }\n        submissionActs.start();\n        try {\n            const response = await httpService.post(apiEndpoint + '/submissions/', data)\n            submissionActs.failure();\n            history.push(`/submissions/${response.data.id}`)\n        } catch (error) {\n            submissionActs.failure();\n            if (error.response && error.response.status === 403) {\n                window.location.reload();\n            } else if(error.response) {\n                console.log(\"This is the error reason. Please send it to Mahmudul\", error.response);\n                alert(`Tell this to Mahmudul: code: ${error.response.status}`);\n            } else {\n                console.log(error);\n                alert(\"Couldn't submit. Sometimes server is causing this error. Check your console\");\n            }\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row pr-3 pl-3\">\n                <select className=\"custom-select col-4\" name=\"language\" onChange={handleChange}>\n                    <option value=\"python\">Python3</option>\n                    <option value=\"c_cpp\">C/C++</option>\n                </select>\n                <select className=\"custom-select col-4\" name=\"theme\" id=\"theme\" onChange={handleChange}>\n                    <option value=\"chrome\">White</option>\n                    <option value=\"gob\">Dark</option>\n                </select>\n                <select className=\"custom-select col-4\" name=\"font\" id=\"font\" onChange={handleChange}>\n                    <option value=\"15\">15px</option>\n                    <option value=\"12\">12px</option>\n                    <option value=\"18\">18px</option>\n                    <option value=\"20\">20px</option>\n                </select>\n            </div>\n            <CodeEditor mode={language} value={code} theme={theme} onChange={handleChange} name={problem.id}\n                        font={font}/>\n            {!user && <div className=\"alert alert-danger\">Please login to submit</div>}\n            <div className=\"alert alert-info\">If you're coping code from anywhere then please press space after pasting or you will get error</div>\n            <button disabled={!user} className=\"btn btn-success\" onClick={submit}>Submit</button>\n        </div>\n    );\n};\n\nexport default ProblemCode;",
    "import React, {useState, useEffect, useContext} from 'react';\nimport {FormattedHtml} from \"../../common/objectViewFuncs\";\nimport {SuperContext} from \"../../app\";\nimport ProblemCode from \"../../common/fields/problemCode\";\nimport {Link} from \"react-router-dom\";\nimport {getCurrentUser} from \"../../common/authService\";\n\nconst Problem = ({match, history}) => {\n    const {problemActs, userActs} = useContext(SuperContext);\n    const {problemId} = match.params;\n    const [problem, setProblem] = useState(problemActs.getById(problemId));\n    const [reload, setReload] = useState(false);\n\n    problemActs.store.subscribe(() => {\n        setProblem(problemActs.getById(problemId));\n        setReload(!reload);\n    });\n\n    const currentUser = getCurrentUser() && getCurrentUser().id;\n    const is_admin = getCurrentUser() && getCurrentUser().is_superuser;\n\n    useEffect(() => {\n        setProblem(problemActs.getById(problemId));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [problemId]);\n\n    return (\n        problem && <div className=\"container\">\n            {(currentUser === problem.by || is_admin) &&\n                <Link to={`/problems/edit/${problem.id}`}><button className=\"btn-lg btn-success\">Edit</button></Link>}\n            <div className=\"bgDarkBlue\">\n                <h1>{problem.title}</h1>\n                <h3>By <span className=\"user\">{userActs.fullName(problem.by)}</span></h3>\n            </div>\n            <div className=\"bgAliceBlue\">\n                <div className=\"alert alert-info\">{problem.notice}</div>\n                <h4>Problem statement</h4>\n                <FormattedHtml text={problem.text}/> <br/>\n                <h4>Input Terms</h4>\n                <FormattedHtml text={problem.inTerms}/> <br/>\n                <h4>Output Terms</h4>\n                <FormattedHtml text={problem.outTerms}/> <br/>\n            </div>\n            <table className=\"table table-bordered\">\n                <thead>\n                <tr>\n                    <th>Input</th>\n                    <th>Output</th>\n                </tr>\n                </thead>\n                <tbody>\n                {problem.test_cases.map(test => <tr key={Math.floor(Math.random() * 1000)}>\n                    <td>\n                        <pre>{test.input}</pre>\n                    </td>\n                    <td>\n                        <pre>{test.output}</pre>\n                    </td>\n                </tr>)}\n                </tbody>\n            </table>\n            <ProblemCode problem={problem} history={history}/>\n            <br/><br/>\n        </div>\n    );\n}\n\nexport default Problem;\n\n",
    "import React, {Component} from 'react';\n\nexport default class TextEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        this.editorContainer = React.createRef();\n    }\n\n    componentDidMount() {\n        const script2 = document.createElement('script');\n        script2.type = 'text/javascript';\n        script2.async = true;\n        script2.innerText = \"function imageHandler() {var range = this.quill.getSelection();\" +\n            \"var value = prompt('please copy paste the image url here.');\" +\n            \"if (value) {this.quill.insertEmbed(range.index, 'image', value, Quill.sources.USER);}}\"\n        document.body.appendChild(script2);\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n\n        script.innerText = `var editor = new Quill('#${this.props.name}',\n        {'theme': 'snow', 'modules':{'toolbar':{ 'container': [ ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'], ['link', 'image'], [{'list': 'ordered'}, {'list': 'bullet'}],\n         [{'script': 'sub'}, {'script': 'super'}], [{'header': [1, 2, 3, 4, 5, 6, false]}], [{'color': []},\n          {'background': []}], [{'align': []}]], handlers:{image: imageHandler}  } }});`;\n\n        document.body.appendChild(script);\n    }\n\n    formatHtml = (text) => {\n        if (text) {\n            return {__html: `${text}`}\n        }\n        return {__html: \"<span />\"}\n    }\n\n    extract = () => {\n        let content = this.editorContainer.current.getElementsByClassName('ql-editor')[0]\n        const obj = {currentTarget: {name: this.props.name, value: content.innerHTML}}\n        this.props.onChange(obj)\n    }\n\n    render() {\n        const {label, name, value} = this.props\n        return (\n            <React.Fragment>\n                <label htmlFor={name}><h3>{label}</h3></label>\n                <div ref={this.editorContainer} id={name} onKeyUp={this.extract}\n                     dangerouslySetInnerHTML={this.formatHtml(value)}/>\n            </React.Fragment>\n        )\n    }\n}",
    "import React, {Component} from 'react';\n\nclass Input extends Component {\n    state = {\n        value: this.props.value\n    }\n\n    render() {\n        let {name, label, error, type, onChange, placeholder} = this.props;\n        const changeMiddle = (data) => {\n            onChange(data);\n            this.setState({value: data.currentTarget.value})\n        }\n        return (\n            <div className=\"form-group\">\n                {label &&\n                <label htmlFor=\"{name}\"><h3>{label}</h3></label>\n                }\n                <input type={type} value={this.state.value} onChange={changeMiddle} id={name} name={name} className=\"form-control\"\n                       autoComplete=\"off\" placeholder={placeholder} />\n                <p><small/></p>\n                {error && <div className=\"alert alert-danger\">{error}</div>}\n            </div>\n        )\n    }\n}\n\nInput.defaultProps = {\n    type: \"text\",\n    placeholder: \"Input here\"\n}\n\nexport default Input;\n",
    "import React, {useContext, useState} from 'react';\nimport TextEditor from \"../../common/fields/TextEditor\";\nimport Input from \"../../common/fields/input\";\nimport {SuperContext} from \"../../app\";\nimport CodeEditor from \"../../common/fields/codeEditor\";\n\nconst ProblemForm = ({match, history}) => {\n    const {contestId, problemId} = match.params;\n    const {problemActs, contestActs} = useContext(SuperContext);\n    const [problem] = useState(problemActs.getById(problemId));\n    const [contest] = useState(contestActs.getById(contestId));\n\n    let data = {}\n    if (problem) {\n        data = {...problem}\n    } else {\n        data = {\n            contest_id: contestId,\n            inTerms: 'input Terms',\n            outTerms: 'output Terms',\n            text: 'statement',\n            title: 'problem title',\n            corCode: '',\n            conProbId: 'A',\n            notice: 'nothing',\n            time_limit: 1,\n            examples: 1\n        }\n    }\n\n\n    const setText = ({currentTarget}) => {\n        const {name, value} = currentTarget;\n        data[name] = value\n    }\n\n    const submit = () => {\n        if(problem) {\n            problemActs.edit(data);\n            history.push(`/problems/${problem.id}`);\n        } else {\n            problemActs.add(data);\n            history.push('/users/profile')\n        }\n    }\n\n    return (\n        <div className=\"container pt-5\">\n            {contest && <h1 className=\"text-info\">{contest.title}</h1>}\n            <Input label=\"Problem name\" name=\"title\" value={data['title']} onChange={setText}/>\n            <TextEditor label=\"Problem Statement\" name=\"text\" value={data['text']} onChange={setText}/>\n            <TextEditor label=\"Input Terms\" name=\"inTerms\" value={data['inTerms']} onChange={setText}/>\n            <TextEditor label=\"Output Terms\" name=\"outTerms\" value={data['outTerms']} onChange={setText}/>\n            <Input label=\"Problem id\" placeholder='A' name=\"conProbId\" value={data['conProbId']} onChange={setText}/>\n            <CodeEditor mode=\"c_cpp\" value={data['corCode']} theme=\"chrome\" onChange={setText}\n                        name=\"corCode\" font={20} />\n            <div className=\"bg-light\">\n                <h3 className=\"text-info\">Everything below are optional. You don't need to change.</h3>\n                <TextEditor label=\"Notice\" name=\"notice\" value={data['notice']} onChange={setText}/>\n                <Input label=\"Time Limit\" name=\"time_limit\" value={data['time_limit']} type=\"number\"\n                       onChange={setText}/>\n                <Input label=\"Number of example\" name=\"examples\" value={data['examples']} type=\"number\"\n                       onChange={setText}/>\n            </div>\n            <button className=\"btn-lg btn-success\" onClick={submit}>Submit</button>\n            <br/><br/><br/>\n        </div>\n    );\n};\n\nexport default ProblemForm;",
    "import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport ProblemList from \"./problemList\";\nimport Problem from \"./problem\";\nimport ProblemForm from \"./problemForm\";\n\nconst ProblemRoute = () => {\n    return (\n        <Switch>\n            <Route path=\"/problems/contestId=:contestId\" component={ProblemList}/>\n            <Route path=\"/problems/add/:contestId\" component={ProblemForm} />\n            <Route path=\"/problems/edit/:problemId\" component={ProblemForm} />\n            <Route path={'/problems/:problemId'} component={Problem}/>\n        </Switch>\n    );\n};\n\nexport default ProblemRoute;",
    "import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-modal\";\nimport {SuperContext} from \"../app\";\n\nconst LoadingAnimation = () => {\n    const {userActs} = useContext(SuperContext);\n    const store = userActs.store;\n    const [problem, setProblem] = useState(!!store.getState().problems.loading)\n    const [user, setUser] = useState(!!store.getState().users.loading)\n    const [contest, setContest] = useState(!!store.getState().contests.loading)\n    const [submission, setSubmission] = useState(!!store.getState().submissions.loading)\n\n\n    store.subscribe(() => {\n        setProblem(!!store.getState().problems.loading);\n        setUser(!!store.getState().users.loading);\n        setContest(!!store.getState().contests.loading);\n        setSubmission(!!store.getState().submissions.loading);\n    });\n\n    useEffect(() => {\n        Modal.setAppElement('body');\n    }, []);\n\n    const isLoading = problem || user || contest || submission;\n\n    return <Modal isOpen={isLoading} className=\"Modal\">\n        <div className=\"loader align-middle\"/>\n    </Modal>\n}\n\nexport default LoadingAnimation;\n",
    "import React, {useContext, useState, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {Link} from \"react-router-dom\";\n\nconst SubmissionList = ({match}) => {\n    const page = parseInt(match.params.page) || 1;\n    const {submissionActs, userActs, problemActs} = useContext(SuperContext);\n    const [submissionList, setSubmissionList] = useState(submissionActs.getList(page));\n    const [reload, setReload] = useState(false);\n\n    let unSubscribe = submissionActs.store.subscribe(() => {\n        setSubmissionList(submissionActs.getList(page));\n        unSubscribe();\n        setReload(!reload);\n    });\n\n    useEffect(() => {\n        setSubmissionList(submissionActs.getList(page));\n        // eslint-disable-next-line\n    }, [page])\n\n    const pages = submissionActs.totalPages();\n\n    return (\n        <div className=\"container\">\n            <table className=\"table table-bordered table-striped\">\n                <thead>\n                <tr>\n                    <th>Problem</th>\n                    <th>Verdict</th>\n                    <th>By</th>\n                </tr>\n                </thead>\n                <tbody>\n                {submissionList.map((submission) => <tr key={submission.id}>\n                    <td><Link to={`/submissions/${submission.id}`} >{problemActs.getById(submission.problem, 'title')}</Link></td>\n                    <td>{submission.verdict}</td>\n                    <td>{userActs.firstName(submission.by)}</td></tr>)}\n                </tbody>\n            </table>\n            {pagination('/submissions/page=', pages, page)}\n        </div>\n    );\n};\n\nexport default SubmissionList;\n\nexport const pagination = (url, pages=1, page=1) => {\n    let pageList = []\n    if(page > 2) {\n        for(let i = page - 2; i <= pages && i <= page + 2; i++) pageList.push(i);\n    } else {\n        for(let i = 1; i <= pages && i <= 5; i++) pageList.push(i);\n    }\n    return <ul className=\"pagination\">\n        {pageList.map(page => <li key={page} className=\"page-item\">\n            <Link className=\"page-link\" to={url + page.toString()} >{page}</Link>\n        </li>)}\n    </ul>\n}\n",
    "import React, {useContext, useState} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {getCurrentUser} from \"../../common/authService\";\n\nconst Submission = ({match}) => {\n    const {submissionId} = match.params;\n    const {submissionActs, userActs, contestActs, problemActs} = useContext(SuperContext);\n    const [submission, setSubmission] = useState(submissionActs.getById(submissionId));\n    const [contest, setContest] = useState(contestActs.getById(submission && submission.contest))\n    const [reload, setReload] = useState(false);\n\n    let unSubscribe = submissionActs.store.subscribe(() => {\n        setSubmission(submissionActs.getById(submissionId));\n        setContest(contestActs.getById(submission && submission.contest))\n        unSubscribe();\n        setReload(!reload);\n    })\n\n    const contestEnd = new Date((contest && contest.end_time) || Date.now().toLocaleString());\n    const currentUser = getCurrentUser() && getCurrentUser().id;\n\n    return (\n        <div className=\"container\">\n            {submission && <div>\n                <div><h5>Submitter: {userActs.fullName(submission.by)}</h5></div>\n                <div><h5>Contest: {contestActs.getById(submission.contest, 'title')}</h5></div>\n                <div><h5>Problem: {problemActs.getById(submission.problem, 'title')}</h5></div>\n                <div><h5 className=\"text-nowrap\">Verdict: {verdictProcess(submission.verdict)}</h5></div>\n                {contest && <div>\n                {(contestEnd <= Date.now() || submission.by === currentUser) && <span>\n                <div><h5>Your Code:</h5>\n                    <pre className=\"bg-light text-primary\">{submission.code}</pre>\n                </div>\n                    {renderResult(submission.details, submission.verdict)}\n                </span>}\n                {(contestEnd > Date.now() && submission.by !== currentUser) &&\n                <h2 className=\"text-danger\">You can't see full info during contest</h2>\n                }\n                </div>}\n\n            </div>}\n        </div>\n    );\n};\n\nexport default Submission;\n\nconst renderResult = (result, verdict) => {\n    const data = JSON.parse(result);\n    if (!data) return;\n    return <div>\n        <div>\n            <h5>Message: <pre>{data[0]}</pre></h5>\n        </div>\n        {verdict !== 'CE' && <table className=\"table table-bordered table-responsive\">\n            <thead>\n            <tr>\n                <td>Input</td>\n                <td>Output</td>\n                <td>Correct Output</td>\n            </tr>\n            </thead>\n            <tbody>\n            {data[1].map((item) => <tr>\n                <td>\n                    <pre>{item[0]}</pre>\n                </td>\n                <td>\n                    <pre>{item[1]}</pre>\n                </td>\n                <td>\n                    <pre>{item[2]}</pre>\n                </td>\n            </tr>)}\n            </tbody>\n        </table>}\n    </div>\n}\n\nconst verdictProcess = verdict => {\n    if (verdict === 'AC') return <span className=\"text-success\">Accepted</span>\n    if (verdict === 'WA') return <span className=\"text-danger\">Wrong Answer</span>\n    if (verdict === 'CE') return <span className=\"text-danger\">Compilation Error</span>\n    if (verdict === 'TLE') return <span className=\"text-danger\">Time Limit Exceed</span>\n    if (verdict === 'PJ') return <span className=\"text-info\">Judging. May take upto minute</span>\n    if (verdict === 'FJ') return <span className=\"text-danger\">Failed. Judges are offline</span>\n    return <span>Unknown verdict</span>\n}",
    "import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport SubmissionList from \"./submissionList\";\nimport Submission from \"./submission\";\n\nconst SubmissionRoute = () => {\n    return (\n        <Switch>\n            <Route path=\"/submissions/page=:page\" component={SubmissionList} />\n            <Route path=\"/submissions/:submissionId\" component={Submission} />\n            <Route path=\"/submissions\" component={SubmissionList} />\n        </Switch>\n    );\n};\n\nexport default SubmissionRoute;",
    "import React, {useContext} from 'react';\nimport {SuperContext} from \"../app\";\n\nconst WebSocketReceive = () => {\n    const {ws, contestActs, problemActs, submissionActs, userActs, tutorialActs} = useContext(SuperContext);\n    ws.addEventListener('message', (e) => {\n        const data = JSON.parse(e.data).data;\n        if(data.target === 'contest') contest(contestActs, data);\n        if(data.target === 'problem') problem(problemActs, data);\n        if(data.target === 'submission') submission(submissionActs, data);\n        if(data.target === 'user') user(userActs, data);\n        if(data.target === 'tutorial') tutorial(tutorialActs, data);\n    });\n\n    return <span />\n};\n\nconst contest = (contestActs, data) => {\n    contestActs.update(data);\n}\n\nconst problem = (problemActs, data) => {\n    problemActs.update(data);\n}\n\nconst submission = (submissionActs, data) => {\n    submissionActs.update(data);\n}\n\nconst user = (userActs, data) => {\n    userActs.update(data);\n}\n\nconst tutorial = (tutorialActs, data) => {\n    tutorialActs.update(data);\n}\n\nexport default WebSocketReceive;",
    "import React, {useState, useContext, useEffect} from 'react';\nimport {SuperContext} from \"../../app\";\nimport {FormattedHtml} from \"../../common/objectViewFuncs\";\n\nconst Tutorial = ({match}) => {\n    const {tutorialActs, userActs} = useContext(SuperContext);\n    const {tutorialId} = match.params;\n    const [tutorial, setTutorial] = useState(tutorialActs.getById(tutorialId));\n    const [reload, setReload] = useState(false);\n\n    tutorialActs.store.subscribe(() => {\n        setTutorial(tutorialActs.getById(tutorialId));\n        setReload(!reload);\n    });\n\n    useEffect(() => {\n        setTutorial(tutorialActs.getById(tutorialId));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tutorialId]);\n\n    return (\n        <div>\n            {tutorial && <div className=\"container\">\n                <div className=\"bgDarkBlue\">\n                    <h1>{tutorial.title}</h1>\n                    <h3>By {userActs.fullName(tutorial.by)}</h3>\n                </div>\n                <div className=\"bgAliceBlue\">\n                    <FormattedHtml text={tutorial.text}/>\n                </div>\n            </div>}\n            {!tutorial && <h1>Loading</h1>}\n        </div>\n    );\n};\n\nexport default Tutorial;",
    "import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport Tutorial from \"./tutorial\";\nimport TutorialList from \"./tutorialList\";\n\nconst TutorialRoute = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/tutorials/contestId=:contestId\" component={TutorialList}/>\n                <Route path=\"/tutorials/:tutorialId\" component={Tutorial}/>\n            </Switch>\n        </div>\n    );\n};\n\nexport default TutorialRoute;",
    "import React, {useEffect} from 'react';\nimport storeFunc from \"./store/configureStore\";\nimport NavBar from \"./apps/navBar\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {apiEndpoint, projectURLS, wssURL} from \"./configuration\";\nimport ContestRoute from \"./apps/contest/contestRoute\";\nimport UserRoute from \"./apps/user/userRoute\";\nimport ProblemRoute from \"./apps/problem/problemRoute\";\nimport LoadingAnimation from \"./common/loadingAnimation\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\n\nimport {contestActions} from \"./store/data/contests\";\nimport {userActions} from \"./store/data/users\";\nimport {submissionActions} from \"./store/data/submissions\";\nimport {problemActions} from \"./store/data/problems\";\nimport {getJwt, logout} from \"./common/authService\";\nimport SubmissionRoute from \"./apps/submission/submissionRoute\";\nimport WebSocketReceive from \"./store/webSocketReceive\";\nimport httpService from \"./common/httpService\";\nimport {tutorialActions} from \"./store/data/tutorials\";\nimport TutorialRoute from \"./apps/tutorial/tutorialRoute\";\n\nexport const SuperContext = React.createContext();\n\nconst App = () => {\n    const data = generateData();\n\n    useEffect(() => {\n        data.userActs.loadUsers();\n        if(getJwt()) {\n            httpService.get(apiEndpoint + '/login_check/').then(({data}) => {\n                if (!data.status) {\n                    logout();\n                }\n            })\n        }\n    }, [])\n\n    return (\n        <SuperContext.Provider value={data}>\n            <div>\n                <LoadingAnimation />\n                <NavBar/>\n                <WebSocketReceive />\n                <Switch>\n                    <Route path={projectURLS.contests} component={ContestRoute}/>\n                    <Route path={projectURLS.problems} component={ProblemRoute}/>\n                    <Route path={projectURLS.submissions} component={SubmissionRoute} />\n                    <Route path={projectURLS.tutorials} component={TutorialRoute} />\n                    <Route path={projectURLS.user} component={UserRoute}/>\n                </Switch>\n            </div>\n        </SuperContext.Provider>\n    );\n};\n\nexport default App;\n\n\nconst generateData = () => {\n    const store = storeFunc();\n    const jwt = getJwt();\n    const ws = new ReconnectingWebSocket(`${wssURL()}/?jwt=${jwt || 'hello'}`, '', {\n        maxReconnectionDelay: 60000,\n        minReconnectionDelay: 500,\n    });\n\n    const contestActs = new contestActions(store, ws);\n    const userActs = new userActions(store, ws);\n    const submissionActs = new submissionActions(store, ws);\n    const problemActs = new problemActions(store, ws);\n    const tutorialActs = new tutorialActions(store, ws);\n    return {\n        contestActs: contestActs,\n        userActs: userActs,\n        submissionActs: submissionActs,\n        problemActs: problemActs,\n        tutorialActs: tutorialActs,\n        store: store, ws: ws\n    }\n}\n",
    "import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport api from \"./api\";\n\nexport default function storeFunc() {\n    return configureStore({reducer,\n    middleware: [...getDefaultMiddleware(),\n        api\n    ]});\n}\n",
    "import ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport './common/cssLibrary.css';\nimport App from \"./app\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"
  ],
  "sourceRoot": ""
}